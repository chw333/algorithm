<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<title>KOI 13회 중등부 1.</title>
<meta name="generator" content="Namo WebEditor v3.0">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">

<table border="0" width="595">
    <tr>
        <td width="589" height="27" bgcolor="#CFD3FF"><p><font size="4"><b>&nbsp;&nbsp;휴리스틱을 
            알려주마 (4) - 백트래킹 2</b></font></td>
    </tr>
</table>
<ul>
    <p>&nbsp; 
    <table border="0">
            <tr>
                <td width="550"><p align="left" style="line-height:150%;"><font
                 size="2">&nbsp;&nbsp;저번 회에서는 현재 탐색하고 있는 해가 
                &quot;가능성이 있는지&quot;를 알아보는 방법 중 한가지로 해가 
                문제의 조건을 벗어나지 않는지를 검사하는 방법을 알아보았습니다. 
                하지만 이것으로는 백트래킹에서 효과적인 CUT을 기대하기 힘듭니다. 
                좀 더 효율적인 CUT을 위한 방법이 있는데 바로 해가 유망한지(promising) 
                살펴보는 것입니다.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;예를 
                들어서 생각해 보기로 하죠. 여러분이 마라톤 선수인데, 최고 기록을 
                내기 위해 무진 애를 쓰고 있습니다. 현재 자신이 가지고 있는 기록은 
                2시간 10분입니다. 그런데 당신이 뛰다 보니, 어느새 2시간 10분을 
                넘겨 버렸습니다. 그렇다면 아무리 당신이 앞으로 빨리 달린다 하더라도 
                기록은 2시간 10분을 초과할 것이 분명합니다. 즉, 최고 기록을 
                내기 위해서는, 더 이상 달리는 것이 무의미합니다. 레이스를 끝내고 
                다시 처음부터 달릴 방법을 생각해 보아야겠죠.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;그럼 
                이 사고를 확장시켜서 생각해 봅시다. 당신이 20km 지점을 지나고 
                있고, 현재 걸린 시간은 1시간 20분입니다. 그런데 당신은 앞으로 
                남은 22.195km구간을 아무리 빨리 달려도 1시간 이내에 달릴 수 
                없다는 것을 알고 있습니다. 그럼 이 사람은 최선을 다 해 달린다고 
                하면 과연 2시간 10분이라는 기록을 깰 수 있을까요? 아닐 겁니다. 
                왜냐하면 앞으로 남은 구간을 달리는 데에 걸리는 시간이 1시간 
                이상이므로, 결승점에 도착하는 시간은 아무리 빨라도 2시간 20분일테니까요.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;이것을 
                백트래킹과 관련지어서 생각해 보죠. 당신은 배낭에 물건을 잘 담아서 
                200원의 이익을 내는 방법을 알고 있다고 합시다. 그런데 당신이 
                배낭을 담는 도중에 현재 가방에 들어간 물건들의 가격은 100원이고, 
                앞으로 다른 물건들을 잘 담아 봐야 80원밖에 이익을 볼 수 없다고 
                합니다. 그렇다면 지금 배낭에 물건을 담고 있는 방법으로는 지금껏 
                알고 있는 방법(200원의 이익을 낼 수 있는..)보다 더 좋은 이익을 
                내기 힘들다는 것을 알 수 있죠.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;흠.. 
                이게 대충 유망한가(promising)에 대한 설명입니다. 그러니까 요약하자면 
                이런 겁니다. 현재 탐색하고 있는 방법이 가능성이 있으려면,</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;1) 
                문제의 조건을 벗어나지 말아야 하고</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;2) 
                현재 탐색하고 있는 방법이 현재 알고 있는 해보다 더 좋아질 가능성이 
                있어야 한다.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;이렇게 
                두 가지입니다. 만약 현재 탐색하고 있는 방법이 가능성이 없다면(위의 
                두 조건 중 하나라도 만족하지 않는다면) 포기하고 다른 방법을 
                모색해 봐야 할 것입니다. 마라톤의 경우 1번 조건을 만족하지 않는 
                경우는 달리기를 하지 않고 차를 타고 가거나 -_-;; 등등이겠죠.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;2)번에서, 
                현재 탐색하고 있는 방법이 현재 알고 있는 해보다 더 좋아질 가능성이 
                없는 경우는 어떤 경우일까요? 수식으로 나타내면 이렇습니다.</font></p>
                <p align="center" style="line-height:150%;"><font size="2">현재 
                알고 있는 가장 최대 이익 &gt;= 현재까지 이익 + 앞으로 얻을 수 
                있는 최대의 이익</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;물론 
                이것은 최대값을 찾는 문제냐, 최소값을 찾는 문제냐에 따라서 부등호의 
                방향이나 기타 등등이 바뀔 수 있음을 기억하십시오. 아무튼 위의 
                수식에서 볼 때, &quot;현재 알고 있는 가장 최대 이익&quot;이란 
                백트래킹 돌리면서 얻은 답들 중 가장 좋은 답을 말합니다. &quot;현재까지 
                이익&quot;이란 백트래킹 도중에 현재 탐색하고 있는 도중의 상황이겠죠. 
                그럼 &quot;앞으로 얻을 수 있는 최대의 이익&quot;은 뭐냐... 이건 
                &quot;앞으로&quot;의 일이니까 아무도 정확하게는 알 수 없습니다. 
                다만 우리는 이익의 '상한선'만을 대충 알 수 있을 뿐입니다. 우리는 
                이 이익의 상한선을 바운딩 함수(bounding function)이라고 부릅니다. 
                </font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;문제 
                하나를 예를 들어 생각해 보기로 하죠. 4명의 사람과 4가지의 일이 
                있습니다. 4명의 사람이 각각 한가지씩의 일을 맡아서 할 때, 네 
                사람의 만족도의 합을 최대로 하는 문제입니다. 각 사람A, B, C, 
                D가 일에 따라 느끼는 만족도는 다음 표와 같습니다.<br> &nbsp;</font> 
                
                <div align="center"><table border cellspacing="0" bordercolordark="white"
                 bordercolorlight="black">
                    <tr>
                        <td width="20" height="20"><p align="center" style="line-height:150%;">&nbsp;</td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">1</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">2</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">3</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">4</font></td>
                    </tr>
                    <tr>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">A</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">7</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">2</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">3</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">1</font></td>
                    </tr>
                    <tr>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">B</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">7</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">6</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">3</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">5</font></td>
                    </tr>
                    <tr>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">C</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">2</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">8</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">5</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">4</font></td>
                    </tr>
                    <tr>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">D</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">4</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">3</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">6</font></td>
                        <td width="20" height="20"><p align="center" style="line-height:150%;"><font
                             size="2">5</font></td>
                    </tr>
                </table></div>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;A가 
                2번 일, B가 4번 일, C가 3번 일, D가 1번 일을 맡는다고 할 때 
                이 것을 (2, 4, 3, 1)로 나타내도록 하죠. 대충 보면 위의 문제의 
                답이 (1, 4, 2, 3) = 26인 것을 알 수 있습니다. 아무튼 이제 우리가 
                컴퓨터의 입장이 되어 문제를 해결해 보기로 합시다. </font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;그런데 
                여기서 문제가 되는 것이 어떻게 바운딩 함수를 정해주느냐입니다. 
                여러 가지 방법이 있을 수 있지만, 간단한 방법은 이렇습니다. 만약 
                A, B, C, D에게 어떤 일을 배정해 준다고 할 때, 최대의 이익은 
                28을 넘지 못합니다. (28 = 7 + 7 + 8 + 6) 이 28이란 값은 각 사람의 
                일에 대한 만족도의 최대를 더한 값이죠. 이 네 명에게 다른 어떤 
                방법을 동원해 일을 맡기더라도, 이 이상의 만족도를 얻지는 못합니다. 
                말 그대로 앞으로 얻을 수 있는 이익의 상한이 되겠죠.</font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;마찬가지로 
                B, C, D에게 일을 정해주는 경우라면 바운딩 값은 21이겠고 (이걸 
                bounding (B)라고 나타내기로 합시다), C, D에게 일을 맡기는 거라면 
                14 (이건 마찬가지로 bounding (C)), D에게 일을 맡기는 거라면 
                6이 되겠지요.</font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;이제 
                바운딩 함수도 정해 졌으니 백트래킹을 시작합니다. 아직까지는 
                현재까지 알고 있는 가장 좋은 해라는 게 없으니 어떤 해가 유망한지에 
                대해서는 신경쓸 필요는 없습니다. 맨 먼저 A에게 무슨 일을 맡길 
                것인지를 정해야겠죠. 맨 먼저 1번 일을 맡겼습니다.</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-1.gif"
                 width="172" height="160" border="0"></font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;B에게는 
                1번 일을 맡길 수 없으니(문제의 조건을 벗어나죠..) 2번 일을 맡깁니다.</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-2.gif"
                 width="178" height="203" border="0"></font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;이 과정을 
                반복하면, 최초의 해인 (1, 2, 3, 4)에 도달할 수 있습니다.</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-3.gif"
                 width="165" height="321" border="0"></font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;드디어 
                해를 하나 찾았으므로, 이제 바운딩 함수를 이용할 수 있게 되었습니다. 
                이제 C에서는 4번을 선택하려고 하는데, 여기서 바운딩 함수에 걸려버립니다. 
                (1, 2, 4, ) = 17에다가 bounding(D)가 6입니다. 즉, 앞으로 얻을 
                수 있는 이익의 상한이 23이란 말인데, 이것은 지금까지 구한 답 
                23보다 좋은 답이 아닙니다. 따라서 여기에서 CUT을 할 수 있게 
                됩니다. 일일이 백트래킹 타고 파고 들어갈 일 없이요.</font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;이제 
                백트래킹 함수는 B로 되돌아와 B에게 3번 일을 맡기려 합니다. (1, 
                3, , ) = 10에다가 bounding(C)가 14니까 3번 일을 선택할 만한 
                가치가 있겠네요. (물론 1번 일과 3번 일은 이미 맡겨 버렸으니, 
                실제로 상한은 13이 될 겁니다. 다만 이렇게 바운딩 함수를 정밀하게 
                구하는 것은 시간이 꽤 걸리기 때문에, 울며 겨자먹기로 부정확한 
                바운딩 함수를 쓰는 겁니다)</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-4.gif"
                 width="219" height="313" border="0"></font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;이제 
                여기서 C에게 2번 일을 맡기려고 보면 (1, 3, 2, ) = 18, bounding(4) 
                = 6이 되므로 18 + 6 &gt; 24이므로 cut이 안되죠..</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-5.gif"
                 width="219" height="319" border="0"></font></p>
                <p style="line-height:150%;"><font size="2">&nbsp;&nbsp;(1, 
                3, 2, )가 되었는데 4번을 선택하자니 현재 이익이 (1, 3, 2, 4) 
                = 23이고 bounding 값이 0이 되어서 알고 있는 해 23보다 좋질 못하죠. 
                따라서 CUT. (1, 3, , )으로 되돌아 와서 C에 4번 일을 배정하려고 
                합니다. (1, 3, 4, ) = 14 bounding (D) = 6이므로 역시 CUT.</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-6.gif"
                 width="233" height="316" border="0"></font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;이제 
                (1, , , )로 되돌아 와서, B에 4번 일을 배정합니다. (1, 4, , ) 
                = 12이고 bounding (C) = 14이니 CUT이 안되죠. 아무튼 이제 하나하나 
                자세한 설명은 피하구요. 아무튼 이런 식으로 계속 나가게 되면 
                (1, 4, 2, 3) = 26이란 새로운 해를 찾게 됩니다. </font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-7.gif"
                 width="292" height="319" border="0"></font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;이제 
                긴말 않겠습니다. (1, 4, , )에서 C에 3 배정하려고 하면 bounding 
                cut되고 ( , , , )에서 A에 2 배정하면 bounding cut 됩니다 (2 
                + 21 &lt;= 26). A에 3이나 4를 배정해도 마찬가지로 cut되구요.</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-8.gif"
                 width="346" height="314" border="0"></font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;자, 
                이것으로 모든 백트래킹이 끝났습니다. 기쁘죠? (저는 죽겠슴다.. 
                이거 다 그리고 치고 캡쳐하고 붙여넣고... -_-;;) 이 데이터에서 
                답은 (1, 4, 2, 3) = 26이 됩니다. 그림에서 동그라미는 재귀호출을 
                한 회수입니다. 이 경우에는 10이 되겠네요. 위의 그림만 보고서는 
                실감이 안나시겠지만 이건 엄청나게 시간을 절약한 경우입니다. 
                만약 해가 유망한지에 대한 검사가 없었다면... (켁.. 또 그려야 
                되냐..)</font></p>
                <p align="center" style="line-height:150%;"><font size="2"><img src="approx4-9.gif"
                 width="499" height="341" border="0"></font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;(헥헥 
                T_T) 위의 그림처럼 65회나 재귀 호출을 해야 합니다. 무려 6분의 
                1이상이나 더 빠르게 답을 찾은 거죠. &nbsp;해가 유망한지에 대한 
                검사가 없다는 말은 항상 바운딩 함수 값을 무한대로 한다는 말과 
                마찬가지입니다. 만약 해가 문제의 조건을 벗어나지 않는지도 검사하지 
                않는다면 더 엄청납니다. 무려 341번의 재귀호출을 해야 하거든요. 
                이 경우에는 34분의 1이나 빠른 셈입니다.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;백트래킹과 
                무식한 재귀호출과는 이런 점에서 다릅니다. 백트래킹은 해가 가능성 
                있는지(저~~~기 위에서 설명한 1) 2)번 다 하든지 아니면 1)번만 
                하든지)를 검사하지만 재귀호출은 그렇지 않죠. 그리고 같은 백트래킹이라도 
                그 방법에 따라서 속도가 천지 차이입니다. 바운딩 함수를 정하는 
                방법도 여러 가지가 있습니다. 바운딩 함수가 정밀할수록(실제 상한에 
                가까울수록) 백트래킹은 빨라지겠지만 바운딩 함수를 구하는 데에 
                필요한 시간복잡도가 커질 것입니다. 따라서 둘을 적당히 절충을 
                해야겠지요. &nbsp;만약 바운딩 함수를 꼭 상한값이 아닌 적당히 
                큰 값으로 한다면 항상 최적해가 나오는 것은 아니겠지만 속도는 
                엄청나게 빨라지겠죠(이 경우는 진짜 휴리스틱이죠..). 아무튼 백트래킹은 
                정말 쓰면 쓸수록 재밌는 알고리즘 설계법입니다. 최적해를 구하는 
                알고리즘이 있는 문제라도 백트래킹으로 최적해를 구하도록 이리 
                저리 연구해 보시는 것도 재미있을 겁니다.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;저번 
                2회에서 그리디와 백트래킹을 결합하면 꽤 강력한 휴리스틱이 된다고 
                했는데, 설명하고 싶지만 너무 길어졌군요. 가장 간단한 짬뽕 테크닉은 
                백트래킹 전에 그리디를 통해 미리 답 하나를 구하는 거죠. 그럼 
                처음부터 바운딩 펑션을 이용해 CUT을 할 수 있으니까(그것도 지금까지 
                알려진 답이 꽤 좋기 때문에 엄청나게 많이 짤립니다) 매우 빠른 
                속도를 보여줍니다(실감이 안나시는 분들은 한번 해보시길..) 아니면 
                위의 문제에서처럼 백트래킹을 할 때 각각의 선택에서 1, 2, 3, 
                4 차례로 배정하는 게 아니라 그리디 순서대로(값이 큰 순서대로..) 
                배정하면 훨씬 더 답을 빨리 찾을 수 있겠지요. 기타 등등 여러 
                가지 짬뽕 테크닉이 있을 수 있습니다.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;다음 
                회에서는 부운영자이신 이은재님이 국소탐색(local search)에 대해서 
                써 주실 겁니다. 그럼 뽀뽀뽀 친구들, 다음 시간까지 안녕 -_-/~</font></td>
        </tr>
    </table>
    <p style="line-height:150%;"><font size="2">&nbsp;</font></p>
</ul>
</body>

</html></html>