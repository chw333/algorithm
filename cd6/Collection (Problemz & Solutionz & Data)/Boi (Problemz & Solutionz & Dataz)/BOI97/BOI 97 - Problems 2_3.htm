<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0037)http://www.cylog.gr/boi97/prob23.html -->
<HTML><HEAD><TITLE>BOI 97 - Problems 2.3</TITLE>
<META content="text/html; charset=ks_c_5601-1987" http-equiv=Content-Type>
<META content="5th Balkan Olympiad in Informatics 1997 unofficial site" 
name=Description>
<META 
content="boi, informatics, international, olympiad, balkan, 5th, greece, drama, kostas, symeonidis, participant, result, problem, photo, picture" 
name=Keywords>
<META content="Microsoft FrontPage 5.0" name=GENERATOR></HEAD>
<BODY background="BOI 97 - Problems 2_3.files/back.gif" bgColor=black 
link=#8080ff text=white topMargin=10 vLink=#6a6ab5>
<TABLE>
  <TBODY>
  <TR>
    <TD vAlign=top><FONT size=8>5th BOI '97</FONT><FONT 
      color=#ff0000>UNOFFICIAL SITE</FONT><BR>September 30th - October 5th, 1997 
      Drama - Greece 
      <P><FONT color=yellow size=5>Day 2. Problem 3. QuadTrees</FONT></P></TD></TR>
  <TR>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD vAlign=top>
      <P>A binary image is an image containing pixels colored by only two 
      colors, either black or white. We assume that each binary image is 
      composed by N x N pixels, where N is a power of 2 and N&lt;=1024. Given 
      two binary images I1 and I2, their intersection is a new binary image I3, 
      such that a pixel in I3 is black if and only if it is black in both I1 and 
      I2.</P>
      <P>A quadtree is a rooted tree which represents a binary image. The root 
      corresponds to the whole image. If the image is one colored (black or 
      white), the quadtree contains only the root labeled with 'b' if ot is 
      black, and 'w' if it is white. Otherwise, the root is labeled 'i' 
      (standing for "internal"), and the image is split to 4 equal parts (see 
      figure), which are also binary images. For each of these new subimages, 
      the procedure is the same. If any of these 4 subimages is 0-colored or 
      1-colored, then it is labeled 'b' or 'w' respectively. Otherwise, it is 
      split in 4 sub-subimages.<BR>This procedure may be repeated until the 
      pixel level at most.</P>
      <P>The numbering of the children of a parent node is illustrated in the 
      following figure. Subquadrant 1 is placed as the left-most child, and 
      subquadrant 4 is placed as the right-most child in the quadtree 
      representation. The same rule is followed recursively for all the levels 
      of the quadtree.</P>
      <CENTER>
      <TABLE>
        <TBODY>
        <TR>
          <TD><IMG border=0 height=82 
            src="BOI 97 - Problems 2_3.files/p231.gif" width=82></TD>
          <TD><IMG border=0 height=1 
            src="BOI 97 - Problems 2_3.files/white.gif" width=20></TD>
          <TD><IMG border=0 height=82 
            src="BOI 97 - Problems 2_3.files/p232.gif" width=82></TD>
          <TD><IMG border=0 height=1 
            src="BOI 97 - Problems 2_3.files/white.gif" width=20></TD>
          <TD><IMG border=0 height=153 
            src="BOI 97 - Problems 2_3.files/p233.gif" width=279></TD></TR>
        <TR>
          <TD align=middle>image 1</TD>
          <TD></TD>
          <TD align=middle>image 2</TD>
          <TD></TD>
          <TD align=middle>image 3</TD></TR></TBODY></TABLE></CENTER>
      <P>In the pre-order traversal of a quadtree, we first visit the root. 
      Then, after the root we visit its 4 children (if they exist), following 
      the above given ordering. For each of these 4 children, the same rule 
      applies in a recursive way, where every child is taken as the root of the 
      corresponding subtree.</P>
      <P>Your job is, given the preorder traversal of two quadtrees 
      (corresponding to two images) to find the number of nodes contained in the 
      quadtree of their intersection.</P>
      <P><B><FONT color=yellow>INPUT</FONT></B><BR>Your program should read the 
      input from the file INPUT.TXT as follows. The first line contains a 
      positive integer number denoting the size N of the images. The next two 
      lines contain the preorder strings of the quadtrees of two images (one 
      string per line). Each string represents the preorder traversal of the 
      quadtree of the corresponding image. In the preorder string, three 
      characters are allowed: 'i' denoting an internal node, 'b' denoting a 
      black quadrant and 'w' denoting a white quadrant.</P>
      <P><B><FONT color=yellow>OUTPUT</FONT></B><BR>Your program should write 
      the output into the file OUTPUT.TXT. The file containes one line, denoting 
      the total number of nodes (leaf + internal) of the quadtree corresponding 
      to the intersection.</P><B><FONT color=yellow>EXAMPLE</FONT></B> 
      <TABLE>
        <TBODY>
        <TR>
          <TD><B>INPUT.TXT</B></TD>
          <TD><IMG border=0 height=1 
            src="BOI 97 - Problems 2_3.files/white.gif" width=10></TD>
          <TD><B>OUTPUT.TXT</B></TD></TR>
        <TR>
          <TD vAlign=top><PRE>4
iiwwwbibbwwbw
iwbwiwwbw
</PRE></TD>
          <TD></TD>
          <TD vAlign=top><PRE>9
</PRE></TD></TR></TBODY></TABLE><B><FONT color=red>TIME LIMIT PER TEST: 3 
      seconds</FONT></B> </TD></TR></TBODY></TABLE></BODY></HTML>