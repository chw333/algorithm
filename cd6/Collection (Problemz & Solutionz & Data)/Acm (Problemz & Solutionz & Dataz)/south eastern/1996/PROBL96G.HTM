<HTML>
<HEAD>
<TITLE>E:\OTHERS\WORK\ACM\NEW\g.htm</TITLE>
</HEAD>
<BODY>
<HV>ACM Eastern European Regional Programming Contest.<BR>
Bucharest, Romania<BR>
October 19, 1996<BR>
<BR>
<B>Problem G<BR>
</B>TERM REDUCTIONS<BR>

<P ALIGN=JUSTIFY>
</P>

<P ALIGN=JUSTIFY>
Input File Name: G.DAT</P>

<P ALIGN=JUSTIFY>
Program Source File: G.PAS or G.C or G.CPP</P>
<BR>

<P ALIGN=JUSTIFY>
Input terms are defined inductively as follows:</P>
<BR>

<P ALIGN=JUSTIFY>
<I>i</I>) X is a term;</P>

<P ALIGN=JUSTIFY>
<I>ii</I>) if A and B are terms, then (A B) is also a term;</P>

<P ALIGN=JUSTIFY>
<I>iii</I>) no other terms.</P>
<BR>

<P ALIGN=JUSTIFY>
The terms are transformed by the rewriting rule: the pattern (((X A) B) C), where A, B, and C are terms, is replaced by ((A C)(B C)).</P>

<P ALIGN=JUSTIFY>
Reducing a term means applying this rule. A term is called reduced if it contains no subterm that can be further reduced. A term is considered as a subterm of itself, too.</P>

<P ALIGN=JUSTIFY>
Write a program that reads input terms and writes the corresponding reduced terms.</P>

<P ALIGN=JUSTIFY>
Input: The input file will contain several lines with one term per line. Each line will contain no more than 80 characters. The input terms will be syntactically correct. Possible input characters are X, (, and ) (without blanks in between). The input data will be terminated by a line containing a single character 0 (zero).</P>

<P ALIGN=JUSTIFY>
Output: For each input term, write its corresponding reduced term in a line, followed by a line containing digits in positions in which output term has parentheses, and an empty line. A term without parentheses must be followed by two empty lines. These digits mark the nesting level of parentheses in the corresponding positions. It is guaranteed that the maximum nesting level is less than 9, and that the number of reductions is finite, and that the output lines will be shorter than 80 characters. The top level is denoted by 0. Possible characters in the output terms are also X, (, and ).</P>

<P ALIGN=JUSTIFY>
Example:</P>

<P ALIGN=JUSTIFY>
INPUT:</P>
</HV>
<P ALIGN=JUSTIFY>
<TT>(((XX)X)X)</P>

<P ALIGN=JUSTIFY>
(((XX)(XX))X)</P>

<P ALIGN=JUSTIFY>
(XX)</P>

<P ALIGN=JUSTIFY>
0</P>
</TT><HV><BR>

<P ALIGN=JUSTIFY>
OUTPUT:</P>
</HV>
<P ALIGN=JUSTIFY>
<TT>((XX)(XX))</P>

<P ALIGN=JUSTIFY>
01  11  10</P>
<BR>

<P ALIGN=JUSTIFY>
((XX)((XX)X))</P>

<P ALIGN=JUSTIFY>
01  112  2 10</P>
<BR>

<P ALIGN=JUSTIFY>
(XX)</P>

<P ALIGN=JUSTIFY>
0  0</TT><HV></P>

</BODY>
</HTML>
