<HTML><HEAD>
<TITLE>1997-98 ACM North-Eastern European Regional Programming Contest</TITLE>
</HEAD><BODY BACKGROUND=acm_logo.jpg>

<TABLE WIDTH=100%><TR VALIGN=TOP>
<TD WIDTH=12%><B>Problem&nbsp;A</B><BR><A HREF="a.htm">References<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;B</B><BR><A HREF="b.htm">Sum of powers<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;C</B><BR><A HREF="c.htm">Game<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;D</B><BR><A HREF="d.htm">Crossword<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;E</B><BR><A HREF="e.htm">Magic of David Copperfield<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;F</B><BR><A HREF="f.htm">Puncher<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;G</B><BR><A HREF="g.htm">Flying Stars<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12.5%><B>Problem&nbsp;H</B><BR><A HREF="h.htm">Divide et unita<A></TD>
</TR></TABLE>
<HR>
<FONT SIZE=+2><CENTER><I><A HREF=problems.htm>
1997-98 ACM North-Eastern European Regional Programming Contest
</A></I></CENTER></FONT>
<FONT SIZE=+3 FACE=Arial><CENTER>
Problem B<BR>Sum of powers
</CENTER></FONT>
<TABLE>
<TR><TD><B>Input file</B></TD><TD>INPUT.TXT</TD></TR>
<TR><TD><B>Output file</B></TD><TD>OUTPUT.TXT</TD></TR>
<TR><TD><B>Time-limit/Test</B></TD><TD>20 seconds</TD></TR></TABLE> 	
<P>A young schoolboy would like to calculate the sum

<P><IMG SRC="image_b1.gif" WIDTH=85 HEIGHT=45>

<P>for some fixed natural k and different natural n. He observed that 
calculating i<SUP>k</SUP> for all i (1&lt;=i&lt;=n) and summing up 
results is a too slow way to do it, because the number of required 
arithmetical operations increases as n increases. Fortunately, there 
is another method which takes only a constant number of operations 
regardless of n. It is possible to show that the sum 
S<SUB>k</SUB>(n) is equal to some polynomial 
of degree k+1 in the variable n with rational coefficients, i.e.,

<P><IMG SRC="image_b2.gif" WIDTH=280 HEIGHT=41>

<P>for some integer numbers M, a<SUB>k+1</SUB>, a<SUB>k</SUB>, ... , 
   a<SUB>1</SUB>, a<SUB>0</SUB>.

<P>We require that integer M be positive and as small as possible. 
Under this condition the entire set of such numbers (i.e. M, 
a<SUB>k+1</SUB>, a<SUB>k</SUB>, ... , a<SUB>1</SUB>, a<SUB>0</SUB>) 
will be unique for the given k. You have to write a program to find such 
set of coefficients to help the schoolboy make his calculations quicker.

<P><FONT FACE=Arial SIZE=+1><B>Input</B></FONT>
<P>The input file contains a single integer k (1&lt;=20).

<P><FONT FACE=Arial SIZE=+1><B>Output</B></FONT>
<P>Write integer numbers M, a<SUB>k+1</SUB>, a<SUB>k</SUB>, ... , a<SUB>1</SUB>, 
a<SUB>0</SUB> to the output file in the given order. Numbers should be 
separated by one or more spaces. Remember that you should write the answer 
with the smallest positive M possible.

<P><FONT FACE=Arial SIZE=+1><B>Sample input</B></FONT>
<PRE><TT>2
</TT></PRE>
<P><FONT FACE=Arial SIZE=+1><B>Output for the sample input</B></FONT>
<PRE><TT>6 2 3 1 0
</TT></PRE>
</BODY></HTML>
