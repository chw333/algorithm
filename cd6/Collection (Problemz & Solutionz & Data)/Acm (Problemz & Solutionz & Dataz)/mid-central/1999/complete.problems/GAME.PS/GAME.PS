%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: game.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips game.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.11.22:1707
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (game.dvi)
@start
%DVIPSBitmapFont: Fa cmbx12 14.4 11
/Fa 11 118 df<B812E0A6D8000701FCC7FCB3B3B3B0B812E0A62B527DD132>73
D<93380FFFC00303B6FC031F15E092B712FC020316FF020FD9FC0014C0023F01C0010F13
F04A90C700037F902601FFFC020013FE49496F7E49496F7F49496F7F49496F7F49496F7F
4990C96C7F4948707FA24849707F48864A83481B804A83481BC0A2481BE04A83A2481BF0
A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D94
B51280A26C1B006C6D4C5B6E5E6C626D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D
01FE4AB5C7FC6D6D4A5B6D02E0011F5B023F01FC90B512F0020F90B712C0020394C8FC02
0016FC031F15E0030392C9FCDB001F13E0565479D265>79 D<91260FFF80130791B500F8
5B010302FF5B010FEDC07F013FEDF0FF4915F92701FFF80090B5FC4801C0130F48491301
49C87E000F824848814981003F824981007F82A283A200FF83A27FA2847F7F7F6E92C7FC
6C13E014FCECFFC015FE6CECFFE016FF6C16E017F86C16FE6C707E6C83846C836C6C826D
826D820107821301D9003F16801403DA003F15C01501DB001F14E01601707E171F7113F0
8383127C00FC82A283A37E19E0A37E6D17C05F6D17806D5D6D170001FC5D6D4B5AD9FFC0
4A5A02F8EC7FF8913AFFC003FFF0019F90B65A01075ED8FE0193C7FC26F8007F14FC4801
0714E0489026003FFEC8FC3C5479D24B>83 D<EC3FFF0103B512F0011F14FE017F6E7E90
B712E048D9C0077F48D9800113FC486D6C6C7E163F486D6D7E848284A2826C49816C5BA2
C648C7FC90C8FCA44BB5FC4AB6FC143F49B7FC130F013FEBF80790B512800003EBFC0048
13F0485B485B485B91C7FC485AA2485AA55EA26C6C5C5E6C6C147D6E01FD13F86C9026C0
01F9EBFFE06C9026F00FF014F06C90B5487E0001ED803F6C6C49487E011F01F8010313E0
010101C090C8FC3C387CB641>97 D<913803FF80023F13F891B512FE01036E7E010F15E0
013F01017F903A7FFC003FF8D9FFF06D7E48496D7E48496D7E5A4A6D13805A91C76C13C0
5AA24817E082485AA218F0A212FFA290B8FCA418E049CAFCA5127FA36C7EA36CEE01E0EF
03F06C7FEF07E06C7F6C6DEC0FC06C161F6C6DEC3F80D97FFCEC7F006DB4EB01FE6D9038
E00FFC010790B55A010115E06D6C1480021F49C7FC020013E034387CB63D>101
D<EB1FF8B5FCA612017EB3B3B3AFB612F8A61D537BD226>108 D<D93FF8D90FFEED7FF0
B591267FFFC0903803FFFE4BB500F0010F6D7E030702FC013F14E0031F6E90B67E922A3F
C07FFF01FE037F92267F001F903803F800000302FC6DD987E06D7EC6D9F9F8ED8FC0DAFB
E003DFC77F4B6D01DE143F02FF16FE4B4B8192C75CA24A5EA34A5EB3ACB6D8FC07B6D8E0
3FB6FCA668367BB571>I<D93FF8EB0FFCB591B57E030314E0030F14F84B8092393FC07F
FE92387E003F00034A6D7EC6EBF9F0DAFBE0814B7F14FF4B8192C7FCA25CA35CB3ACB6D8
FC0FB612C0A642367BB54B>I<D93FF8EB7FF0B50103B5FC031F14E0037F14F802F9B612
FE02FB01007FDAFFF8011F7F000302E06D7FC64A6D7F92C76C7F4A6E7F4A8283727EA285
84A21A80A284A21AC0AB1A8060A31A006061A24E5AA26E4A5B6E5C6103C0495B6F011F5B
6F495B9227FE01FFFEC7FC02FDB65ADAFC7F14F0031F14C0030749C8FC030013E093CAFC
B0B612FCA6424D7CB54B>112 D<147EA614FEA41301A31303A21307A2130F131F133F13
7F13FF1203000F90B6FCB8FCA5C66C48C8FCB3A8EE0FC0AB013FEC1F808017006D5C6DEB
807EEDE0FE6DEBFFFC01015C6D5C023F13C0DA03FEC7FC2A4D7ECB34>116
D<D91FFC913801FFC0B5020FB5FCA60003ED003FC6160FB3AD5FA35FA2017F5DA294B5FC
6D6CD903F713F0DC07E7EBFFC0903A1FFF801FC76D90B512876D1507010114FC6D6C13F0
0207018091C7FC42377BB54B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi7 7 1
/Fb 1 60 df<1238127C12FE12FFA2127F123B1203A31206A3120C121812381270122008
127A8614>59 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr7 7 7
/Fc 7 54 df<1306130C13181330136013E0EA01C0EA0380A2EA07005AA2121EA35AA312
7C1278A412F8AD1278A4127C123CA37EA37EA27EEA0380A2EA01C0EA00E0136013301318
130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0A2EA00F0A3
1378A3137C133CA4133EAD133CA4137C1378A313F0A3EA01E0A213C0EA0380A2EA070012
0E120C5A5A5A5A0F3B7DAB1A>I<13381378EA01F8121F12FF12FE12E01200B3AAB512F8
A315267BA521>49 D<13FF000313E0000F7F381E07F8383801FC486C7E0078137F00FC7F
6C1480A2141FA2127CC7123F1500A2147EA25C5C495A495AEB078049C7FC131E5B137090
38E00380EA01C0EA03803907000700120E1218003FB5FC5AB55AA319267DA521>I<13FF
000713E0487F381F01F8383C00FC147E007E137F80A3003C5BC7127EA25C5C495AEB0FE0
3801FF8091C7FC380003E0EB00F8147C147E80A21580A21238127C12FEA21500485B0078
137E5C383F03F86CB45A000713C0C690C7FC19277DA521>I<1438147814F8A213011303
1307A2130E131C1338A2137013E0A2EA01C0EA0380EA0700A2120E5A121812385A5AB612
E0A3C7EAF800A890383FFFE0A31B277EA621>I<0010130C001F137CEBFFF85C5C148049
C7FCEA1DF0001CC8FCA6137F381DFFE0381F81F0381E0078001C7F0018133EC77EA31580
A21230127C12FCA3150000F05B0070133E00785B6C13FC381F03F8380FFFE000035BC648
C7FC19277DA521>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmti10 10 2
/Fd 2 116 df<EB01C0EB03E0EB07F0A214E014C0EB038090C7FCAB13F0EA03FC487EEA
0F1F121CA21238A2485AA3EAE07EA25B1200A2485AA3485AA3485AA214E0EA0FC0A2381F
81C0A3EB0380A2EB0700A2131EEA0FFC6C5AEA01E0143879B619>105
D<14FE903807FF804913C090381F03E090383C00F049137001F813F0EBF00100011303A2
15E00003EB01C06DC7FC7F3801FFC014F8806C7F6D7E6D1380130F010013C0141F140FA2
123C127E00FE1480A2481400485B00E0131E00705B0078137C383E03F06CB45A6C5BD801
FEC7FC1C267AA422>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy10 10 2
/Fe 2 21 df<0060150600F0150F6C151F007C153E6C157C6C15F86C6CEB01F06C6CEB03
E06C6CEB07C06C6CEB0F806C6CEB1F00017C133E6D5B6D5B90380F81F0903807C3E09038
03E7C06DB45A6D90C7FC147EA214FF497F903803E7C0903807C3E090380F81F049C67E01
3E137C497F497F4848EB0F804848EB07C04848EB03E04848EB01F048C812F8003E157C48
153E48151F48150F00601506282874A841>2 D<EF0180EF07C0171FEF7F80933801FE00
EE07F8EE1FE0EE7F80DB01FEC7FCED07F8ED1FE0ED7F80DA01FEC8FCEC07F8EC1FE0EC7F
80D901FEC9FCEB07F8EB1FE0EB7F80D801FECAFCEA07F8EA1FE0EA7F8000FECBFCA2EA7F
80EA1FE0EA07F8EA01FE38007F80EB1FE0EB07F8EB01FE9038007F80EC1FE0EC07F8EC01
FE9138007F80ED1FE0ED07F8ED01FE9238007F80EE1FE0EE07F8EE01FE9338007F80EF1F
C01707EF018094C7FCAE007FB81280B912C0A26C1780324479B441>20
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi10 10 8
/Ff 8 122 df<121E123FEA7F80EAFFC0A213E0A2127F123F121E1200A4EA01C0A3EA03
80A2EA0700A2120E5A123C123812100B1A7A8917>59 D<EB03F013FF5AA2380007E0A449
5AA4495AA449C9FCA4137EEC03F8EC1FFE4A6C7E9039FCFC0FC09038FDE007D9FFC07F14
8048EB00035B5B49130712035BA34848495AA34B5A485AA24BC7FCA2485A92387E0380A3
48C738FC0700A3EDF80E127E5E5EED787848EC7FF0007C6E5A0038EC0F80293B7CB930>
104 D<EB03F013FF5AA2380007E0A4495AA4495AA449C8FCA4137EED07C0ED1FE0ED3FF0
49EBF838913801E0F8EC0381EC07033901F80E07141C143891387003F03A03F0E001C0D9
F1C0C7FCEBF38001FFC8FC485A6D7E14F014FC380FC1FEEBC07FEC1F80A248486C7E1670
A33A3F001F80E0A3ED81C0127E020F1380158391380787004814FE007C6D5A0038EB00F8
253B7CB92B>107 D<D803E0017F14FE3D07F803FFC007FF80486C48D9F00F13E03D1C3E
1F81F83F03F0DA3C00EB780126383F78D9FCF07F4AEBFDE000704990387DC0004AEB7F80
4A91C7FC91C700FE1301485A017E5CA21200494948495AA34E5A4848495AA24E5AA24848
495A95381F80E0A34848494890383F01C0A395383E03804848495AF10700190EF01E1E48
4849C7EA1FFC000F6E6E5A6CC7000EEC03E043267EA449>109 D<D803E0137F3A07F803
FFC0486C4813F03A1C3E1F81F8EC3C0026383F787F5C007049137C5C5C91C712FC485A13
7EA2120049495AA34B5A485AA24B5AA2485A92380FC070A3484890381F80E0A3EE01C048
5AEE0380EE07006F5A484814FE000FEC07F86CC7EA01F02C267EA432>I<01F816E0D801
FE9138E001F0D807FF903901F003F8D80F0F010314FC000E1380121C00381601923807E0
00D8701F167CA21878484848485A1838A2D8007E16784B4813705BA3484849C712E0A3EF
01C04848137EA2EF0380A3EF0700A203FE130E00015E6D487E0000D9039F5B903A7E0F0F
C0F0903A3FFE07FFE06D486C5B902703F8007FC7FC36267EA43B>119
D<90390FC007E090393FF00FF890397FF83FFC9039F07C783C3A01C03EF03E3A03801FE0
7ED80700EBC0FE000E14C115815AED80FC4890383F00701600A2C7FC147EA45CA4495A16
38A2121C267E03F0137012FF16E0130700FEEC01C0D8FC0FEB03803AF81EF8070039783C
7C1E397FF83FFC393FE01FF8390FC007E027267DA42F>I<13F8D801FE1470D807FF14F8
D80F0F1301000E1380121C1238ED03F0EA701FA33AE03F0007E0A3EA007EED0FC05BA348
48EB1F80A44848EB3F00A4157EA315FE4A5A00011303EBF8073800FC1F90387FFFF8EB3F
F9EB0FE1EB00014A5AA2000E495A121F486C485A127F4A5A010090C7FC007E133E007C5B
383801F8383E07F0381FFFC06C90C8FCEA01FC25367EA429>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmtt10 10 32
/Fg 32 125 df<010F133CA290381F807EA7013F13FE4A5AA4007FB612F0A2B712F8A26C
15F06C15E03A007E01F800A5EBFE0301FC5BA6003FB612E04815F0B712F8A26C15F0A23A
01F807E000A30003130F01F05BA76C486C5AA225337DB22C>35 D<147814FC13011307EB
0FF8EB1FE0EB3FC0EB7F80140013FE485A12035B485A120F5B121F5BA2485AA348C7FCA4
5A5AAC7E7EA46C7EA36C7EA27F120F7F12076C7E7F12016C7E137F1480EB3FC0EB1FE0EB
0FF8EB07FC130113001478164272B92C>40 D<1238127C12FEEA7F806C7E6C7E6C7E6C7E
12036C7E6C7E7F7FEB3F8014C0131F14E0130FA2EB07F0A3EB03F8A414FC1301AC130314
F8A4EB07F0A3EB0FE0A2131F14C0133F1480EB7F005B5B485A485A1207485A485A485A48
5A00FEC7FC127C1238164279B92C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F
000B0B708A2C>46 D<EB01FC90380FFF80497F017F13F090B57E488048EB07FEEBFC0148
486C7E4848EB7F8049133F4848EB1FC0A24848EB0FE0A348C7EA07F0A400FEEC03F8AC6C
14076C15F0A36D130F003F15E0A26D131F001F15C06D133F000F15806D137F6C6CEBFF00
6C6C485AEBFF076CEBFFFC6C5C6D5B011F13C06D5BD901FCC7FC25357DB32C>48
D<EB0380497E130FA2131FA2133F137F13FF1203127FB5FCA213DF139FEA7E1F1200B3AC
003FB512E04814F0B612F8A26C14F06C14E01D3478B32C>I<EB0FF8EB7FFF48B512C048
14F048804880391FF01FFE393FC003FF4848C6138090C7127F48EC3FC048141F6C15E0A2
150FA2127E123CC8FCA2151F16C0A2153F1680ED7F005D4A5A4A5A4A5A4A5A4A5A4A5A4A
5A4AC7FCEB03FE495A495AEB1FE0495A495A4848C8FCD803FCEB07C04848EB0FE0485A48
5A48B6FC5AB7FCA27E6C15C023347CB32C>I<EB0FFC90387FFF8048B512E04880488048
80391FF807FE393FE001FF496C7E1680153FA26C5A6CC7FCC8FC157F16005D4A5A4A5A14
3F90381FFFF8495B15C081816D7F90380007FCEC01FEEC007FED3F8016C0151F16E0150F
A3123C127EB4FC151F16C048143F6C15806C6C137F9039C001FF00393FF807FE6CB55A6C
5C6C5C00015C6C6C1380D90FFCC7FC23357CB32C>I<EC0FF881141F143FA2147F14FEA2
EB01FCEB03F8A2EB07F0EB0FE0A2EB1FC0EB3F80A2EB7F0013FEA2485A485AA2485A120F
5B485A123F5B48C7FC5A90B612FC16FEA46C15FCC8EAFC00A991387FFFF891B512FCA46E
13F827347EB32C>I<000FB512FE4880A45D01C0C8FCACEBC3FE9038DFFF8090B512E081
81819038FE07FE9038F000FF01C0EB7F8049133F16C06CC7121FC8FC16E0150FA3121812
3C127EB4141F16C0153F5A6CEC7F806C6CEBFF009038C003FE383FF80F6CB55A6C14F06C
5C00015C6C91C7FCEB1FF823347CB22C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80
EA1F00C7FCAE121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C>58
D<003FB512E04814FCB67EEDFF806C15C07E3A03F8003FE0ED1FF0150F150716F81503A5
150716F0150FED1FE0ED3FC090B6128016005DA2EDFF8016C09039F8007FE0ED0FF0ED07
F81503ED01FCA2ED00FEA6150116FC15031507ED0FF8153F003FB612F04815E0B712C016
806CECFE006C14F827337FB22C>66 D<003FB512E04814FCB67EEDFF806C15C06C15E038
03F800ED1FF0150FED07F8150316FC1501A7150316F81507ED0FF0151FEDFFE090B6FC16
C01680EDFE005D15E001F8C8FCAE383FFF80487FB57EA26C5B6C5B26337FB22C>80
D<3A1FFF03FFE048018713F048138FA26C13876C010313E03A01FE01FE005D3800FF035D
EB7F875DEB3FCF5DEB1FFF5D7F5D7FA26D90C7FCA26D5AA4497EA2497FA2497FA2ECEFE0
EB1FCFECC7F0EB3F8781EB7F0381EBFF0101FE7F00011300497F000380491480D83FFEEB
FFF8486C4813FCB5008313FEA26C010113FC6C486C13F827337EB22C>88
D<3801FFF0000713FE486D7E48804880819038C01FF8391F8007FC380F0001000680C8FC
A2140FEB07FF137F48B5FC12075A4813F8383FFC00EA7FE0EAFF8090C7FC5AA36C1301A2
387F8007383FE03F90B612FC6C15FE7E6C143F0001EBFC1F3A007FC00FFC27247CA32C>
97 D<EA3FF8487E12FFA2127F123F1201A9EC0FF0EC7FFE01FDB5FC90B6128016C016E0
9138F03FF09138C00FF891380003FC5BED01FE491300A216FF167FA816FF6D14FE15017F
ED03FC91388007F8ECC00F9138F03FF091B512E016C001FD148001FC14000000EB7FFC90
38780FF0283380B22C>I<903803FFF0011F13FC017F7F90B6FC4815805A48EB007FD80F
F8EB3F00D81FE0131E4848130C4990C7FC127F90C9FCA25A5AA67E7EA26DEB0F806C6CEB
1FC07F6C6C133FD80FFCEB7F803907FF81FF6C90B512006C5C6C5C6D5B011F13E0010390
C7FC22247BA32C>I<EC07FF4A13805CA28080EC003FA9EB0FF8EB3FFE90B512BF4814FF
5A5A380FFC0F381FF00349C6FC4848137F485A153F90C7FC5A5AA87E6C147FA26D13FF6C
7E5C381FF007380FFC1F6CB612FC6C15FE6CECBFFF6C143FD97FFC13FE90390FF01FFC28
337DB22C>I<EB03FE90381FFFC0017F13F090B57E488048803907FE03FF260FF8001380
D81FE0137F4848EB3FC049131F127F90C713E0150FB7FCA516C048C9FC7E7E7FED07C06C
6CEB0FE07F6C6C131FD80FFCEB3FC03907FF80FF6C90B512806C15006C5C013F13F8010F
5B0101138023247CA32C>I<ED03F0903907F81FFC90391FFE3FFE017FB5FC90B7FC5A48
ECFE7F3A07FE1FF87ED9F003133C000FECFC00EBE001001F80EBC000A5EBE001000F5CEB
F00300075CEBFE1F90B55A5D485C5DD9DFFEC7FCEBC7F801C0C8FCA27F6CB512E015FE6C
ECFF80000F15C04815E04815F09039C0003FF848C7EA03FC007E140000FE15FE48157EA4
6C15FE007E15FCD87F801303D83FE0EB0FF8D81FFEEBFFF06CB612E06C15C06C1580C6EC
FE00013F13F80103138028387EA42C>103 D<EB0380497E497E497EA36D5A6D5A6D5A90
C8FCA7383FFFE0487FB5FCA27E7EEA0007B3A6007FB512FCB612FE15FFA215FE6C14FC20
347AB32C>105 D<1407EC0F80EC1FC0EC3FE0A3EC1FC0EC0F80EC070091C7FCA790B512
C04814E05AA27E7EEB000FB3B3EC1FC0123C007E133FB4EB7F80903801FF00EBFFFE5C6C
5B6C5B6C5B000790C7FC1B467CB32C>I<383FFFF0487FB5FCA27E7EEA0003B3B3A3003F
B612804815C0B712E0A26C15C06C158023337CB22C>108 D<3A3FC1F803F03A7FE7FC0F
F8B538FE3FFC6E487E6C91B5FC7E3B07FE1FFC3F8001FC13F89039F80FF01F01F013E0A3
01E013C0B2D83FFC01F813F03B7FFE1FFC3FF8B5393FFE7FFCA23B7FFE1FFC3FF83B3FFC
0FF81FF02E2481A32C>I<393FF807F8397FFC3FFE00FF90B5FC01FD806CB67E6C810001
EBF81F9138C00FF0EC800714005BA35BB13B3FFFE03FFF80486D4813C0B56CB512E0A26C
496C13C06C496C13802B2480A32C>I<EB07FCEB1FFF017F13C048B512F048804880390F
FC07FE391FF001FF497E4848EB7F8049133F48C7EA1FC0A300FEEC0FE0A76C141F6C15C0
A26D133F003F15806D137F6C6CEBFF00EBF803390FFE0FFE6CB55A6C5C6C5C6C6C13C001
1F90C7FCEB07FC23247CA32C>I<393FF80FF0397FFC7FFED8FFFDB5FC90B612806C15C0
6C15E000019038F03FF09138C00FF891380003FC5BED01FE491300A216FF167FA816FF6D
14FE15017FED03FC91388007F8ECC00F9138F03FF091B512E016C001FD148001FC1400EC
7FFCEC0FF091C8FCAC383FFFE0487FB57EA26C5B6C5B283680A32C>I<D83FFFEB3FC048
903881FFE0B5008713F0028F13F86C019F13FC6C13BF39003FFFE3ED01F89138FC00F04A
13604A1300A25CA25CA35CAD003FB512F04880B6FCA27E6C5C26247EA32C>114
D<90383FF8700003B512F85A5A5A5A387FC01F38FF000700FC1303A36CEB01F06C6CC7FC
EA7FFC383FFFF06C13FF6C14C06C14E0C614F0010F13F89038007FFCEC03FE003CEB00FF
007E143F12FE7EA26D137F6D13FEEBF00790B512FC15F815F015E000F8148039701FFC00
20247AA32C>I<130F497E133FA8003FB6FC481580B7FCA36C150026003F80C7FCAFED03
80ED07C0ED0FE0A3151F02C013C0011F133F9138F07F806DB5FC16006D5B6D13F801005B
EC3FC0232E7EAD2C>I<3A7FFF01FFFCB5008313FE14C7A214836C010113FC3A03F0001F
806D133F00011500A26D5B0000147EA26D13FE017E5BA36D485AA31483011F5BA214C701
0F5BA3903807EFC0A214FF6D5BA36D90C7FCA26D5A27247EA32C>118
D<1278A212FCB3B3B3A71278A206416DB92C>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx10 10 11
/Fh 11 118 df<EA0780EA1FE0EA3FF0EA7FF8A2EAFFFCA4EA7FF8A2EA3FF0EA1FE0EA07
80C7FCA9EA0780EA1FE0EA3FF0EA7FF8A2EAFFFCA4EA7FF8A2EA3FF0EA1FE0EA07800E25
7AA41B>58 D<B612FEA539007FFC00B3B3ABB612FEA51F397EB824>73
D<D903FF1306013FEBE00E90B5EAF83E48ECFE7E48ECFFFE3807FE01390FF0003F484813
0F484813031501485A1500167E12FFA2163E7F7F7F6D91C7FCEBFF806C13F8ECFFC015FC
6C14FF6C8116E06C816C816C816C816C7E011F801307D9003F14801403EC001F030713C0
818100788012F8167FA36C1680A27EEEFF007E6D5C01E0130101F8495A9039FF801FF891
B55A00FC5DD8F83F1480D8E00749C7FC39C0007FF02A3B7BB935>83
D<903801FFC0010F13FC017F7F90B6FC48018013802607FE0113C0EA0FFC13F8EA1FF000
3F6D1380A24848EB7F00151C92C7FC12FFA9127F7FA2123F6DEB03E0121F6C6CEB07C07F
6C6CEB0F8000019038E03F006CEBFFFE6D5B010F13F00101138023257DA42A>99
D<49B47E011F13F0017F13FC90B57E0003903881FF803907FE007F4848EB3FC04848EB1F
E05B003FEC0FF0A2485A16F8150712FF90B6FCA401E0C8FCA4127FA27F123F16F86C7E6C
6C13016DEB03F06C6CEB07E00001EBE01F6C90B51280013F1400010F13FC010013C02525
7DA42C>101 D<01FEEB7FC000FF903803FFF84A7F021F7F91383F03FFDA780113800007
13F06C6C486C13C05C5CA391C7FCB3A2B5D8FC3F13FFA530257DA435>110
D<903801FFC0010F13F8017F13FF90B67E0003018013E03A07FE003FF0D80FF8EB0FF800
1F81491307003F81491303007F81A300FF1680A9007F1600A36C6C495AA2001F5D6D130F
6C6C495A6C6C495A6C6C6CB45A6C90B55A6C6C91C7FC011F13FC010113C029257DA430>
I<01FFEBFF80B5000F13F8023F7F91B6FCDAFE071380DAF00113C000079039C0007FE06C
4914F091C7123F17F8161F17FCA2160F17FEA917FC161FA217F8163F17F06EEB7FE06E13
FFDAF00113C0DAFC07138091B5EAFE00023F5B020F13F0020190C7FC91C9FCABB512FCA5
2F357EA435>I<9038FE07F000FFEB1FFC4A7E4A7E02F8138002E113C0EA07FF6C13C1A2
02801380A2ED7F00151C91C8FCB3B512FEA522257EA427>114 D<131FA55BA45BA25BA2
5A5A5A001FEBFFE0B6FCA4000390C7FCB115F8A86CEB01F014816CEBC3E090387FFFC06D
13806D1300EB03FC1D357EB425>116 D<01FFEC3FC0B5EB3FFFA5000714016C80B3A25D
A25D6C5C4B13E06CD9C03E13FF90387FFFFC6D5B6D13E00103130030257DA435>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx12 17.28 6
/Fi 6 110 df<DEFFFEED03C0057FD9FFF014070407B600FE140F043F6F6C131F4BB800
E0133F030705F8137F031F05FE13FF037F913AF8003FFF014AB6C7000313C3020702F091
38007FE74A0280031FB5FC4A49C97E027F01F8160391B548824902C082494A834991CB7E
4949844949844949845D498690B55A4B8448875D5A4891CD127FA21D3F485BA25A1D1F5C
5AA34899C8FCA25CA4B5FCAE7EA2073FB812F8A280A27EA36C95C70003ECC00080A27EA2
6C7FA36C807E817E816D7F7F816D7F6D7F6D7F6D6E5E6D14E06D6E5E6E13FC021F6D5E6E
D9FFC0157F6E02F0EDFFDF020102FF0203138F6E6C02F8013F1307031F91B6EAFE010307
9438F8007F03014D131FDB003F04C0130704074BC71201DC007F02F091C8FC050091CBFC
6D6677E37F>71 D<001FBEFCA6481D804AC79138F0000F02F018000280193F49C8170F49
8649864986885B491B7FA2007F1DC0491B3FA490C9181FA6481DE0481C0FA5CA95C7FCB3
B3B3021FBA7EA763617AE070>84 D<913803FFFC027FEBFFE00103B612FC010F15FF013F
16C090277FFE001F13F0D9FFE001037F486D6D7F6E6D7F486D6E7E717F486D6E7FA2717F
A285A26C4980856C5B6C5B6D5AEB1F8090C9FCA64BB6FC157F0207B7FC143F49B5EAFE07
010714C0011FEBFC00017F13E090B51280000391C7FC4813FC485B485BA2485B5C5AA2B5
5AA45FA36C6D5C5F173D6C6D027D7F6C6D02F9EBFF806ED903F114FF6C01FED90FE01580
00039039FF807FC06C91B5487E6C6C9138FE001F011F02F87F010302E001001400D9001F
90CBFC49437CC14E>97 D<92380FFF8092B512FC0207ECFF80023F15E091B77E49D9FE01
13FC01079039F0003FFE4901C06D7E494901077F4948C76C7F017F8349486E7F48498048
84485B727E5A4A8248173FA24884A25C4883A21A80A2B5FCA291B9FCA41A0002C0CBFCA5
7EA56C7FA27EA2191F6C6DEE3F807EF17F006C7F19FE6C7F6C6D4B5A6D6C15036D6D4A5A
6D6DEC1FF06D01F04A5A010301FC49B45A6D9026FFC00F90C7FC6D6C90B55A021F15F802
0315C0DA007F91C8FC030313E041437CC14A>101 D<903807FF80B6FCA7C6FC7F7FB3A7
EF0FFF94B512F0040314FC040F14FF043F8193267FC03F7F922781FE001F7FDB83F86D7F
DB87E07F4C6D7FED8F80039FC78015BE03BC8015FC4B825DA35DA35DB3B2B7D8F007B712
80A751647BE35A>104 D<902607FF80D90FFFEE7FF8B691B500F00207B57E040302FC02
1F14E0040F02FF027F14F8043F6F48B67E93267FC03F9027C003FE017F922781FE001F90
27E00FF0007FDB83F86D9026F01FC06D7FC6DA87E06D4AC77E6D4A6DD9F83E6E7F6DD98F
805E039FC76E488203BEEEFDF003BC6E4A8003FC16FF4B4D824B5FA34B94C8FCA34B5EB3
B2B7D8F007B7D8803FB612FCA77E417BC087>109 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmbx12 24.88 8
/Fj 8 115 df[<0803B500C017F04FB600FE4C7E077FDBFFE015030607B800FC1507063F
05FF150F4DBA00E0141F050F07F8143F053F73147F94BC14FF0403F3C001040F9326FC00
07ECE007043F4BC86C6D5A4C03E00307EBFC1F4BB7C900016D5A4B03F8706C6C5A030F03
C0051F90B5FC4B92CB12074B02FC180192B648844A03E0854A4B191F4A92CD7E4A4A864A
4A864A4A864A5C91B64886494B874D874992CFFC498B495C4C88498B495C8D495C8D90B6
5AA2488C5E5A227F485DA2223F5A93D1FCA25A221FA2485CA27C5A9FC9FC5AA45DA3B6FC
B27EA381A20A0FBB12F8A27EA46C80A37E99C96C02F8C7FC827EA36C81A27E827E827F82
7F827F6D80A26D806D817F836D816E806E806E806E6E97B6FC6E6E7E6E816E03F0606E81
033F02FE606F6E6C5F6F03E05F030303FC173F6F03FFEFFFFD6F6C03F0030313F87003FF
031F497E040F04FE0103B5EAE01F040393B8487E0400517E053FF20001050F07FCEB007F
050107F0141FDD003F06C01407060795C81201DE007F04F8ED00700701048093C8FCDF00
0302E0CDFC>157 146 115 271 183 71 D[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E0
20F88C20FFC700030380C8000782E2003F15E00B07810B008178800C1F80788078817881
8A78818E8B8EA27980A28EA28B8EA42380AC2300A56A676AA3555CA26A9CB65AA2545D54
5D5492C7FC545C660C7F14F853B65A0B075D0B3F5D0A07B7C8FC95BB5A20F820E020800D
FCC9FC1FF09CCAFC1EF00BF8CBFC06C0D0FCB3B3B0BCFCAA>137
142 120 269 159 80 D[<ED1FF0017FB5FCB7FCAAEA003F1307A27FB3B196381FFFC006
03B6FC063F15E04DB712FC050716FF051F17C0057F17F094B97E04F3DAC00F14FE04F701
FCC78093B500E0023F8095C8000F8005FC0303804D6F8005E06F804D707F4D707F94CA80
4C71805E4C71808BA27680A28B888BA38BA3888BA52080B02000A56764A267A3676467A2
525CA267705F70625291C7FC704D5B71607193B5FC714B5C714B5CDCBFFC030F5CDC1FFF
4B14804B6C01C0027F91C8FC7001F00103B55ADBFC0101FF013F5C4B6C91B712F04B6D5F
051F17804B01074CC9FC4B010116F04B6D6C158092C8000F02FCCAFC90CB6C90CBFC>
113 144 121 270 129 98 D<94383FFFC0040FB512FE93B712E0030716FC031F16FF03
7F17C04AB912F0020784021FDAF80114FE4A912680003F7F4A49C7000F8049B500F80203
80494A6E80494A6E804902808149727F93C96C7F495B4949707F90B58586484A19804885
5D481CC086481CE05D5A861DF05AA25D5AA21DF887A2B6FCA292BBFCA51DF0A203C0CDFC
A77EA4817EA37EA2817EA26C6EF00FF0A26CF31FF8816C1B3F6C6E19F01C7F6D6D19E06D
6E17FF6D6E4C13C0704C13806D6E5E6D02FC041F13006D6E4C5A6D6E6CEDFFFC6D6C02E0
02035B6E02FC020F5B6EDAFFE090B55A020792B75A6E96C7FC020060033F17F8030717E0
030194C8FCDB003F15F8040315C0DC000F01F0C9FC5D5F7ADD6A>101
D[<ED1FF0017FB5FCB7FCAAEA003F1307A27FB3B3B3B3B3B3AAB912C0AA>50
143 119 270 65 108 D<DB3FE0912601FFFC943801FFFC017FB5033FD9FFE0043FEBFF
E0B792B600FC93B612FC060703FF030715FF061F04C0021F16C04E704A8295B86C91B87E
4D7149834DD9F8036E49D9F803804DD980006E49D98000804D48C7003F6D4948C7003F7F
DD1FF06E9126801FF06E80D8003F4B484E5A0107DB7F806E9126C07F806E804DC86F48C8
816DDAE1FEF0E1FEDCE3FC6FDAE3FC81DCE7F8DEF7F8844D61DCEFE0F0FFE07585DCFFC0
614D4F84A294C993C9FCA24C61A34C61A44C61B3B3AEB900E090B900E090B912E0AAB35D
77DCC2>I<94381FFFF00407B612C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A85
020F9126FC007F14E04A02C0010780027F49C814FC91B500F8033F7F494A6F7F4902C003
0780494A6F804991C96C804987494970804949717FA290B548717F48884B83481D80A248
4A7114C0A2481DE0A2481DF0A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C1DF86F5F
A26C1DF0A36C1DE06F5F6C1DC0A26C1D806F5F6C1D006F5F6C646D6D94B55A6F5E6D636D
6E4B5C6D02E0030F5C6D6E4B5C6D6E4B5C6D02FE92B6C7FC6D6CD9FFC0010714FC6E02FC
017F5C6E91B85A020719C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9FC04
0715C0DC001F01F0CAFC675F7ADD74>111 D<DB7FC0903803FF8090B6023F13F0B791B5
12FE4D6E7E0507814D814D814D8194267FFE1F7F9426FFF03F7F04C113C0DE007F7FD800
3FECC3FE0107DAC7FC90B612805F6DECCFF05F16DF5F16FF5F73140094C7FC735B735B4C
6E5B735B735B4C0200138097C8FCA35EA65EB3B3A9B912FCAA515D79DC5F>114
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr10 10 61
/Fk 61 123 df<DA07FC13FC91393FFF07FF49B5009F1380903B03FC07FF8FC0903B0FE0
03FE0FE0903A1FC007FC1F90383F800FD97F0013F8017EED0FC001FE903907F007804992
C7FC1201ACB812F8A32801FC0007F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30
>11 D<EC07F8EC3FFE49B57E903903FC07C090390FE001E090381FC0034948487E90387F
000F137E13FE496D5A00016E5A6F5A92C8FCA9ED07F0B7FCA33901FC001F1507B3AA486C
497E267FFFE0B512C0A32A3B7FBA2E>I<121E123FEA7F80EAFFC0A7EA7F80ABEA3F00AA
121EAA120EC7FCA8121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A3C7ABB17>33
D<001E130F003FEB1F80397F803FC039FFC07FE0A201E013F0A2007F133F003F131F001E
EB0F7000001300A4484813E0A339038001C0A23907000380A2000EEB070048130E003C13
1E0038131C001013081C1A7DB92A>I<14E01301EB03C0EB0780EB0F00131EA25B5B13F8
5B12015B12035B1207A2485AA2121F90C7FCA25AA2123EA2127EA5127C12FCB2127C127E
A5123EA2123FA27EA27F120FA26C7EA212037F12017F12007F13787F7FA27FEB0780EB03
C0EB01E01300135278BD20>40 D<126012F012787E7E7EA26C7E6C7E7F12017F12007F13
78137CA27FA2133F7FA21480A2130FA214C0A5130714E0B214C0130FA51480A2131FA214
00A25B133EA25BA2137813F85B12015B12035B485A48C7FCA2121E5A5A5A126013527CBD
20>I<121E123FEA7F80EAFFC0A213E0A2127F123F121E1200A4EA01C0A3EA0380A2EA07
00A2120E5A123C123812100B1A7A8917>44 D<B512FCA616067F941C>I<121E123FEA7F
80EAFFC0A4EA7F80EA3F00121E0A0A7A8917>I<150C151EA2153CA31578A315F0A3EC01
E0A3EC03C0A3EC0780A3EC0F00A3141EA35CA35CA35CA3495AA3495AA2495AA349C7FCA3
131EA35BA35BA35BA3485AA3485AA3485AA348C8FCA3121EA35AA35AA35AA212601F537B
BD2A>I<EB03F8EB1FFF017F13C09038FE0FE03901F803F048486C7E48486C7E4848137E
A248487FA2003F1580A290C7121F4815C0A64815E0B36C15C0A56C6CEB3F80A3001F1500
A26C6C137EA26C6C5B6C6C485A6C6C485A3900FE0FE090387FFFC0011F90C7FCEB03F823
3A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C
3879B72A>I<EB0FF0EB7FFE48B57E3903E03FC03907800FE0390E0007F0486D7E48806E
7E5A6E7E127CB4FC16807F157FA26CC7FCA2001C14FFC8FC1600A25C5D5D14035D4A5A4A
5A5D4A5A4AC7FC143E5C5C495A495A495A5C49C8FC011EEB03805B5B491307484814005B
485A48C75A48B6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FE0
3903E003F0D807807F496C7E488013C0486C6C7EA4120F495AD803805BC7FCA25D14035D
4A5A5D4A5AEC7F80D91FFEC7FC5CECFF809038000FE0EC03F06E7E6E7E81157F1680A2ED
3FC0A216E0A2123E127F487EA316C090C7FC48147F007C158012706CECFF006C5C000F49
5A3907C003F83903F80FF06CB512C06C6C90C7FCEB07F8233A7DB72A>I<157815F8A214
011403A21407A2140F141FA2143F147B147314F3EB01E314C31303EB07831403130F131E
131C133C1378137013F0EA01E013C012031380EA07005A120E121E5A123812785AB712F8
A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0004140C000F143C9038F003FC90
B55A5D5D158092C7FC14FC000E13F090C9FCABEB07F8EB1FFE90387FFF809038F80FC039
0FE007E090388003F0496C7E000E6D7E1206C87EA2157FA31680A31218123E127F5AA316
005A00785C00705CA26C495A5D6C495A6C495A6C6C485A3903E03F806CB5C7FC38007FFC
EB1FE0213A7CB72A>I<1238123C123F90B612E0A316C0481580A216000078C7120E0070
5CA25D00F05C5A5D4A5AC7FC4A5A4AC7FC140EA25C143C14381478147014F0A2495AA213
03A2495AA2130FA3131F5CA3133FA5137FA96DC8FC131E233B7BB82A>55
D<EB03F8EB1FFF017F7F9038FC07E03901F001F048486C7E48487F000F147C4848137E15
3E003F143F48C7FC1680A248141F16C0A516E0A47E153FA27E7F001F147FA26C6C13DF12
073903E0019F3901F8071F2600FFFE13C0EB7FFCEB1FF8EB00801400ED3F80A31600A200
0F147E487E486C5B5D14015D49485A6C48485A001EEB1F80260FC07FC7FC3807FFFC0001
13F038003FC0233A7DB72A>57 D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB0
121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A247AA317>I<121E123FEA7F80EAFFC0
A4EA7F80EA3F00121EC7FCB0121E123FEA7F8012FF13C0A3127F123F121F1201A4EA0380
A312071300A2120E121E121C5AA212100A347AA317>I<007FB812F8B912FCA26C17F8CC
FCAE007FB812F8B912FCA26C17F836167B9F41>61 D<EB3FF03801FFFE0007EBFF80390F
C03FC0391E000FE048EB07F048EB03F8A200FE14FC7EA4127E003C14F8C7120715F0140F
EC1FE0EC3F801500147E5C5C495A5C13035C5C1307A291C7FCAA90C8FCA8130F497E497E
497EA46D5A6D5A6DC7FC1E3B7CBA27>63 D<1538157CA315FEA34A7EA34A7FA34A7F153F
A2020F7FEC0E1FA2021E7FEC1C0FA2023C7FEC3807A202787FEC7003A202F07FECE001A2
0101804A7EA20103814A137FA201078191C7123F91B6FC4981A2010EC7121F011E81011C
140FA2013C8101381407A201788101701403A201F08116011201486C81D80FFE02071380
B500C090B512FEA3373C7DBB3E>65 D<4AB4EB0180020FEBE003027F13F8903A01FF807E
07903A03FC000F0FD90FF0EB079FD91FC0EB01DF4948EB00FF49C8127F13FE4848153F48
48151FA24848150F120F5B001F1607A2485AA21703127FA25B94C7FC12FFAB127FA26DED
0380A2123FA36C7EEF0700120F7F0007160E6C7E5F6C7E6C6C5D017F5D6D6C14F06D6C49
5AD90FF0495AD903FC010FC7FC903901FF807E6D6CB45A020F13F002011380313D7BBA3C
>67 D<B812FCA30001903880001F6C90C71201707E177E173E171EA2170EA4170F83ED01
C0A394C7FCA31503A21507151F91B5FCA3EC001F15071503A21501A218E0A3170192C713
C0A41703A3EF0780A2170FA2171F173F17FF486D010F1300B9FCA333397DB839>69
D<B812F8A30001903880001F6C90C71203EE01FC1600177C173CA2171CA4171E170EA2ED
0380A21700A41507A2150F153F91B5FCA3EC003F150F1507A21503A692C8FCAD4813C0B6
12C0A32F397DB836>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA3
91C71201B3A6486D497EB648B512FEA337397DB83E>72 D<B612C0A3C6EBC0006D5AB3B3
AD497EB612C0A31A397EB81E>I<B56C92380FFFF8A300016D92381FFC006C60D9EFE015
3BA3D9E7F01573A3D9E3F815E3A2D9E1FCEC01C3A3D9E0FEEC0383A3027FEC0703A26E6C
130EA36E6C131CA36E6C1338A26E6C1370A36E6C13E0A2913901FC01C0A3913900FE0380
A392387F0700A2ED3F8EA3ED1FDCA3ED0FF8A26F5A487E487ED80FFE6D48497EB500E002
03B512F8A2ED01C045397DB84C>77 D<EC03FF021F13E091B512FC903901FE01FE903A07
F8007F80D90FE0EB1FC0D93F80EB07F049C76C7E01FE6E7E0001824914004848157F0007
178049153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8491507A300FF17FCAC
6C6CED0FF8A4003F17F06D151F001F17E0A26D153F000F17C0000717806D157F6C6CEDFF
0000015E6D14016C6C4A5A6D6C495A6D6C495A6D6C495AD907F8EB7F80902703FE01FFC7
FC0100B512FC021F13E0020390C8FC363D7BBA41>79 D<B712C016F816FE000190398001
FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2160317FC17F8
EE07F0EE0FE0EE3FC0923801FF8091B5EAFE0016F816C091C9FCB3A4487FB6FCA330397D
B839>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707E
A283A65FA24C5AA24C5A4C5A4C5AEEFF80DB07FEC8FC91B512F816E0A291380007F8ED01
FC6F7E167F707E83161F83A683A560F00380EE0FF8A3486D0107EB0700B6EB03FC933801
FE0E933800FFFCCAEA3FF8EF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B51281
3901F80FE33907E001F7390F80007F90C7123F48141F003E140FA2481407A200FC1403A4
15017EA27E6C91C7FC7F13E0EA3FF8EBFF806C13F86CEBFF806C14E06C14F86C806C8001
3F7F01071480D9007F13C0020713E0EC007FED1FF0150F150716F81503126012E01501A4
7E16F0A26C14036C15E0A26CEC07C06CEC0F80D8FBC0EB1F00D8F9F0133ED8F0FF13FC39
E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9E003EB003F902600
01FE1307007EEE03F0007C160100781600A300701770A400F01778481738A4C71600B3B0
913807FF80011FB612E0A335397DB83C>I<B5D8FE01B5D8FC01B512C0A300039026C000
0790C7381FFC006C90C76C48EC07F06C735A04015E1A016D6C6E4A5AA36D6C4DC7FC4C7F
A26E5F011F9126073FC0130EA26E171E010F020F6D131CEE0E1FA26D6C011E6D5BEE1C0F
A26D6C5F4C6C7EA26E17F001014A6C6C5BA36D6C01F06D485AEEE001A2DA7F804B5A9239
81C000FFA203C1150791263FC380D97F87C8FCA203E3158FDA1FE715CE93C7123FA26EB4
15FC4B141FA202075E4B140FA36E486E5AA302015E4B1403A202005E4B1401523B7FB855
>87 D<48148039038001C00007130301001380000EEB070048130EA2485BA2485BA3485B
A400EFEB778039FF807FC001C013E001E013F0A2007F133FA2393FC01FE0391F800FC039
0F0007801C1A76B92A>92 D<EB3FE0EBFFFC000313FF3907C03F80390F800FC0486C6C7E
01E07F6E7EA2380FC001D807807FEA0300C7FCA414FF130FEB7FF13801FF01EA07F8EA0F
F0EA1FE0EA3FC0EA7F80A2D8FF00141CA41403A2387F800714063A3FC01C7E383A1FF078
7FF83A0FFFF03FF0000301E013E03A007F000F8026277DA52A>97
D<EA03F812FFA3120F1203B0EC0FE0EC7FFC9038F9FFFE9039FBE03F809039FF800FC090
39FE0007E049EB03F0A249EB01F816FCA216FE1500A216FFA916FEA3150116FCA2ED03F8
6D14F0ED07E06DEB0FC09039E7801F809039E3E07F009038C1FFFE9038807FF8C7EA1FC0
283B7EB92E>I<EB03FC90381FFF80017F13E09038FE01F03901F800F83903F001FC3807
E003EA0FC0121F90388001F8003FEB00F01560007F140090C8FCA25AA97EA27FA2003F14
0E7F001F141C6C7E000714386C7ED801FC13F03900FF03E090387FFFC0011F1300EB07F8
1F277DA525>I<ED1FC0EC07FFA3EC007F151FB0EB07F8EB1FFE90387FFF9F9038FE07DF
3901F800FF4848137F4848133F4848131F121F485AA2127F90C7FCA35AA97EA27F123FA2
121F6C6C133F157F6C6C13FF3A03F001DFF03A01FC079FFF39007FFF1FEB3FFED907F013
C0283B7DB92E>I<EB07F8EB1FFF017F13809038FC0FC03901F003E03903E001F0000714
F8390FC000FC121F4913FE003F147EA248C7127FA35A90B6FCA390C8FCA57EA27F123F15
076C7E150E6C7E0007141C6C6C133CD801FC13783900FF01F090383FFFC06D1380903803
FC0020277EA525>I<147E903803FF80010F13C090381FC7E090383F07F0EB7E0F13FE13
FC0001EB07E09038F803C0000390C7FCADB512FCA3D803F8C7FCB3AB487EB512F8A31C3B
7FBA19>I<ED03E090390FF00FF090393FFC1FF890B5EA3C7C3A01F81FF0FC3A03E007C0
7C3A07C003E038000FECF000001F80EB8001003F80A7001F5CEBC003000F5C00075C6C6C
485A9038F81F800006B5C7FCEB3FFC380E0FF090C9FC121EA3121F6C7E90B512C015F86C
14FE6CECFF8016C04815E0391F80007F48C7EA0FF0007E140316F8481401A5007EEC03F0
A26CEC07E06C6CEB0FC0D80FE0EB3F803A07FC01FF000001B512FC6C6C13F0010790C7FC
26387EA52A>I<EA03F812FFA3120F1203B0EC07F0EC1FFCEC7FFF9138F07F809038F9C0
1FD9FB807F9038FF000F49805BA35BB3A4486C497EB500E1B51280A3293A7EB92E>I<EA
03C0487E487E487EA46C5A6C5A6C5AC8FCA9EA01F812FFA312071203B3AA487EB512E0A3
13387EB718>I<EA03F812FFA3120F1203B1913803FFFCA36E13C0913800FE005D15F04A
5A4A5A4A5A4AC7FC141E5C5C14FCEBF9FE13FBEBFF7F496C7EEBFC1F01F87F6E7E6E7EA2
6E7E6E7EA26E7E157FA2ED3F8016C0486CEB7FF0B500E1B5FCA3283A7EB92C>107
D<EA03F812FFA3120F1203B3B3AD487EB512E0A3133A7EB918>I<2703F807F8EB0FF000
FFD91FFEEB3FFCDA7FFFEBFFFE913AF03F81E07F3D0FF9C00FC3801F802603FB80D9E700
7F020013E601FED907FC6D7EA2495CA2495CB3A4486C496C497EB500E1B500C3B51280A3
41257EA446>I<3903F807F000FFEB1FFCEC7FFF9138F07F80390FF9C01F2603FB807F90
38FF000F49805BA35BB3A4486C497EB500E1B51280A329257EA42E>I<EB03FE90380FFF
80013F13E09038FE03F83901F800FC4848137E48487F4848EB1F80001F15C049130F003F
15E0A248C7EA07F0A44815F8A96C15F0A26D130F003F15E0A26C6CEB1FC0000F15806D13
3F6C6CEB7F006C6C13FE3900FE03F890387FFFF0011F13C0D903FEC7FC25277EA52A>I<
3903F80FE000FFEB7FFC9038F9FFFE9039FBE07F803A0FFF801FC03A03FE000FE049EB07
F0A249EB03F816FC150116FEA3ED00FFA916FE1501A316FC150316F86DEB07F0ED0FE06D
14C09039FF803F809039FBE07F009038F9FFFE9038F87FF8EC1FC091C8FCAB487EB512E0
A328357EA42E>I<903903F801C090381FFE03EB7FFF9038FE07873901FC01C73903F000
EF0007147F4848133F485A003F141F5B127FA390C7FC5AA96C7EA3123F7F001F143F6C7E
157F6C6C13FF3903F801DF3901FE0F9F39007FFF1FEB3FFCEB07F090C7FCABED3FE00207
B5FCA328357DA42C>I<3803F03F00FFEB7F809038F1FFE014C7390FF38FF03803F70F13
F69038FE07E09038FC03C0EC018091C7FCA25BB3A3487EB512F8A31C257EA421>I<EBFF
83000313E7000F13FFEA1F80383E003F487F00787FA200F87FA37E6C90C7FC6C7EEA7FF8
EBFF806C13E06C13F86C7F6C7F00017F6C7E01031380EB003F0060EB1FC000E0130FA26C
1307A37E15806C130F1500B4131EEBC07C38F3FFF800E15B38C07F801A277DA521>I<13
1CA5133CA3137CA213FC120112031207121FB6FCA3D801FCC7FCB2EC01C0A93900FE0380
A2017E13006D5AEB1FFE6D5AEB03F01A347FB220>I<D803F8EB0FE000FFEB03FFA3000F
EB003F0003140FB3A5151FA2153F1201156F6C6CEBEFF8903A7E03CFFF8090383FFF8F6D
130FD903FCEBE00029267EA42E>I<B538C07FFEA33A0FFC001FF0D803F8EB07C016807F
00011500A26D5B0000140EA2017F5BA2EC803C013F1338A26D6C5AA214E0010F5BA214F1
01075BA2903803FB80A214FF6D90C7FCA36D5AA2147CA3143827257EA32C>I<B53A8FFF
F07FFEA3260FF8009038800FF8000791397F0007E0EF03C000031780816DEC8007000102
7F1400A26D6E5A000002FF130E15EF6DECE01ED97F01141C15C70281EBF03CD93F831438
1583D91FC36D5AECC701A2D90FE76D5AECEE00A2D907FEEBFFC04A137FA201035D4A133F
A2010192C7FC4A7FA20100141E4A130E37257EA33C>I<B500C0B5FCA300039038007FF0
6C48EB3F806C6C013EC7FC6D133CEB3F806E5A011F5B6D6C5A14F1903807FBC06DB45A6D
90C8FCA26D5A147F818114FF497FECCFF0EB03C790380783F890380F03FCEB0E0190381E
00FE497F496D7E01F8133F000181D80FFC497EB548B51280A329247FA32C>I<B538C07F
FEA33A07FC001FF06C48EB07C016807F00011500A26C6C130EA26D131E6D131CA26D6C5A
A2ECC078011F1370A2ECE0F0010F5B14F0903807F1C0A214FB01035BA26DB4C7FCA36D5A
A2147CA31438A214781470A25CA21301007C5BEAFE035C130749C8FCEAFC1EEA783CEA3F
F86C5AEA0FC027357EA32C>I<003FB512FCA39038C007F8D83E0013F0003C130FEC1FE0
003814C00078EB3F80147F0070EBFF005C1301495A5CEA0007495A5C495A133F90387F80
0E14005B485A5B0003141E485A5B4848131C001F143C4848137C4913FC007F1303B6FCA3
1F247EA325>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 716 531 a Fk(A)n(CM)27 b(In)n(ternational)e(Collegiate)e
(Programming)f(Con)n(test)27 b(1999/2000)1137 631 y(Mid-Cen)n(tral)e
(Europ)r(ean)h(Regional)f(Con)n(test)1311 1011 y Fj(Problem)76
b(G)1501 1229 y Fi(The)53 b(Game)1234 1425 y Fh(Source:)99
b Fg(game.\(c|cc|pas|j)o(ava)o(\))1234 1525 y Fh(Input:)146
b Fg(game.in)328 1803 y Fk(One)31 b(morning,)d(y)n(ou)i(w)n(ak)n(e)f
(up)i(and)f(think:)42 b(\\I)31 b(am)e(suc)n(h)h(a)g(go)r(o)r(d)g
(programmer.)41 b(Wh)n(y)31 b(not)f(mak)n(e)204 1903
y(some)c(money?")35 b(So)27 b(y)n(ou)g(decide)g(to)g(write)g(a)g
(computer)f(game.)328 2003 y(The)31 b(game)f(tak)n(es)g(place)f(on)i(a)
g(rectangular)d(b)r(oard)i(consisting)e(of)j Ff(w)23
b Fe(\002)e Ff(h)31 b Fk(squares.)45 b(Eac)n(h)30 b(square)204
2102 y(migh)n(t)25 b(or)i(migh)n(t)f(not)h(con)n(tain)f(a)h(game)f
(piece,)h(as)g(sho)n(wn)f(in)h(the)h(picture.)328 2202
y(One)35 b(imp)r(ortan)n(t)d(asp)r(ect)j(of)g(the)g(game)e(is)h
(whether)g(t)n(w)n(o)h(game)e(pieces)g(can)i(b)r(e)g(connected)f(b)n(y)
h(a)204 2302 y(path)28 b(whic)n(h)e(satis\014es)g(the)i(t)n(w)n(o)f
(follo)n(wing)c(prop)r(erties:)305 2468 y(1.)41 b(It)28
b(consists)e(of)i(straigh)n(t)d(segmen)n(ts,)h(eac)n(h)h(one)g(b)r
(eing)g(either)f(horizon)n(tal)e(or)j(v)n(ertical.)305
2634 y(2.)41 b(It)28 b(do)r(es)g(not)f(cross)f(an)n(y)h(other)g(game)f
(pieces.)328 2800 y(It)i Fd(is)35 b Fk(allo)n(w)n(ed)24
b(that)k(the)g(path)g(lea)n(v)n(es)d(the)j(b)r(oard)f(temp)r(orarily!)
328 2899 y(Here)h(is)e(an)h(example:)1282 4023 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true -2.84544 -2.84544
113.81097 113.81097 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 0.0 28.45274
19.91682 54.06003 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 0.0 56.90549
19.91682 82.51277 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 0.0 85.35823
19.91682 110.96552 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 22.76227 0.0
42.67911 25.60728 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 22.76227 28.45274
42.67911 54.06003 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 22.76227 85.35823
42.67911 110.96552 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 45.52455 0.0
65.44139 25.60728 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 45.52455 28.45274
65.44139 54.06003 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 45.52455 85.35823
65.44139 110.96552 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 68.2864 0.0
88.20367 25.60728 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 68.2864 85.35823
88.20367 110.96552 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 91.04869 28.45274
110.96552 54.06003 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 91.04869 56.90549
110.96552 82.51277 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 91.04869 85.35823
110.96552 110.96552 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 5.0 SLW 0.5 setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.00732 41.25638 78.24504 41.25638 78.24504
69.70912 32.72047 69.70912 32.72047 41.25638  /Lineto /lineto load
def false Line  gsave 5.0 SLW 0.5 setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 5.0 SLW 0.5 setgray  /ArrowA { moveto }
def /ArrowB { } def [ 78.24504 12.80363 78.24504 -15.6491 9.95863 -15.6491
9.95863 41.25638  /Lineto /lineto load def false Line  gsave 5.0 SLW
0.5 setgray 0 setlinecap stroke  grestore end
 
@endspecial
1294 3633 a Fc(\(1)p Fb(;)11 b Fc(3\))39 b(\(2)p Fb(;)11
b Fc(3\))418 b(\(5)p Fb(;)11 b Fc(3\))1671 3869 y(\(3)p
Fb(;)g Fc(4\))40 b(\(4)p Fb(;)11 b Fc(4\))328 4441 y
Fk(The)24 b(game)e(pieces)g(at)h(\(1)p Ff(;)14 b Fk(3\))24
b(and)f(at)g(\(4)p Ff(;)14 b Fk(4\))24 b(can)f(b)r(e)h(connected.)35
b(The)24 b(game)d(pieces)i(at)g(\(2)p Ff(;)14 b Fk(3\))23
b(and)h(at)204 4541 y(\(5)p Ff(;)14 b Fk(3\))28 b(can)f(b)r(e)i
(connected,)f(to)r(o.)38 b(On)28 b(the)h(other)e(hand,)i(the)f(game)f
(pieces)g(at)h(\(2)p Ff(;)14 b Fk(3\))27 b(and)h(\(3)p
Ff(;)14 b Fk(4\))28 b(cannot)204 4641 y(b)r(e)g(connected;)f(eac)n(h)g
(path)h(w)n(ould)e(cross)g(at)i(least)e(one)h(other)g(game)f(piece.)328
4740 y(The)32 b(part)g(of)g(the)h(game)d(that)i(y)n(ou)g(ha)n(v)n(e)f
(to)g(write)g(no)n(w)h(is)f(the)h(one)g(testing)f(whether)h(t)n(w)n(o)f
(game)204 4840 y(pieces)26 b(can)h(b)r(e)h(connected)g(according)d(to)i
(the)h(rules)e(ab)r(o)n(v)n(e.)204 5114 y Fa(Input)204
5296 y Fk(The)37 b(input)f(\014le)g(con)n(tains)f(descriptions)f(of)j
(sev)n(eral)d(di\013eren)n(t)i(game)f(situations.)62
b(The)37 b(\014rst)g(line)e(of)204 5396 y(eac)n(h)27
b(description)e(con)n(tains)g(t)n(w)n(o)i(in)n(tegers)f
Ff(w)k Fk(and)d Ff(h)h Fk(\(1)23 b Fe(\024)f Ff(w)r(;)14
b(h)24 b Fe(\024)f Fk(75\),)k(the)h(width)f(and)g(the)h(heigh)n(t)f(of)
1851 5662 y(1)p eop
%%Page: 2 2
2 1 bop 204 531 a Fk(the)29 b(b)r(oard.)41 b(The)29 b(next)h
Ff(h)f Fk(lines)e(describ)r(e)h(the)h(con)n(ten)n(ts)g(of)g(the)h(b)r
(oard;)f(eac)n(h)f(of)h(these)g(lines)f(con)n(tains)204
631 y(exactly)g Ff(w)33 b Fk(c)n(haracters:)39 b(a)29
b(\\)p Fg(X)p Fk(")g(if)g(there)h(is)e(a)i(game)e(piece)h(at)g(this)h
(lo)r(cation,)d(and)j(a)g(space)f(if)g(there)h(is)204
731 y(no)d(game)f(piece.)328 830 y(Eac)n(h)35 b(description)e(is)i
(follo)n(w)n(ed)e(b)n(y)j(sev)n(eral)d(lines)h(con)n(taining)f(four)j
(in)n(tegers)d Ff(x)2956 842 y Fc(1)2994 830 y Ff(;)14
b(y)3072 842 y Fc(1)3109 830 y Ff(;)g(x)3193 842 y Fc(2)3230
830 y Ff(;)g(y)3308 842 y Fc(2)3381 830 y Fk(eac)n(h)204
930 y(satisfying)32 b(1)i Fe(\024)g Ff(x)803 942 y Fc(1)841
930 y Ff(;)14 b(x)925 942 y Fc(2)997 930 y Fe(\024)34
b Ff(w)r(;)14 b Fk(1)35 b Fe(\024)f Ff(y)1411 942 y Fc(1)1448
930 y Ff(;)14 b(y)1526 942 y Fc(2)1597 930 y Fe(\024)34
b Ff(h)p Fk(.)58 b(These)34 b(are)g(the)h(co)r(ordinates)d(of)i(t)n(w)n
(o)g(game)f(pieces.)204 1029 y(\(The)j(upp)r(er)f(left)g(corner)f(has)h
(the)h(co)r(ordinates)d(\(1)p Ff(;)14 b Fk(1\).\))60
b(These)36 b(t)n(w)n(o)e(game)g(pieces)g(will)f(alw)n(a)n(ys)f(b)r(e)
204 1129 y(di\013eren)n(t.)j(The)26 b(list)e(of)i(pairs)e(of)i(game)e
(pieces)g(for)i(a)f(b)r(oard)g(will)e(b)r(e)k(terminated)c(b)n(y)j(a)f
(line)g(con)n(taining)204 1229 y(\\)p Fg(0)42 b(0)i(0)f(0)p
Fk(".)328 1328 y(The)34 b(en)n(tire)d(input)i(is)f(terminated)f(b)n(y)i
(a)g(test)g(case)g(starting)e(with)i Ff(w)i Fk(=)d Ff(h)g
Fk(=)g(0.)53 b(This)32 b(test)h(case)204 1428 y(should)26
b(not)i(b)r(e)g(pro)r(cessed.)204 1703 y Fa(Output)204
1884 y Fk(F)-7 b(or)31 b(eac)n(h)g(b)r(oard,)g(output)h(the)g(line)e
(\\)p Fg(Board)41 b(#)p Ff(n)p Fg(:)p Fk(",)32 b(where)f
Ff(n)g Fk(is)g(the)g(n)n(um)n(b)r(er)g(of)g(the)h(b)r(oard.)48
b(Then,)204 1984 y(output)29 b(one)g(line)e(for)i(eac)n(h)f(pair)f(of)i
(game)e(pieces)h(asso)r(ciated)e(with)j(the)g(b)r(oard)f(description.)
39 b(Eac)n(h)28 b(of)204 2084 y(these)g(lines)e(has)h(to)h(start)f
(with)h(\\)p Fg(Pair)41 b Ff(m)p Fg(:)87 b Fk(",)28 b(where)f
Ff(m)h Fk(is)f(the)h(n)n(um)n(b)r(er)f(of)h(the)h(pair)d(\(starting)g
(the)204 2183 y(coun)n(t)34 b(with)g(1)g(for)g(eac)n(h)g(b)r(oard\).)57
b(F)-7 b(ollo)n(w)32 b(this)i(b)n(y)g(\\)p Ff(k)46 b
Fg(segments.)p Fk(",)32 b(where)i(if)g Ff(k)k Fk(is)33
b(the)i(minim)n(um)204 2283 y(n)n(um)n(b)r(er)c(of)h(segmen)n(ts)e(for)
i(a)g(path)g(connecting)f(the)h(t)n(w)n(o)g(game)e(pieces,)i(or)f(\\)p
Fg(impossible.)p Fk(",)d(if)k(it)g(is)204 2383 y(not)27
b(p)r(ossible)f(to)h(connect)h(the)g(t)n(w)n(o)e(game)g(pieces)g(as)h
(describ)r(ed)g(ab)r(o)n(v)n(e.)328 2482 y(Output)i(a)e(blank)f(line)g
(after)h(eac)n(h)g(b)r(oard.)204 2757 y Fa(Sample)43
b(Input)204 2939 y Fg(5)g(4)204 3038 y(XXXXX)204 3138
y(X)130 b(X)204 3237 y(XXX)42 b(X)247 3337 y(XXX)204
3437 y(2)h(3)g(5)g(3)204 3536 y(1)g(3)g(4)g(4)204 3636
y(2)g(3)g(3)g(4)204 3736 y(0)g(0)g(0)g(0)204 3835 y(0)g(0)204
4110 y Fa(Sample)g(Output)204 4292 y Fg(Board)e(#1:)204
4391 y(Pair)h(1:)g(4)i(segments.)204 4491 y(Pair)e(2:)g(3)i(segments.)
204 4590 y(Pair)e(3:)g(impossible.)1851 5662 y Fk(2)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
