<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0075)http://www.acm.inf.ethz.ch/ProblemSetArchive/B_US_MidCen/2001/wscipher.html -->
<HTML><HEAD><TITLE>Problem B: W's Cipher</TITLE>
<META content="text/html; charset=ks_c_5601-1987" http-equiv=Content-Type>
<META content="MSHTML 5.00.3315.2870" name=GENERATOR></HEAD>
<BODY bgColor=white>
<H1 align=center>Problem B: W's Cipher</H1>
<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD>Source file:</TD>
    <TD><TT>wscipher.</TT>{<TT>c</TT>, <TT>cpp</TT>, <TT>java</TT>, 
      <TT>pas</TT>}</TD></TR>
  <TR>
    <TD>Input file:</TD>
    <TD><TT>wscipher.in</TT></TD></TR>
  <TR>
    <TD>Output file:</TD>
    <TD><TT>wscipher.out</TT></TD></TR></TBODY></TABLE></CENTER>
<P>Weird Wally's Wireless Widgets, Inc. manufactures an eclectic assortment of 
small, wireless, network capable devices, ranging from dog collars, to pencils, 
to fishing bobbers. All these devices have very small memories. Encryption 
algorithms like Rijndael, the candidate for the Advanced Encryption Standard 
(AES) are demonstrably secure but they don't fit in such a tiny memory. In order 
to provide some security for transmissions to and from the devices, WWWW uses 
the following algorithm, which you are to implement. </P>
<P>Encrypting a message requires three integer keys, <I>k<SUB>1</SUB></I>, 
<I>k<SUB>2</SUB></I>, and <I>k<SUB>3</SUB></I>. The letters [a-i] form one 
group, [j-r] a second group, and everything else ([s-z] and underscore) the 
third group. Within each group the letters are rotated <I>left</I> by 
<I>k<SUB>i</SUB></I> positions in the message. Each group is rotated 
independently of the other two. Decrypting the message means doing a 
<I>right</I> rotation by <I>k<SUB>i</SUB></I> positions within each group. </P>
<P>Consider the message <TT>the_quick_brown_fox</TT> encrypted with 
<I>k<SUB>i</SUB></I> values of 2, 3 and 1. The encrypted string is 
<TT>_icuo_bfnwhoq_kxert</TT>. The figure below shows the decrypting right 
rotations for one character in each of the three character groups. </P>
<CENTER><IMG src="Problem B W's Cipher.files/wscipher.png"></CENTER>
<P>Looking at all the letters in the group [a-i] we see 
{<TT>i</TT>,<TT>c</TT>,<TT>b</TT>,<TT>f</TT>,<TT>h</TT>,<TT>e</TT>} appear at 
positions {2,3,7,8,11,17} within the encrypted message. After a right rotation 
of <I>k<SUB>1</SUB></I>=2, these positions contain the letters 
{<TT>h</TT>,<TT>e</TT>,<TT>i</TT>,<TT>c</TT>,<TT>b</TT>,<TT>f</TT>}. The table 
below shows the intermediate strings that come from doing all the rotations in 
the first group, then all rotations in the second group, then all the rotations 
in the third group. Rotating letters in one group will not change any letters in 
any of the other groups. </P>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TH></TH>
    <TH>[a-i], <I>k<SUB>1</SUB></I>= 2</TH>
    <TH>[j-r], <I>k<SUB>2</SUB></I>= 3</TH>
    <TH>[s-z] and _, <I>k<SUB>3</SUB></I>= 1</TH></TR>
  <TR>
    <TD>Encrypted:</TD>
    <TD><TT>_icuo_bfnwhoq_kxert</TT></TD>
    <TD><TT>_heuo_icnwboq_kxfrt</TT></TD>
    <TD><TT>_heuq_ickwbro_nxfot</TT></TD></TR>
  <TR>
    <TD>Decrypted:</TD>
    <TD><TT>_heuo_icnwboq_kxfrt</TT></TD>
    <TD><TT>_heuq_ickwbro_nxfot</TT></TD>
    <TD><TT>the_quick_brown_fox</TT></TD></TR>
  <TR>
    <TD>Changes:</TD>
    <TD><PRE><TT> ^^   ^^  ^     ^  </TT></PRE></TD>
    <TD><PRE><TT>    ^   ^  ^^ ^  ^  </TT></PRE></TD>
    <TD><PRE><TT>^  ^ ^   ^   ^ ^  ^  </TT></PRE></TD></TR></TBODY></TABLE>
<P>All input strings contain only lowercase letters and underscores(_). Each 
string will be at most 80 characters long. The <I>k<SUB>i</SUB></I> are all 
positive integers in the range 1-100. </P>
<P>Input consists of information for one or more encrypted messages. Each 
problem begins with one line containing <I>k<SUB>1</SUB></I>, 
<I>k<SUB>2</SUB></I>, and <I>k<SUB>3</SUB></I> followed by a line containing the 
encrypted message. The end of the input is signalled by a line with all key 
values of 0. </P>
<P>For each encrypted message, the output is a single line containing the 
decrypted string. </P>
<P><B>Example input:</B></P>
<BLOCKQUOTE><PRE>2 3 1
_icuo_bfnwhoq_kxert
1 1 1
bcalmkyzx
3 7 4
wcb_mxfep_dorul_eov_qtkrhe_ozany_dgtoh_u_eji
2 4 3
cjvdksaltbmu
0 0 0
</PRE></BLOCKQUOTE>
<P><B>Example output:</B></P>
<BLOCKQUOTE><PRE>the_quick_brown_fox
abcklmxyz
the_quick_brown_fox_jumped_over_the_lazy_dog
ajsbktcludmv
</PRE></BLOCKQUOTE>
<P><SMALL><I>Last modified Fri Oct 26 21:39:12 2001 
</I></SMALL></P></BODY></HTML>
