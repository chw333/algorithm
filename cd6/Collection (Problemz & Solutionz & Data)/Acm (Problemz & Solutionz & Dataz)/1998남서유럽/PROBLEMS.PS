%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: final.dvi
%%Pages: 21
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Times-Roman Courier Symbol Times-Italic
%%EndComments
%DVIPSCommandLine: dvips final
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1998.11.05:0343
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginFont: Times-Bold
% @psencodingfile{
%   author = "P. MacKay, Alan Jeffrey, S. Rahtz, K. Berry, B. Horn",
%   version = "0.2",
%   date = "7 September 94",
%   filename = "8r.enc",
%   email = "kb@cs.umb.edu",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% }
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are in their Windows ANSI positions,
% because Windows users cannot easily reencode the fonts, and it makes
% no difference on other systems. The only Windows ANSI characters not
% available are those that make no sense for typesetting -- rubout
% (127 decimal), nobreakspace (160), softhyphen (173).
% 
% (2) The caron and dotlessi characters are in the positions used by
% Y&Y for their modified ATM encoding.
% 
% (3) Remaining characters are assigned arbitrarily to the first few
% positions.
% 
% (4) (Y&Y) Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x10.
% 
% (5) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available in the Type 1 fonts.
% 
% Ligatures are omitted, since this encoding is intended for use at the
% driver end. Including ligatures and kerns would make the TFM files
% much larger, to no particular purpose. If someone actually wants to
% typeset in this encoding, they can pick a different name, and regenerate
% the fonts.
 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /breve /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /tilde /minus
  % These are the only two remaining unencoded characters, so may as
  % well include them.
  /Zcaron /zcaron /.notdef /.notdef
% 0x10 (TeX characters from, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quotesingle
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /grave /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE
 /caron % Y&Y
 /.notdef
 /.notdef
% 0x90
 /.notdef /quoteleft /quoteright /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tildeaccent /trademark /scaron /guilsinglright
 /oe
 /dotlessi % Y&Y
 /.notdef
 /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (final.dvi)
@start /Fa 3 123 df<EB3FFC48B57E4814E04880488048809038F00FFE9038E001FF80
6F7E6C48133F6C4880C8121FA491B5FC130F137F48B6FC12075A48EBC01F383FFC00EA7F
E0138048C7FC5AA46C143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0A2000714
F76C14C3C6020013C0D93FF090C7FC2B2A7CA830>97 D<EA3FFC487E12FFA2127F123F12
00AAEC03FE91381FFF80027F13E091B57E90B612FC82ECFE079138F001FF4A6C13804A13
7F4AEB3FC091C7121F4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F
806E13FFDAF00313009138FC0FFE91B55A5E495CD97E7F13C0D93C1F90C7FC90380003FC
2C3980B730>I<001FB612FC4815FE5AA316FC90C7EA0FF8ED1FF0ED3FE0ED7FC0EDFF80
003E491300C7485A4A5A4A5A4A5A4A5A4A5A4A5A4990C7FC495A495A495A495A495A495A
4948133E4890C7127F485A485A485A485A485A48B7FCB8FCA46C15FE28277DA630>122
D E /Fb 26[93 229[{}1 131.399017 /Symbol rf /Fd 1 1 df<B81280A329037B91
34>0 D E /Fe 134[29 29 9[33 48 1[29 1[18 7[33 97[{
TeXBase1Encoding ReEncodeFont}7 66.666664 /Times-Italic
rf /Ff 2 62 df<140EB3A3B812E0A3C7000EC8FCB3A32B2D7CA634>43
D<007FB712C0B812E0A2CBFCABB812E0A26C16C02B117C9834>61
D E /Fg 256[{}0 66.666664 /Symbol rf /Fh 3 62 df<1430147014E0EB01C0EB03
801307EB0F00131E133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25A
A3123E127EA6127C12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA21201
7F12007F13787F133E131E7FEB07801303EB01C0EB00E014701430145A77C323>40
D<12C07E12707E7E121E7E6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA2148013
0FA214C0A3130714E0A6130314F0B214E01307A614C0130FA31480A2131F1400A25B133E
A25BA2137813F85B12015B485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<007F
B912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>61
D E /Fi 169[45 12[45 4[45 20[45 47[{TeXBase1Encoding ReEncodeFont}4
75.000000 /Courier rf /Fj 136[54 2[21 29 25 1[37 37 37
1[21 2[21 37 37 1[33 37 33 1[33 12[46 3[42 12[50 19[21
19 1[19 42 43[{TeXBase1Encoding ReEncodeFont}22 75.000000
/Times-Roman rf /Fk 206[29 49[{TeXBase1Encoding ReEncodeFont}1
58.333336 /Times-Roman rf /Fl 10 107 df<007FB812FEBAFCA26C17FE3804799847
>0 D<EB0FFCEB3FFF90B512C0000314F04880488048804880A2481580A3B712C0AA6C15
80A36C1500A26C5C6C5C6C5C6C5CC614C0013F90C7FCEB0FFC22227BA72D>15
D<0203B612FE023F15FF91B8FC010316FED90FFEC9FCEB1FE0EB7F8001FECAFCEA01F848
5A485A485A5B48CBFCA2123EA25AA21278A212F8A25AA77EA21278A2127CA27EA27EA26C
7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FE0EB0FFE0103B712FE010016FF143F020315FE91
CAFCAE001FB812FE4817FFA26C17FE384779B947>18 D<180E183F18FFEF03FEEF0FF8EF
3FE0EFFF80933803FE00EE1FF8EE7FE0923801FF80DB07FEC7FCED1FF0ED7FC04A48C8FC
EC07FCEC3FF0ECFFC0010390C9FCEB0FFCEB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF
8048CBFC6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB0FFCEB03FF010013C0EC3FF0EC07
FCEC01FF9138007FC0ED1FF0ED07FE923801FF809238007FE0EE1FF8EE03FE933800FF80
EF3FE0EF0FF8EF03FEEF00FF183F180E1800AE007FB812FEBAFCA26C17FE384779B947>
20 D<0203B512F8023F14FC91B6FC010315F8D90FFEC8FCEB1FE0EB7F8001FEC9FCEA01
F8485A485A485A5B48CAFCA2123EA25AA21278A212F8A25AA2B812F817FCA217F800F0CA
FCA27EA21278A2127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FE0EB0FFE01
03B612F8010015FC143F020314F82E3679B13D>50 D<1718173C177CA217F8A2EE01F0A2
EE03E0A2EE07C0160F1780EE1F00A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7
FCA2153E157E157C5DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2143EA25CA25C13015C49
5AA2495AA2495AA249C9FCA2133EA25BA25BA2485AA2485AA2485A120F5B48CAFCA2123E
A25AA25AA25A12602E5474C000>54 D<EC1FFE49B512E0010714F8011F14FE903A7FF003
FF804848C7EA3FE0D803FCEC0FF0D807F0EC03F8D80FC0EC00FC4848157E48C97E003E82
48EE0F80A20078160700F817C0A2481603B3B3A30060EE018032397BB63D>92
D<153FEC03FFEC0FE0EC3F80EC7E00495A5C495AA2495AB3AA130F5C131F495A91C7FC13
FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE133F806D7E130F801307B3AA6D7EA26D7E
80EB007EEC3F80EC0FE0EC03FFEC003F205B7AC32D>102 D<12FCEAFFC0EA07F0EA01FC
EA007E6D7E131F6D7EA26D7EB3AA801303806D7E1300147FEC1FC0EC07FEEC00FFEC07FE
EC1FC0EC7F0014FC1301495A5C13075CB3AA495AA2495A133F017EC7FC485AEA07F0EAFF
C000FCC8FC205B7AC32D>I<126012F0B3B3B3B3B11260045B76C319>106
D E /Fm 4 63 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>58
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C798919>I<1806181F187FEF01FFEF07FCEF1FF0EF7FC09338
01FF00EE07FCEE3FF0EEFFC0030390C7FCED0FFCED3FE0EDFF80DA03FEC8FCEC0FF8EC7F
E0903801FF80D907FEC9FCEB1FF8EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7F
C0EA1FF0EA07FCEA01FF38007FC0EB1FF8EB07FE903801FF809038007FE0EC0FF8EC03FE
913800FF80ED3FE0ED0FFCED03FF030013C0EE3FF0EE07FCEE01FF9338007FC0EF1FF0EF
07FCEF01FFEF007F181F1806383679B147>I<126012F812FE6C7EEA3FE0EA0FF8EA03FE
C66C7EEB3FE0EB0FFCEB03FF010013C0EC3FF0EC07FCEC01FF9138007FC0ED1FF0ED07FE
923801FF809238007FE0EE1FF8EE03FE933800FF80EF3FE0EF0FF8EF03FEEF00FFA2EF03
FEEF0FF8EF3FE0EFFF80933803FE00EE1FF8EE7FE0923801FF80DB07FEC7FCED1FF0ED7F
C04A48C8FCEC07FCEC3FF0ECFFC0010390C9FCEB0FFCEB3FE0EBFF80D803FECAFCEA0FF8
EA3FE0EAFF8048CBFC12F81260383679B147>62 D E /Fn 134[40
40 61 40 45 25 35 35 45 45 45 45 66 25 40 1[25 45 45
25 40 45 40 45 45 12[51 45 56 8[30 2[56 1[66 1[56 20[30
42[45 2[{TeXBase1Encoding ReEncodeFont}33 91.249977 /Times-Italic
rf /Fo 207[45 25 47[{}2 91.249977 /Symbol rf /Fp 205[33
33 49[{TeXBase1Encoding ReEncodeFont}2 66.666664 /Times-Roman
rf /Fq 133[55 55 55 55 55 55 55 55 55 55 55 55 55 55
55 55 1[55 55 55 55 55 55 55 55 55 8[55 1[55 55 55 55
2[55 2[55 55 2[55 55 55 55 55 55 55 55 55 3[55 3[55 55
55 55 55 55 55 55 55 55 1[55 55 55 55 55 55 55 2[55 37[{
TeXBase1Encoding ReEncodeFont}61 91.249977 /Courier rf
/Fr 105[45 1[40 40 24[40 45 45 66 45 45 25 35 30 45 45
45 45 71 25 45 25 25 45 45 30 40 45 40 45 40 30 6[66
1[86 66 66 56 51 61 1[51 66 66 81 56 2[30 66 66 51 56
66 61 61 66 1[40 3[25 25 45 45 45 45 45 45 45 45 45 45
25 23 30 23 2[30 30 30 35[51 51 2[{TeXBase1Encoding ReEncodeFont}73
91.249977 /Times-Roman rf /Fs 131[60 5[60 60 60 60 60
1[60 60 60 60 60 1[60 60 1[60 60 60 60 60 60 60 50[60
4[60 60 40[{TeXBase1Encoding ReEncodeFont}23 100.000000
/Courier rf /Ft 138[55 33 1[44 1[55 50 55 8[44 1[44 15[55
9[39 14[33 58[{TeXBase1Encoding ReEncodeFont}11 100.000000
/Times-Bold rf /Fu 134[60 1[86 1[60 33 47 40 1[60 60
60 93 33 2[33 60 60 40 53 60 53 60 53 12[73 3[66 22[60
6[60 1[60 1[30 4[40 40 40[{TeXBase1Encoding ReEncodeFont}28
119.999947 /Times-Roman rf /Fv 134[72 1[104 72 80 48
56 64 1[80 72 80 120 40 2[40 80 72 1[64 80 64 80 72 12[96
80 104 1[88 112 104 4[56 1[112 88 2[104 96 104 7[72 72
6[72 3[48 36 4[48 5[48 29[80 3[{TeXBase1Encoding ReEncodeFont}40
144.000000 /Times-Bold rf /Fw 133[44 50 1[72 1[50 28
39 33 1[50 50 50 78 28 50 1[28 50 50 1[44 50 44 50 44
9[94 3[55 66 1[55 2[89 3[33 72 72 1[61 1[66 1[72 7[50
50 6[50 1[28 2[25 44[{TeXBase1Encoding ReEncodeFont}37
100.000000 /Times-Roman rf /Fx 134[60 3[66 40 47 53 1[66
60 66 100 33 6[53 66 1[66 60 13[66 3[93 1[113 3[47 6[80
66[{TeXBase1Encoding ReEncodeFont}19 119.999947 /Times-Bold
rf /Fy 134[86 1[124 86 96 57 67 76 1[96 86 96 143 48
2[48 96 86 57 76 2[96 86 11[124 1[96 124 1[105 2[163
3[67 134 134 105 115 124 124 115 124 7[86 86 6[86 1[48
2[43 44[{TeXBase1Encoding ReEncodeFont}38 172.833374
/Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 814 71 a Fy(A)-9 b(CM)43 b(Inter)m(national)h(Collegiate)790
233 y(Pr)m(ogramming)h(Contest)f(1998/99)1432 477 y Fx(Sponsor)n(ed)31
b(by)f(IBM)356 637 y Fw(Supported)24 b(by)h(W)l(ilk)o(en)f(GmbH,)g
(Schw)o(arz)i(Pharma)f(and)g(the)f(German)h(A)l(CM)g(Chapter)378
1022 y Fy(Southwester)m(n)44 b(Eur)m(opean)g(Regional)f(Contest)867
3026 y(Uni)n(v)n(ersity)i(of)e(Ulm,)h(Germany)1310 3404
y Fv(No)o(v)o(ember)33 b(1st,)i(1998)85 5359 y Fu(This)29
b(problem)g(set)h(should)f(contain)h(nine)f(\(9\))h(problems)f(on)g
(twenty)h(\(20\))f(numbered)184 5472 y(pages.)36 b(Please)30
b(inform)g(a)g(runner)f(immediately)h(if)g(something)f(is)h(missing)f
(from)1492 5585 y(your)g(problem)h(set.)p eop
%%Page: 1 2
1 1 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 161 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1515 551 y Fy(Pr)m(oblem)44 b(A)1338
786 y Fv(Optimal)34 b(Pr)m(ograms)1020 1075 y Ft(Sour)n(ce:)80
b Fs(optimal.\(c|cc|pas|java\))1020 1192 y Ft(Input:)133
b Fs(optimal.in)75 1638 y Fr(As)33 b(you)h(kno)n(w)-6
b(,)36 b(writing)e(programs)h(is)f(often)g(f)o(ar)g(from)g(being)h
(easy)-6 b(.)59 b(Things)35 b(become)f(e)n(v)o(en)g(harder)h(if)e(your)
75 1751 y(programs)d(ha)n(v)o(e)e(to)h(be)f(as)g(f)o(ast)g(as)g
(possible.)45 b(And)28 b(sometimes)h(there)g(is)f(reason)i(for)e(them)g
(to)g(be.)43 b(Man)o(y)28 b(lar)n(ge)75 1864 y(programs)38
b(such)e(as)g(operating)j(systems)e(or)f(databases)j(ha)n(v)o(e)d
(\223bottlenecks\224)41 b(\226)35 b(se)o(gments)i(of)f(code)h(that)g
(get)75 1976 y(e)o(x)o(ecuted)f(o)o(v)o(er)f(and)g(o)o(v)o(er)f(again,)
k(and)d(mak)o(e)f(up)h(for)g(a)f(lar)n(ge)h(portion)i(of)d(the)h(total)
g(running)i(time.)61 b(Here)34 b(it)75 2089 y(usually)23
b(pays)g(to)e(re)n(write)h(that)g(code)g(portion)h(in)f(assembly)h
(language,)h(since)e(e)n(v)o(en)g(small)f(gains)i(in)e(running)i(time)
75 2202 y(will)g(matter)h(a)f(lot)h(if)f(the)h(code)g(is)g(e)o(x)o
(ecuted)h(billions)g(of)f(times.)216 2320 y(In)g(this)g(problem)h(we)e
(will)h(consider)i(the)e(task)g(of)g(automating)i(the)e(generation)j
(of)c(optimal)i(assembly)h(code.)75 2432 y(Gi)n(v)o(en)k(a)h(function)i
(\(as)d(a)h(series)h(of)e(input/output)35 b(pairs\),)e(you)e(are)g(to)g
(come)g(up)f(with)h(the)g(shortest)i(assembly)75 2545
y(program)25 b(that)f(computes)h(this)f(function.)216
2663 y(The)33 b(programs)i(you)f(produce)h(will)e(ha)n(v)o(e)h(to)g
(run)f(on)h(a)f(stack)h(based)h(machine,)h(that)e(supports)i(only)e
(\002)n(v)o(e)75 2776 y(commands:)f Fq(ADD)p Fr(,)22
b Fq(SUB)p Fr(,)g Fq(MUL)p Fr(,)g Fq(DIV)h Fr(and)i Fq(DUP)p
Fr(.)d(The)i(\002rst)h(four)g(commands)h(pop)f(the)g(tw)o(o)f(top)h
(elements)h(from)75 2889 y(the)f(stack)i(and)e(push)h(their)g(sum,)g
(dif)n(ference,)h(product)g(or)f(inte)o(ger)g(quotient)2550
2856 y Fp(1)2590 2889 y Fr(,)f(respecti)n(v)o(ely)-6
b(,)28 b(on)d(the)h(stack.)35 b(The)75 3001 y Fq(DUP)21
b Fr(command)k(pushes)g(an)e(additional)k(cop)o(y)d(of)g(the)g
(top-most)h(stack)f(element)h(on)e(the)h(stack.)216 3119
y(So)i(if)g(the)g(commands)i(are)e(applied)i(to)e(a)g(stack)i(with)e
(the)g(tw)o(o)g(top)h(elements)h Fn(a)d Fr(and)i Fn(b)f
Fr(\(sho)n(wn)h(to)f(the)h(left\),)75 3232 y(the)d(resulting)i(stacks)f
(look)f(as)f(follo)n(ws:)923 4330 y @beginspecial 0 @llx
0 @lly 178 @urx 85 @ury 1133 @rhi @setspecial
%%BeginDocument: eps/optimal.eps
%Magnification: 0.25
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-13.0 95.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.01500 0.01500 sc
% Polyline
n 11475 1425 m 12675 1425 l 12675 6225 l 11475 6225 l cp gs col7 0.75 shd ef gr 
% Polyline
n 3075 1425 m 4275 1425 l 4275 6225 l 3075 6225 l cp gs col7 0.75 shd ef gr 
% Polyline
n 7275 1425 m 8475 1425 l 8475 6225 l 7275 6225 l cp gs col7 0.75 shd ef gr 
% Polyline
n 5175 1425 m 6375 1425 l 6375 6225 l 5175 6225 l cp gs col7 0.75 shd ef gr 
% Polyline
n 9375 1425 m 10575 1425 l 10575 6225 l 9375 6225 l cp gs col7 0.75 shd ef gr 
% Polyline
n 975 1425 m 2175 1425 l 2175 6225 l 975 6225 l cp gs col7 0.75 shd ef gr 
% Polyline
n 3000 1500 m 4200 1500 l 4200 6300 l 3000 6300 l cp gs /PC [[1.00 1.00 1.00] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 200.00 100.00] PATmp PATsp ef gr PATusp 
% Polyline
n 900 1500 m 2100 1500 l 2100 6300 l 900 6300 l cp gs /PC [[1.00 1.00 1.00] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 100.00] PATmp PATsp ef gr PATusp 
% Polyline
n 5100 1500 m 6300 1500 l 6300 6300 l 5100 6300 l cp gs /PC [[1.00 1.00 1.00] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 340.00 100.00] PATmp PATsp ef gr PATusp 
% Polyline
n 11400 1500 m 12600 1500 l 12600 6300 l 11400 6300 l cp gs /PC [[1.00 1.00 1.00] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 760.00 100.00] PATmp PATsp ef gr PATusp 
% Polyline
n 9300 1500 m 10500 1500 l 10500 6300 l 9300 6300 l cp gs /PC [[1.00 1.00 1.00] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 620.00 100.00] PATmp PATsp ef gr PATusp 
% Polyline
n 7200 1500 m 8400 1500 l 8400 6300 l 7200 6300 l cp gs /PC [[1.00 1.00 1.00] [1.00 1.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 480.00 100.00] PATmp PATsp ef gr PATusp 
7.500 slw
% Polyline
n 900 2700 m 2100 2700 l gs col-1 s gr 
% Polyline
n 900 2100 m 2100 2100 l gs col-1 s gr 
% Polyline
n 900 3300 m 2100 3300 l gs col-1 s gr 
15.000 slw
% Polyline
n 900 1500 m 2100 1500 l 2100 6300 l 900 6300 l cp gs col0 s gr 
/Times-Roman ff 375.00 scf sf
1395 3660 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 375.00 scf sf
1380 4305 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 375.00 scf sf
1335 6000 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
1395 4890 m
gs 1 -1 sc (c) col0 sh gr
7.500 slw
% Polyline
n 3000 5100 m 4200 5100 l gs col-1 s gr 
% Polyline
n 3000 4500 m 4200 4500 l gs col-1 s gr 
/Times-Roman ff 375.00 scf sf
1305 5445 m
gs 1 -1 sc (...) col0 sh gr
% Polyline
n 3000 1500 m 3000 1500 l 3000 1500 l 3000 1500 l cp gs col-1 s gr 
% Polyline
n 3000 2700 m 4200 2700 l gs col-1 s gr 
% Polyline
n 3000 2100 m 4200 2100 l gs col-1 s gr 
% Polyline
n 900 3900 m 2100 3900 l gs col-1 s gr 
% Polyline
n 3000 1500 m 4200 1500 l 4200 6300 l 3000 6300 l cp gs col-1 s gr 
15.000 slw
% Polyline
n 3000 1500 m 4200 1500 l 4200 6300 l 3000 6300 l cp gs col0 s gr 
7.500 slw
% Polyline
n 3000 5700 m 4200 5700 l gs col-1 s gr 
% Polyline
n 5100 1500 m 6300 1500 l 6300 6300 l 5100 6300 l cp gs col-1 s gr 
% Polyline
n 3000 3900 m 4200 3900 l gs col-1 s gr 
% Polyline
n 900 4500 m 2100 4500 l gs col-1 s gr 
% Polyline
n 5100 4500 m 6300 4500 l gs col-1 s gr 
% Polyline
n 5100 3900 m 6300 3900 l gs col-1 s gr 
% Polyline
n 5100 3300 m 6300 3300 l gs col-1 s gr 
% Polyline
n 5100 2700 m 6300 2700 l gs col-1 s gr 
% Polyline
n 3000 3300 m 4200 3300 l gs col-1 s gr 
% Polyline
n 900 5100 m 2100 5100 l gs col-1 s gr 
% Polyline
n 5100 1500 m 5100 1500 l 5100 1500 l 5100 1500 l cp gs col-1 s gr 
15.000 slw
% Polyline
n 5100 1500 m 6300 1500 l 6300 6300 l 5100 6300 l cp gs col0 s gr 
7.500 slw
% Polyline
n 7200 1500 m 7200 1500 l 7200 1500 l 7200 1500 l cp gs col-1 s gr 
% Polyline
n 7200 1500 m 8400 1500 l 8400 6300 l 7200 6300 l cp gs col-1 s gr 
% Polyline
n 7200 5700 m 8400 5700 l gs col-1 s gr 
% Polyline
n 7200 5100 m 8400 5100 l gs col-1 s gr 
% Polyline
n 7200 4500 m 8400 4500 l gs col-1 s gr 
% Polyline
n 7200 3900 m 8400 3900 l gs col-1 s gr 
% Polyline
n 7200 3300 m 8400 3300 l gs col-1 s gr 
% Polyline
n 7200 2700 m 8400 2700 l gs col-1 s gr 
% Polyline
n 7200 2100 m 8400 2100 l gs col-1 s gr 
% Polyline
n 900 5700 m 2100 5700 l gs col-1 s gr 
% Polyline
n 5100 5100 m 6300 5100 l gs col-1 s gr 
15.000 slw
% Polyline
n 7200 1500 m 8400 1500 l 8400 6300 l 7200 6300 l cp gs col0 s gr 
7.500 slw
% Polyline
n 5100 5700 m 6300 5700 l gs col-1 s gr 
% Polyline
n 9300 1500 m 10500 1500 l 10500 6300 l 9300 6300 l cp gs col-1 s gr 
% Polyline
n 9300 5700 m 10500 5700 l gs col-1 s gr 
% Polyline
n 9300 5100 m 10500 5100 l gs col-1 s gr 
% Polyline
n 9300 4500 m 10500 4500 l gs col-1 s gr 
% Polyline
n 9300 3900 m 10500 3900 l gs col-1 s gr 
% Polyline
n 9300 3300 m 10500 3300 l gs col-1 s gr 
% Polyline
n 9300 2700 m 10500 2700 l gs col-1 s gr 
% Polyline
n 9300 2100 m 10500 2100 l gs col-1 s gr 
% Polyline
n 900 1500 m 2100 1500 l 2100 6300 l 900 6300 l cp gs col-1 s gr 
% Polyline
n 5100 2100 m 6300 2100 l gs col-1 s gr 
15.000 slw
% Polyline
n 9300 1500 m 10500 1500 l 10500 6300 l 9300 6300 l cp gs col0 s gr 
7.500 slw
% Polyline
n 11400 1500 m 11400 1500 l 11400 1500 l 11400 1500 l cp gs col-1 s gr 
% Polyline
n 11400 1500 m 12600 1500 l 12600 6300 l 11400 6300 l cp gs col-1 s gr 
% Polyline
n 11400 5700 m 12600 5700 l gs col-1 s gr 
% Polyline
n 11400 5100 m 12600 5100 l gs col-1 s gr 
% Polyline
n 11400 4500 m 12600 4500 l gs col-1 s gr 
% Polyline
n 11400 3900 m 12600 3900 l gs col-1 s gr 
% Polyline
n 11400 3300 m 12600 3300 l gs col-1 s gr 
% Polyline
n 11400 2700 m 12600 2700 l gs col-1 s gr 
% Polyline
n 11400 2100 m 12600 2100 l gs col-1 s gr 
% Polyline
n 900 1500 m 900 1500 l 900 1500 l 900 1500 l cp gs col-1 s gr 
% Polyline
n 9300 1500 m 9300 1500 l 9300 1500 l 9300 1500 l cp gs col-1 s gr 
15.000 slw
% Polyline
n 11400 1500 m 12600 1500 l 12600 6300 l 11400 6300 l cp gs col0 s gr 
/Times-Roman ff 375.00 scf sf
3495 4890 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 375.00 scf sf
3405 5445 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
3435 6000 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
5595 4890 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 375.00 scf sf
5505 5445 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
5535 6000 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
7695 4890 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 375.00 scf sf
7605 5445 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
7635 6000 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
9795 4890 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 375.00 scf sf
9705 5445 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
9735 6000 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
11895 3660 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 375.00 scf sf
11880 4305 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 375.00 scf sf
11895 4890 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 375.00 scf sf
11805 5445 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
11835 6000 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 375.00 scf sf
3300 4305 m
gs 1 -1 sc (a+b) col0 sh gr
/Times-Roman ff 375.00 scf sf
5385 4320 m
gs 1 -1 sc (b-a) col0 sh gr
/Times-Roman ff 375.00 scf sf
7515 4335 m
gs 1 -1 sc (a*b) col0 sh gr
/Times-Roman ff 375.00 scf sf
9645 4335 m
gs 1 -1 sc (b/a) col0 sh gr
/Times-Roman ff 375.00 scf sf
11880 3090 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
1200 1170 m
gs 1 -1 sc (Stack) col0 sh gr
/Times-Roman ff 300.00 scf sf
1155 840 m
gs 1 -1 sc (Initial) col0 sh gr
/Times-Roman ff 375.00 scf sf
7395 1035 m
gs 1 -1 sc (MUL) col0 sh gr
/Times-Roman ff 375.00 scf sf
5355 1020 m
gs 1 -1 sc (SUB) col0 sh gr
/Times-Roman ff 375.00 scf sf
3225 1020 m
gs 1 -1 sc (ADD) col0 sh gr
/Times-Roman ff 375.00 scf sf
9570 1020 m
gs 1 -1 sc (DIV) col0 sh gr
/Times-Roman ff 375.00 scf sf
11610 1020 m
gs 1 -1 sc (DUP) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 216 4565 a(At)k(the)h(be)o(ginning)j(of)d(the)g(e)o(x)o
(ecution)i(of)d(a)h(program,)i(the)e(stack)h(will)e(contain)j(a)e
(single)h(inte)o(ger)g(only:)39 b(the)75 4678 y(input.)32
b(At)23 b(the)i(end)f(of)h(the)f(computation,)j(the)e(stack)g(must)f
(also)h(contain)h(only)f(one)g(inte)o(ger;)h(this)f(number)g(is)f(the)
75 4791 y(result)h(of)e(the)h(computation.)216 4908 y(There)g(are)g
(three)g(cases)h(in)e(which)h(the)g(stack)g(machine)h(enters)g(an)e
(error)i(state:)211 5113 y Fl(\017)46 b Fr(A)23 b Fq(DIV)p
Fr(-command)g(is)g(e)o(x)o(ecuted,)i(and)f(the)g(top-most)h(element)f
(of)g(the)g(stack)g(is)g(0.)211 5318 y Fl(\017)46 b Fr(A)23
b Fq(ADD)p Fr(,)e Fq(SUB)p Fr(,)g Fq(MUL)g Fr(or)j Fq(DIV)p
Fr(-command)f(is)g(e)o(x)o(ecuted)i(when)f(the)g(stack)g(contains)i
(only)e(one)g(element.)211 5523 y Fl(\017)46 b Fr(An)23
b(operation)j(produces)g(a)d(v)n(alue)i(greater)g(than)f(30000)h(in)e
(absolute)j(v)n(alue.)p 75 5622 1470 4 v 176 5683 a Fk(1)209
5710 y Fj(This)19 b(corresponds)i(to)e Fi(/)f Fj(applied)i(to)f(tw)o(o)
g(inte)o(gers)g(in)f(C/C++,)h(and)g Fi(DIV)f Fj(in)h(P)o(ascal.)1890
5960 y Fr(1)p eop
%%Page: 2 3
2 2 bop 75 44 a Fx(Input)75 251 y Fr(The)22 b(input)i(consists)h(of)d
(a)g(series)i(of)f(function)h(descriptions.)32 b(Each)23
b(description)j(starts)d(with)g(a)f(line)h(containing)j(a)75
364 y(single)d(inte)o(ger)g Fn(n)f Fr(\()p Fn(n)d Fl(\024)f
Fr(10\),)23 b(the)f(number)h(of)e(input/output)26 b(pairs)d(to)f(follo)
n(w)-6 b(.)28 b(The)21 b(follo)n(wing)j(tw)o(o)d(lines)i(contains)75
477 y Fn(n)k Fr(inte)o(gers)i(each:)38 b Fn(x)728 491
y Fp(1)766 477 y Fm(;)10 b Fn(x)841 491 y Fp(2)879 477
y Fm(;)g(:)g(:)g(:)h(;)f Fn(x)1095 491 y Fe(n)1160 477
y Fr(in)27 b(the)h(\002rst)f(line)h(\(all)g(dif)n(ferent\),)j(and)d
Fn(y)2464 491 y Fp(1)2501 477 y Fm(;)10 b Fn(y)2576 491
y Fp(2)2614 477 y Fm(;)g(:)g(:)g(:)h(;)f Fn(y)2830 491
y Fe(n)2895 477 y Fr(in)28 b(the)f(second)i(line.)42
b(The)75 590 y(numbers)25 b(will)e(be)h(no)f(more)h(than)g(30000)h(in)e
(absolute)j(v)n(alue.)216 703 y(The)d(input)i(is)e(terminated)j(by)d(a)
g(test)h(case)h(starting)g(with)e Fn(n)e Fh(=)f Fr(0.)28
b(This)c(test)g(case)g(should)h(not)f(be)f(processed.)75
995 y Fx(Output)75 1202 y Fr(Y)-10 b(ou)36 b(are)h(to)g(\002nd)f(the)h
(shortest)i(program)f(that)f(computes)h(a)e(function)53
b Fn(f)13 b Fr(,)39 b(such)f(that)51 b Fn(f)13 b Fh(\()p
Fn(x)3085 1216 y Fe(i)3108 1202 y Fh(\))28 b(=)f Fn(y)3309
1216 y Fe(i)3368 1202 y Fr(for)37 b(all)g Fn(i)27 b Fl(2)75
1315 y(f)p Fr(1)p Fm(;)10 b(:)g(:)g(:)i(;)e Fn(n)p Fl(g)p
Fr(.)43 b(This)28 b(implies)h(that)g(the)f(program)h(you)g(output)h
(may)e(not)g(enter)h(an)f(error)h(state)g(if)f(e)o(x)o(ecuted)i(on)e
(the)75 1428 y(inputs)g Fn(x)363 1442 y Fe(i)412 1428
y Fr(\(although)h(it)e(may)f(enter)i(an)e(error)i(state)f(for)g(other)h
(inputs\).)40 b(Consider)28 b(only)g(programs)g(that)f(ha)n(v)o(e)g(at)
75 1541 y(most)d(10)f(statements.)216 1654 y(F)o(or)28
b(each)i(function)i(description,)h(output)e(\002rst)e(the)h(number)g
(of)f(the)g(description.)49 b(Then)30 b(print)g(out)f(the)h(se-)75
1767 y(quence)i(of)f(commands)h(that)g(mak)o(e)f(up)g(the)g(shortest)i
(program)f(to)e(compute)j(the)e(gi)n(v)o(en)g(function.)53
b(If)31 b(there)g(is)75 1880 y(more)d(than)h(one)f(such)h(program,)h
(print)f(the)f(le)o(xicographically)33 b(smallest.)43
b(If)28 b(there)h(is)e(no)h(program)i(of)d(at)h(most)75
1993 y(10)h(statements)h(that)f(computes)i(the)d(function,)k(print)e
(the)e(string)i(\223)p Fq(Impossible)p Fr(\224.)39 b(If)29
b(the)f(shortest)j(program)75 2106 y(consists)26 b(of)d(zero)h
(commands,)h(print)f(\223)p Fq(Empty)53 b(Sequence)p
Fr(\224.)216 2219 y(Output)24 b(a)f(blank)i(line)f(after)h(each)f(test)
g(case.)75 2511 y Fx(Sample)31 b(Input)75 2718 y Fq(4)75
2831 y(1)54 b(2)g(3)g(4)75 2944 y(0)g(-2)g(-6)f(-12)75
3057 y(3)75 3170 y(1)h(2)g(3)75 3283 y(1)g(11)g(1998)75
3396 y(1)75 3509 y(1998)75 3622 y(1998)75 3734 y(0)75
4027 y Fx(Sample)31 b(Output)75 4234 y Fq(Program)51
b(1)75 4347 y(DUP)i(DUP)g(MUL)h(SUB)75 4573 y(Program)d(2)75
4686 y(Impossible)75 4912 y(Program)g(3)75 5024 y(Empty)h(sequence)1890
5960 y Fr(2)p eop
%%Page: 3 4
3 3 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 157 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1519 539 y Fy(Pr)m(oblem)45 b(B)1480
770 y Fv(The)35 b(die)g(is)h(cast)1020 992 y Ft(Sour)n(ce:)80
b Fs(dice.\(c|cc|pas|java\))1020 1109 y Ft(Input:)133
b Fs(dice.in)75 1434 y Fr(InterGames)22 b(is)f(a)g(high-tech)j(startup)
e(compan)o(y)g(that)g(specializes)i(in)d(de)n(v)o(eloping)j(technology)
g(that)e(allo)n(ws)f(users)75 1547 y(to)26 b(play)h(games)f(o)o(v)o(er)
g(the)h(Internet.)38 b(A)25 b(mark)o(et)i(analysis)h(has)f(alerted)g
(them)g(to)f(the)g(f)o(act)h(that)f(games)h(of)f(chance)75
1660 y(are)i(pretty)i(popular)g(among)f(their)g(potential)i(customers.)
44 b(Be)28 b(it)g(Monopoly)-6 b(,)31 b(ludo)e(or)f(backgammon,)j(most)d
(of)75 1773 y(these)d(games)e(in)l(v)n(olv)o(e)j(thro)n(wing)e(dice)h
(at)e(some)h(stage)g(of)g(the)f(game.)216 1886 y(Of)f(course,)i(it)f(w)
o(ould)h(be)e(unreasonable)27 b(if)c(players)i(were)d(allo)n(wed)i(to)f
(thro)n(w)g(their)g(dice)h(and)f(then)h(enter)g(the)75
1999 y(result)g(into)f(the)g(computer)l(,)h(since)f(cheating)i(w)o
(ould)e(be)g(w)o(ay)f(to)g(easy)-6 b(.)29 b(So,)22 b(instead,)i
(InterGames)g(has)f(decided)h(to)75 2112 y(supply)i(their)f(users)g
(with)f(a)f(camera)i(that)g(tak)o(es)g(a)e(picture)j(of)e(the)g(thro)n
(wn)h(dice,)g(analyzes)h(the)e(picture)i(and)e(then)75
2224 y(transmits)h(the)f(outcome)h(of)e(the)h(thro)n(w)g(automatically)
-6 b(.)216 2337 y(F)o(or)22 b(this)i(the)o(y)f(desperately)k(need)d(a)e
(program)j(that,)e(gi)n(v)o(en)h(an)f(image)g(containing)j(se)n(v)o
(eral)f(dice,)e(determines)75 2450 y(the)h(numbers)h(of)e(dots)h(on)g
(the)g(dice.)216 2563 y(W)-7 b(e)27 b(mak)o(e)g(the)h(follo)n(wing)h
(assumptions)h(about)f(the)e(input)i(images.)41 b(The)27
b(images)h(contain)h(only)f(three)h(dif-)75 2676 y(ferent)j(pix)o(el)g
(v)n(alues:)45 b(for)31 b(the)g(background,)36 b(the)c(dice)f(and)h
(the)f(dots)g(on)h(the)f(dice.)51 b(W)-7 b(e)30 b(consider)k(tw)o(o)c
(pix)o(els)75 2789 y Fn(connected)d Fr(if)d(the)o(y)g(share)h(an)g
(edge)g(\226)e(meeting)j(at)e(a)f(corner)j(is)e(not)g(enough.)33
b(In)24 b(the)g(\002gure,)g(pix)o(els)h(A)e(and)i(B)e(are)75
2902 y(connected,)j(b)n(ut)e(B)e(and)i(C)f(are)h(not.)1560
3691 y @beginspecial 0 @llx 0 @lly 229 @urx 230 @ury
850 @rhi @setspecial
%%BeginDocument: eps/dice.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-197.0 370.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 6862 m -1000 -1000 l 7762 -1000 l 7762 6862 l cp clip
 0.06299 0.06299 sc
% Polyline
7.500 slw
n 3150 3150 m 6750 3150 l 6750 5850 l 3150 5850 l cp gs col0 s gr 
% Polyline
n 4950 5850 m 4950 2250 l gs col0 s gr 
% Polyline
n 5850 2250 m 5850 5850 l gs col0 s gr 
% Polyline
n 6750 4050 m 3150 4050 l gs col0 s gr 
% Polyline
n 3150 4950 m 6750 4950 l gs col0 s gr 
% Polyline
n 3150 3150 m 3150 2250 l 6750 2250 l 6750 3150 l gs col0 s gr 
% Polyline
n 4050 2250 m 4050 3150 l 4050 5850 l gs col0 s gr 
/Times-Roman ff 375.00 scf sf
4365 4635 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman ff 375.00 scf sf
4410 3735 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman ff 375.00 scf sf
5265 4635 m
gs 1 -1 sc (C) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 216 3863 a(A)f(set)i Fn(S)f Fr(of)g(pix)o(els)i(is)e
(connected)j(if)d(for)g(e)n(v)o(ery)h(pair)f Fh(\()p
Fn(a)p Fm(;)10 b Fn(b)p Fh(\))26 b Fr(of)e(pix)o(els)h(in)f
Fn(S)q Fr(,)g(there)h(is)f(a)g(sequence)i Fn(a)3408 3877
y Fp(1)3446 3863 y Fr(,)d Fn(a)3537 3877 y Fp(2)3575
3863 y Fr(,)g Fm(:)10 b(:)g(:)h Fr(,)75 3976 y Fn(a)120
3990 y Fe(k)178 3976 y Fr(in)23 b Fn(S)h Fr(such)h(that)f
Fn(a)c Fh(=)g Fn(a)890 3990 y Fp(1)951 3976 y Fr(and)k
Fn(b)c Fh(=)g Fn(a)1306 3990 y Fe(k)1342 3976 y Fr(,)i(and)i
Fn(a)1586 3990 y Fe(i)1632 3976 y Fr(and)g Fn(a)1831
3990 y Fe(i)p Ff(+)p Fp(1)1961 3976 y Fr(are)g(connected)i(for)e(1)d
Fl(\024)f Fn(i)g Fm(<)g Fn(k)r Fr(.)216 4088 y(W)-7 b(e)25
b(consider)i(all)e(maximally)i(connected)h(sets)e(consisting)i(solely)f
(of)e(non-background)30 b(pix)o(els)c(to)g(be)f(dice.)75
4201 y(`Maximally)d(connected')i(means)d(that)h(you)f(cannot)h(add)f
(an)o(y)g(other)h(non-background)k(pix)o(els)c(to)e(the)h(set)g
(without)75 4314 y(making)28 b(it)e(dis-connected.)42
b(Lik)o(e)n(wise)27 b(we)f(consider)i(e)n(v)o(ery)f(maximal)g
(connected)j(set)c(of)h(dot)g(pix)o(els)h(to)e(form)h(a)75
4427 y(dot.)75 4713 y Fx(Input)75 4920 y Fr(The)37 b(input)h(consists)h
(of)e(pictures)i(of)f(se)n(v)o(eral)g(dice)g(thro)n(ws.)69
b(Each)38 b(picture)g(description)j(starts)d(with)f(a)g(line)75
5033 y(containing)h(tw)o(o)c(numbers)i Fn(w)e Fr(and)h
Fn(h)p Fr(,)j(the)d(width)g(and)g(height)h(of)f(the)g(picture,)k
(respecti)n(v)o(ely)-6 b(.)66 b(These)35 b(v)n(alues)75
5146 y(satisfy)25 b(5)c Fl(\024)f Fn(w)-7 b Fm(;)10 b
Fn(h)20 b Fl(\024)g Fr(50.)216 5259 y(The)29 b(follo)n(wing)j
Fn(h)d Fr(lines)h(contain)i Fn(w)c Fr(characters)33 b(each.)48
b(The)29 b(characters)j(can)e(be:)42 b(\223)p Fq(.)p
Fr(\224)47 b(for)30 b(a)f(background)75 5372 y(pix)o(el,)24
b(\223)p Fq(*)p Fr(\224)f(for)h(a)f(pix)o(el)h(of)f(a)g(die,)h(and)g
(\223)p Fq(X)p Fr(\224)f(for)h(a)f(pix)o(el)h(of)f(a)h(die')-5
b(s)24 b(dot.)216 5485 y(Dice)e(may)g(ha)n(v)o(e)g(dif)n(ferent)i
(sizes)f(and)g(not)f(be)g(entirely)i(square)f(due)g(to)f(optical)h
(distortion.)31 b(The)22 b(picture)i(will)75 5598 y(contain)h(at)f
(least)g(one)g(die,)g(and)g(the)f(numbers)i(of)f(dots)g(per)g(die)g(is)
f(between)i(1)e(and)h(6,)f(inclusi)n(v)o(e.)216 5710
y(The)g(input)i(is)e(terminated)j(by)d(a)g(picture)j(starting)f(with)e
Fn(w)d Fh(=)g Fn(h)h Fh(=)f Fr(0,)j(which)g(should)j(not)e(be)f
(processed.)1890 5960 y(3)p eop
%%Page: 4 5
4 4 bop 75 44 a Fx(Output)75 251 y Fr(F)o(or)30 b(each)i(thro)n(w)f(of)
g(dice,)j(\002rst)c(output)j(its)e(number)-5 b(.)53 b(Then)31
b(output)h(the)g(number)g(of)f(dots)h(on)f(the)g(dice)h(in)f(the)75
364 y(picture,)25 b(sorted)g(in)e(increasing)k(order)-5
b(.)216 477 y(Print)24 b(a)f(blank)h(line)h(after)f(each)g(test)g
(case.)75 770 y Fx(Sample)31 b(Input)75 977 y Fq(30)54
b(15)75 1090 y(...............)o(..)o(..)o(..)o(...)o(..)o(..)o(..)75
1202 y(...............)o(..)o(..)o(..)o(...)o(..)o(..)o(..)75
1315 y(...............)o(*.)o(..)o(..)o(...)o(..)o(..)o(..)75
1428 y(...*****......*)o(**)o(*.)o(..)o(...)o(..)o(..)o(..)75
1541 y(...*X***.....**)o(X*)o(**)o(..)o(...)o(..)o(..)o(..)75
1654 y(...*****....***)o(X*)o(*.)o(..)o(...)o(..)o(..)o(..)75
1767 y(...***X*.....**)o(**)o(..)o(..)o(...)o(..)o(..)o(..)75
1880 y(...*****.......)o(*.)o(..)o(..)o(...)o(..)o(..)o(..)75
1993 y(...............)o(..)o(..)o(..)o(...)o(..)o(..)o(..)75
2106 y(........***....)o(..)o(..)o(**)o(***)o(*.)o(..)o(..)75
2219 y(.......**X****.)o(..)o(..)o(*X)o(**X)o(*.)o(..)o(..)75
2332 y(......*******..)o(..)o(..)o(**)o(***)o(*.)o(..)o(..)75
2444 y(.....****X**...)o(..)o(..)o(*X)o(**X)o(*.)o(..)o(..)75
2557 y(........***....)o(..)o(..)o(**)o(***)o(*.)o(..)o(..)75
2670 y(...............)o(..)o(..)o(..)o(...)o(..)o(..)o(..)75
2783 y(0)g(0)75 3076 y Fx(Sample)31 b(Output)75 3283
y Fq(Throw)52 b(1)75 3396 y(1)i(2)g(2)g(4)1890 5960 y
Fr(4)p eop
%%Page: 5 6
5 5 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 162 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1515 551 y Fy(Pr)m(oblem)44 b(C)1038
787 y Fv(It')-5 b(s)35 b(not)g(a)h(Bug,)f(it')-5 b(s)34
b(a)i(F)l(eatur)m(e!)1020 1079 y Ft(Sour)n(ce:)80 b Fs
(bugs.\(c|cc|pas|java\))1020 1195 y Ft(Input:)133 b Fs(bugs.in)75
1644 y Fr(It)21 b(is)h(a)f(curious)j(f)o(act)e(that)g(consumers)i(b)n
(uying)g(a)d(ne)n(w)g(softw)o(are)i(product)h(generally)g(do)e
Fn(not)g Fr(e)o(xpect)h(the)f(softw)o(are)75 1757 y(to)32
b(be)f(b)n(ug-free.)56 b(Can)32 b(you)g(imagine)h(b)n(uying)g(a)f(car)g
(whose)g(steering)i(wheel)e(only)g(turns)h(to)f(the)g(right?)55
b(Or)31 b(a)75 1870 y(CD-player)25 b(that)g(plays)g(only)g(CDs)f(with)g
(country)i(music)e(on)h(them?)31 b(Probably)26 b(not.)31
b(But)24 b(for)h(softw)o(are)g(systems)75 1983 y(it)f(seems)h(to)f(be)g
(acceptable)j(if)d(the)o(y)h(do)f(not)h(perform)g(as)f(the)o(y)h
(should)h(do.)31 b(In)24 b(f)o(act,)h(man)o(y)f(softw)o(are)h
(companies)75 2096 y(ha)n(v)o(e)34 b(adopted)i(the)d(habit)i(of)e
(sending)j(out)e(patches)h(to)e(\002x)g(b)n(ugs)h(e)n(v)o(ery)g(fe)n(w)
f(weeks)h(after)g(a)f(ne)n(w)g(product)i(is)75 2209 y(released)26
b(\(and)e(e)n(v)o(en)g(char)n(ging)i(mone)o(y)e(for)f(the)h(patches\).)
216 2327 y(T)m(in)o(yw)o(are)31 b(Inc.)49 b(is)31 b(one)g(of)f(those)h
(companies.)52 b(After)30 b(releasing)j(a)d(ne)n(w)g(w)o(ord)g
(processing)k(softw)o(are)e(this)75 2440 y(summer)l(,)g(the)o(y)f(ha)n
(v)o(e)f(been)h(producing)i(patches)f(e)n(v)o(er)f(since.)49
b(Only)30 b(this)h(week)o(end)h(the)o(y)e(ha)n(v)o(e)h(realized)h(a)e
(big)75 2552 y(problem)j(with)f(the)g(patches)i(the)o(y)e(released.)57
b(While)32 b(all)g(patches)i(\002x)d(some)h(b)n(ugs,)j(the)o(y)e(often)
g(rely)f(on)g(other)75 2665 y(b)n(ugs)24 b(to)e(be)h(present)h(to)e(be)
h(installed.)31 b(This)22 b(happens)j(because)f(to)f(\002x)e(one)i(b)n
(ug,)h(the)e(patches)j(e)o(xploit)f(the)f(special)75
2778 y(beha)n(vior)j(of)d(the)h(program)h(due)f(to)f(another)j(b)n(ug.)
216 2896 y(More)18 b(formally)-6 b(,)21 b(the)d(situation)i(looks)g
(lik)o(e)e(this.)28 b(T)m(in)o(yw)o(are)18 b(has)g(found)i(a)d(total)i
(of)f Fn(n)g Fr(b)n(ugs)h Fn(B)c Fh(=)g Fl(f)p Fn(b)3339
2910 y Fp(1)3377 2896 y Fm(;)10 b Fn(b)3457 2910 y Fp(2)3495
2896 y Fm(;)g(:)g(:)g(:)h(;)f Fn(b)3716 2910 y Fe(n)3754
2896 y Fl(g)75 3009 y Fr(in)22 b(their)h(softw)o(are.)30
b(And)22 b(the)o(y)h(ha)n(v)o(e)g(released)h Fn(m)d Fr(patches)31
b Fn(p)2015 3023 y Fp(1)2053 3009 y Fr(,)d Fn(p)2149
3023 y Fp(2)2187 3009 y Fr(,)22 b Fm(:)10 b(:)g(:)g Fr(,)29
b Fn(p)2434 3023 y Fe(m)2486 3009 y Fr(.)f(T)-7 b(o)21
b(apply)j(patch)30 b Fn(p)3146 3023 y Fe(i)3190 3009
y Fr(to)23 b(the)f(softw)o(are,)75 3122 y(the)27 b(b)n(ugs)i
Fn(B)465 3085 y Ff(+)465 3148 y Fe(i)542 3122 y Fl(\022)22
b Fn(B)k Fr(ha)n(v)o(e)i(to)f(be)g(present)i(in)e(the)h(softw)o(are,)h
(and)e(the)h(b)n(ugs)g Fn(B)2554 3084 y Fd(\000)2554
3148 y Fe(i)2632 3122 y Fl(\022)21 b Fn(B)26 b Fr(must)i(be)f(absent)h
(\(of)g(course)75 3235 y Fn(B)131 3197 y Ff(+)131 3260
y Fe(i)199 3235 y Fl(\\)13 b Fn(B)329 3197 y Fd(\000)329
3260 y Fe(i)403 3235 y Fh(=)504 3233 y Fo(/)494 3235
y(0)23 b Fr(holds\).)30 b(The)23 b(patch)i(then)f(\002x)o(es)f(the)h(b)
n(ugs)g Fn(F)1985 3197 y Fd(\000)1969 3260 y Fe(i)2061
3235 y Fl(\022)c Fn(B)i Fr(\(if)i(the)o(y)g(ha)n(v)o(e)g(been)g
(present\))h(and)f(introduces)75 3348 y(the)g(ne)n(w)f(b)n(ugs)h
Fn(F)637 3310 y Ff(+)620 3373 y Fe(i)712 3348 y Fl(\022)c
Fn(B)j Fr(\(where,)g(again,)h Fn(F)1485 3310 y Fd(\000)1468
3373 y Fe(i)1553 3348 y Fl(\\)13 b Fn(F)1689 3310 y Ff(+)1674
3373 y Fe(i)1765 3348 y Fh(=)1866 3346 y Fo(/)1856 3348
y(0)p Fr(\).)216 3465 y(T)m(in)o(yw)o(are')-5 b(s)26
b(problem)g(is)f(a)g(simple)h(one.)33 b(Gi)n(v)o(en)25
b(the)h(original)h(v)o(ersion)f(of)f(their)h(softw)o(are,)h(which)e
(contains)75 3578 y(all)h(the)g(b)n(ugs)g(in)g Fn(B)p
Fr(,)e(it)i(is)f(possible)j(to)d(apply)i(a)e(sequence)j(of)e(patches)h
(to)f(the)g(softw)o(are)g(which)g(results)i(in)d(a)g(b)n(ug-)75
3691 y(free)h(v)o(ersion)h(of)f(the)g(softw)o(are?)37
b(And)25 b(if)h(so,)g(assuming)h(that)f(e)n(v)o(ery)g(patch)h(tak)o(es)
g(a)e(certain)i(time)f(to)g(apply)-6 b(,)27 b(ho)n(w)75
3804 y(long)d(does)h(the)f(f)o(astest)h(sequence)h(tak)o(e?)75
4125 y Fx(Input)75 4341 y Fr(The)31 b(input)h(contains)h(se)n(v)o(eral)
f(product)h(descriptions.)55 b(Each)32 b(description)i(starts)e(with)f
(a)g(line)g(containing)k(tw)o(o)75 4454 y(inte)o(gers)27
b Fn(n)f Fr(and)g Fn(m)p Fr(,)f(the)h(number)h(of)e(b)n(ugs)i(and)f
(patches,)i(respecti)n(v)o(ely)-6 b(.)39 b(These)26 b(v)n(alues)h
(satisfy)g(1)22 b Fl(\024)f Fn(n)h Fl(\024)f Fr(20)26
b(and)75 4567 y(1)e Fl(\024)f Fn(m)f Fl(\024)h Fr(100.)46
b(This)29 b(is)g(follo)n(wed)h(by)f Fn(m)f Fr(lines)i(describing)i(the)
d Fn(m)f Fr(patches)i(in)f(order)-5 b(.)47 b(Each)28
b(line)i(contains)h(an)75 4680 y(inte)o(ger)l(,)25 b(the)f(time)f(in)h
(seconds)h(it)e(tak)o(es)i(to)e(apply)i(the)f(patch,)g(and)g(tw)o(o)g
(strings)h(of)e Fn(n)g Fr(characters)k(each.)216 4798
y(The)d(\002rst)h(of)f(these)i(strings)g(describes)h(the)e(b)n(ugs)h
(that)f(ha)n(v)o(e)g(to)g(be)f(present)j(or)d(absent)i(before)g(the)f
(patch)h(can)75 4911 y(be)d(applied.)30 b(The)22 b Fn(i)p
Fr(-th)h(position)i(of)d(that)h(string)h(is)e(a)h(\223)p
Fq(+)p Fr(\224)f(if)g(b)n(ug)h Fn(b)2191 4925 y Fe(i)2236
4911 y Fr(has)g(to)f(be)h(present,)h(a)e(\223)p Fq(-)p
Fr(\224)g(if)h(b)n(ug)g Fn(b)3384 4925 y Fe(i)3429 4911
y Fr(has)g(to)f(be)75 5023 y(absent,)j(and)f(a)f(\223)p
Fq(0)p Fr(\224)g(if)g(it)g(doesn')n(t)j(matter)e(whether)h(the)e(b)n
(ug)i(is)e(present)i(or)f(not.)216 5141 y(The)j(second)i(string)f
(describes)i(which)d(b)n(ugs)i(are)e(\002x)o(ed)g(and)h(introduced)i
(by)d(the)h(patch.)41 b(The)26 b Fn(i)p Fr(-th)i(position)75
5254 y(of)e(that)g(string)h(is)e(a)g(\223)p Fq(+)p Fr(\224)g(if)h(b)n
(ug)g Fn(b)1164 5268 y Fe(i)1212 5254 y Fr(is)f(introduced)k(by)d(the)f
(patch,)i(a)f(\223)p Fq(-)p Fr(\224)f(if)g(b)n(ug)h Fn(b)2717
5268 y Fe(i)2765 5254 y Fr(is)g(remo)o(v)o(ed)g(by)g(the)f(patch)i
(\(if)75 5367 y(it)d(w)o(as)g(present\),)i(and)f(a)f(\223)p
Fq(0)p Fr(\224)g(if)g(b)n(ug)h Fn(b)1312 5381 y Fe(i)1359
5367 y Fr(is)f(not)h(af)n(fected)h(by)f(the)f(patch)i(\(if)e(it)g(w)o
(as)g(present)i(before,)g(it)e(still)h(is,)f(if)g(it)75
5480 y(w)o(asn')n(t,)g(is)g(still)g(isn')n(t\).)216 5598
y(The)31 b(input)h(is)g(terminated)h(by)e(a)g(description)k(starting)e
(with)e Fn(n)25 b Fh(=)f Fn(m)h Fh(=)f Fr(0.)52 b(This)31
b(test)h(case)f(should)i(not)f(be)75 5710 y(processed.)1890
5960 y(5)p eop
%%Page: 6 7
6 6 bop 75 44 a Fx(Output)75 251 y Fr(F)o(or)28 b(each)h(product)h
(description)i(\002rst)c(output)i(the)e(number)i(of)e(the)h(product.)45
b(Then)29 b(output)h(whether)f(there)g(is)g(a)75 364
y(sequence)35 b(of)d(patches)i(that)e(remo)o(v)o(es)h(all)f(b)n(ugs)i
(from)e(a)f(product)k(that)d(has)h(all)f Fn(n)g Fr(b)n(ugs.)56
b(Note)32 b(that)h(in)f(such)h(a)75 477 y(sequence)e(a)d(patch)i(may)e
(be)g(used)i(multiple)f(times.)44 b(If)28 b(there)i(is)e(such)h(a)f
(sequence,)k(output)e(the)f(time)f(tak)o(en)i(by)75 590
y(the)f(f)o(astest)i(sequence)g(in)e(the)g(format)h(sho)n(wn)f(in)g
(the)g(sample)h(output.)47 b(If)29 b(there)g(is)g(no)g(such)h
(sequence,)j(output)75 703 y(\223)p Fq(Bugs)53 b(cannot)f(be)i(fixed.)p
Fr(\224.)216 816 y(Print)24 b(a)f(blank)h(line)h(after)f(each)g(test)g
(case.)75 1108 y Fx(Sample)31 b(Input)75 1315 y Fq(3)54
b(3)75 1428 y(1)g(000)f(00-)75 1541 y(1)h(00-)f(0-+)75
1654 y(2)h(0--)f(-++)75 1767 y(4)h(1)75 1880 y(7)g(0-0+)f(----)75
1993 y(0)h(0)75 2285 y Fx(Sample)31 b(Output)75 2492
y Fq(Product)51 b(1)75 2605 y(Fastest)g(sequence)g(takes)i(8)h
(seconds.)75 2831 y(Product)d(2)75 2944 y(Bugs)i(cannot)f(be)h(fixed.)
1890 5960 y Fr(6)p eop
%%Page: 7 8
7 7 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 158 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1515 542 y Fy(Pr)m(oblem)44 b(D)1578
774 y Fv(Re\003ections)1020 1045 y Ft(Sour)n(ce:)80 b
Fs(reflect.\(c|cc|pas|java\))1020 1162 y Ft(Input:)133
b Fs(reflect.in)75 1581 y Fr(Rendering)30 b(realistic)g(images)f(of)f
(imaginary)i(en)l(vironments)i(or)c(objects)i(is)e(an)g(interesting)j
(topic)f(in)e(computer)75 1694 y(graphics.)j(One)23 b(of)h(the)f(most)h
(popular)h(methods)g(for)f(this)g(purpose)i(is)d Fn(r)o(ay-tr)o(acing)p
Fr(.)216 1808 y(T)-7 b(o)29 b(render)j(images)f(using)g(ray-tracing,)k
(one)c(computes)h(\(traces\))g(the)e(path)h(that)g(rays)g(of)f(light)h
(entering)i(a)75 1921 y(scene)25 b(will)e(tak)o(e.)29
b(W)-7 b(e)23 b(ask)h(you)g(to)f(write)h(a)f(program)i(that)f(computes)
h(such)f(paths)h(in)e(a)h(restricted)i(en)l(vironment.)216
2035 y(F)o(or)e(simplicity)-6 b(,)26 b(we)e(will)g(consider)j(only)e
(tw)o(o-dimensional)j(scenes.)34 b(All)24 b(objects)i(in)e(the)h(scene)
h(are)f(totally)75 2148 y(re\003ecti)n(v)o(e)f(\(mirror\))g(spheres.)30
b(When)23 b(a)g(ray)g(of)g(light)h(hits)f(such)h(a)f(sphere,)h(it)f(is)
f(re\003ected)j(such)e(that)h(the)f(angle)h(of)75 2261
y(the)g(incoming)h(ray)f(and)g(the)g(lea)n(ving)h(ray)f(against)h(the)f
(tangent)h(are)f(the)g(same:)1440 3342 y @beginspecial
0 @llx 0 @lly 246 @urx 246 @ury 1133 @rhi @setspecial
%%BeginDocument: eps/reflect1.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-201.0 325.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 5455 m 0 0 l 7477 0 l 7477 5455 l cp clip
 0.06000 0.06000 sc
% Arc
7.500 slw
gs n 5737.5 3937.5 1282.7 -164.7 -127.9 arc
gs col0 s gr
 gr

% Arc
gs n 5062.5 3937.5 1282.7 -52.1 -15.3 arc
gs col0 s gr
 gr

% Arc
15.000 slw
gs n 5400.0 5400.0 1800.0 180.0 0.0 arc
gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 0.00] PATmp PATsp ef gr PATusp gs col0 s gr
 gr

% Polyline
gs  clippath
6547 1571 m 6722 1396 l 6650 1633 l 6817 1355 l 6714 1293 l cp
clip
n 4050 1350 m 5400 3600 l 6750 1350 l gs col0 s gr gr

% arrowhead
n 6547 1571 m 6722 1396 l 6650 1633 l 6599 1602 l 6547 1571 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
 [60] 0 sd
n 3375 3600 m 7425 3600 l gs col0 s gr  [] 0 sd
/Times-Roman ff 300.00 scf sf
4800 3465 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman ff 300.00 scf sf
5760 3435 m
gs 1 -1 sc (w) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 216 3561 a(The)f(follo)n(wing)i(\002gure)f(sho)n(ws)g(a)f
(typical)i(path)f(that)g(a)f(ray)h(of)g(light)g(may)f(tak)o(e)i(in)e
(such)i(a)e(scene:)1335 4642 y @beginspecial 0 @llx 0
@lly 485 @urx 397 @ury 1133 @rhi @setspecial
%%BeginDocument: eps/reflect2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-11.0 419.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 7007 m 0 0 l 8291 0 l 8291 7007 l cp clip
 0.06000 0.06000 sc
15.000 slw
% Ellipse
n 3825 4950 1125 1125 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 180.00 255.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5400 2250 503 503 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 326.47 116.47] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7425 4275 811 811 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 440.93 230.93] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 3375 1575 503 503 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 191.47 71.47] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1575 3600 900 900 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 45.00 180.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6750 2925 225 225 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 435.00 180.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1125 900 503 503 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 41.47 26.47] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5625 5850 225 225 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 360.00 375.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6300 1125 712 712 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 372.53 27.53] PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
gs  clippath
6033 6687 m 5897 6893 l 5919 6648 l 5813 6954 l 5927 6993 l cp
clip
n 210 2460 m 3045 1935 l 3975 3855 l 5175 2700 l 4815 4380 l 6690 4605 l
 5880 6945 l gs col0 s gr gr

% arrowhead
n 6033 6687 m 5897 6893 l 5919 6648 l 5976 6667 l 6033 6687 l  cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs
end
%%EndDocument
 @endspecial 216 4861 a(Y)-10 b(our)37 b(task)h(is)f(to)g(write)g(a)f
(program,)42 b(that)37 b(gi)n(v)o(en)h(a)e(scene)i(description)j(and)c
(a)g(ray)g(entering)i(the)e(scene,)75 4974 y(determines)26
b(which)e(spheres)h(are)f(hit)f(by)h(the)g(ray)-6 b(.)75
5275 y Fx(Input)75 5485 y Fr(The)24 b(input)i(consists)g(of)e(a)g
(series)i(of)e(scene)i(descriptions.)35 b(Each)24 b(description)k
(starts)d(with)g(a)e(line)i(containing)j(the)75 5598
y(number)e Fn(n)f Fr(\()p Fn(n)d Fl(\024)e Fr(25\))26
b(of)f(spheres)i(in)e(the)g(scene.)35 b(The)25 b(follo)n(wing)h
Fn(n)f Fr(lines)h(contain)h(three)f(inte)o(gers)h Fn(x)3322
5612 y Fe(i)3345 5598 y Fm(;)10 b Fn(y)3420 5612 y Fe(i)3443
5598 y Fm(;)g Fn(r)3513 5612 y Fe(i)3561 5598 y Fr(each,)75
5710 y(where)21 b Fh(\()p Fn(x)392 5724 y Fe(i)415 5710
y Fm(;)10 b Fn(y)490 5724 y Fe(i)513 5710 y Fh(\))20
b Fr(is)g(the)h(center)l(,)h(and)f Fn(r)1226 5724 y Fe(i)1266
5710 y Fm(>)c Fr(0)j(is)g(the)g(radius)i(of)e(the)h Fn(i)p
Fr(-th)g(sphere.)29 b(F)o(ollo)n(wing)20 b(this)h(is)f(a)g(line)h
(containing)1890 5960 y(7)p eop
%%Page: 8 9
8 8 bop 75 44 a Fr(four)28 b(inte)o(gers)h Fn(x)p Fm(;)10
b Fn(y)-5 b Fm(;)10 b Fn(d)756 58 y Fe(x)792 44 y Fm(;)g
Fn(d)872 58 y Fe(y)906 44 y Fr(,)28 b(which)f(describe)j(the)e(ray)-6
b(.)40 b(The)27 b(ray)h(originates)i(from)e(the)f(point)i
Fh(\()p Fn(x)p Fm(;)10 b Fn(y)p Fh(\))28 b Fr(and)g(initially)75
157 y(points)d(in)e(the)h(direction)i Fh(\()p Fn(d)973
171 y Fe(x)1008 157 y Fm(;)10 b Fn(d)1088 171 y Fe(y)1122
157 y Fh(\))p Fr(.)28 b(At)23 b(least)h(one)g(of)g Fn(d)1809
171 y Fe(x)1866 157 y Fr(and)g Fn(d)2065 171 y Fe(y)2122
157 y Fr(will)f(be)g(non-zero.)216 270 y(The)28 b(spheres)h(will)f(be)f
(disjoint)j(and)e(non-touching.)46 b(The)27 b(ray)h(will)g(not)g(start)
h(within)f(a)f(sphere,)j(and)f(ne)n(v)o(er)75 383 y(touch)c(a)e(sphere)
i(tangentially)-6 b(.)216 496 y(A)23 b(test)g(case)i(starting)g(with)e
Fn(n)e Fh(=)f Fr(0)j(terminates)j(the)d(input.)30 b(This)24
b(case)g(should)h(not)f(be)f(processed.)75 788 y Fx(Output)75
995 y Fr(F)o(or)e(each)h(scene)h(\002rst)e(output)i(the)f(number)h(of)e
(the)h(scene.)29 b(Then)22 b(print)g(the)g(numbers)h(of)f(the)f
(spheres)j(that)e(the)g(ray)75 1108 y(hits)i(in)g(its)f(\002rst)g(ten)h
(de\003ections)i(\(the)e(numbering)i(of)d(spheres)i(is)f(according)i
(to)d(their)i(order)f(in)g(the)g(input\).)216 1221 y(If)e(the)h(ray)f
(hits)h(at)f(most)g(ten)h(spheres)h(\(and)f(then)g(heads)h(to)n(w)o
(ards)f(in\002nity\),)g(print)g Fq(inf)d Fr(after)j(the)g(last)g
(sphere)75 1334 y(it)g(hits.)30 b(If)23 b(the)h(ray)f(hits)i(more)e
(than)h(10)g(spheres,)h(print)g(three)f(points)h(\()p
Fq(...)p Fr(\))i(after)e(the)e(tenth)i(sphere.)216 1447
y(Output)f(a)f(blank)i(line)f(after)h(each)f(test)g(case.)75
1740 y Fx(Sample)31 b(Input)75 1947 y Fq(3)75 2060 y(3)54
b(3)g(2)75 2173 y(7)g(7)g(1)75 2285 y(8)g(1)g(1)75 2398
y(3)g(8)g(1)g(-4)75 2511 y(2)75 2624 y(0)g(0)g(1)75 2737
y(5)g(0)g(2)75 2850 y(2)g(0)g(1)g(0)75 2963 y(0)75 3256
y Fx(Sample)31 b(Output)75 3463 y Fq(Scene)52 b(1)75
3575 y(1)i(2)g(1)g(3)g(inf)75 3801 y(Scene)e(2)75 3914
y(2)i(1)g(2)g(1)g(2)g(1)h(2)f(1)g(2)g(1)g(...)1890 5960
y Fr(8)p eop
%%Page: 9 10
9 9 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 157 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1519 539 y Fy(Pr)m(oblem)45 b(E)844
770 y Fv(Going)34 b(in)i(cir)m(cles)e(on)i(Alpha)e(Centauri)1020
1030 y Ft(Sour)n(ce:)80 b Fs(centauri.\(c|cc|pas|java\))1020
1147 y Ft(Input:)133 b Fs(centauri.in)75 1548 y Fr(In)22
b(the)g(early)h(27th)f(century)-6 b(,)24 b(Alpha)f(Centauri)g(has)f
(become)h(the)f(main)g(shipping)i(hub)f(of)e(this)i(part)f(of)g(the)g
(galaxy)-6 b(.)75 1660 y(At)22 b(a)h(space)i(station)f(near)g(the)g
(fourth)g(planet,)h(goods)g(from)e(almost)h(e)n(v)o(ery)f(space-f)o
(aring)k(ci)n(vilization)f(are)e(traded)75 1773 y(and)g(shipped)i(to)e
(all)g(major)g(star)g(systems.)31 b(The)23 b(space)i(station)h(is)d
(shaped)j(lik)o(e)e(a)g(lar)n(ge)h(circle,)g(and)f(has)g(docking)75
1886 y(ports)h(on)e(its)h(outer)g(rim,)f(labelled)j(clockwise)f(from)e
(1)h(to)f Fn(n)p Fr(:)1280 3192 y @beginspecial 0 @llx
0 @lly 330 @urx 308 @ury 1417 @rhi @setspecial
%%BeginDocument: eps/centauri.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-120.0 466.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Italic /Times-Italic-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 8388 m -1000 -1000 l 8128 -1000 l 8128 8388 l cp clip
 0.06299 0.06299 sc
% Ellipse
n 4590 4904 1800 1800 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Polyline
60.000 slw
n 6750 4950 m 2610 4950 l gs col0 s gr 
% Polyline
n 3285 3375 m 6030 6525 l gs col0 s gr 
% Polyline
n 6120 3465 m 3240 6435 l gs col0 s gr 
% Polyline
n 2835 3960 m 6525 5940 l gs col0 s gr 
% Polyline
n 5400 6885 m 3915 3060 l gs col0 s gr 
% Polyline
n 5535 3060 m 3870 6885 l gs col0 s gr 
% Polyline
n 4680 2880 m 4680 7020 l gs col0 s gr 
% Polyline
n 6615 4185 m 2790 5760 l gs col0 s gr 
30.000 slw
% Ellipse
n 4680 4950 1800 1800 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

0.000 slw
% Ellipse
n 4680 4950 1350 1350 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 4590 4904 1350 1350 0 360 DrawEllipse gs col7 1.00 shd ef gr 
30.000 slw
% Ellipse
n 4680 4950 1350 1350 0 360 DrawEllipse gs col0 s gr

7.500 slw
% Ellipse
n 4860 7335 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4680 7335 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4500 7335 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3915 7155 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3735 7155 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3555 7155 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Arc
15.000 slw
gs  clippath
3338 5908 m 3267 5671 l 3442 5847 l 3276 5569 l 3173 5630 l cp
clip
n 4657.5 4959.0 1566.2 25.2 154.8 arc
gs col0 s gr
 gr

% arrowhead
n 3338 5908 m 3267 5671 l 3442 5847 l 3390 5878 l 3338 5908 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
5977 3992 m 6047 4228 l 5873 4053 l 6039 4331 l 6142 4270 l cp
clip
n 4657.5 4941.0 1566.2 -154.8 -25.2 arc
gs col0 s gr
 gr

% arrowhead
n 5977 3992 m 6047 4228 l 5873 4053 l 5925 4022 l 5977 3992 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 300.00 scf sf
2985 6735 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
2430 5955 m
gs 1 -1 sc (4) col0 sh gr
/Times-Italic-iso ff 300.00 scf sf
2040 5940 m
gs 1 -1 sc (n-) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
2295 5070 m
gs 1 -1 sc (3) col0 sh gr
/Times-Italic-iso ff 300.00 scf sf
1920 5070 m
gs 1 -1 sc (n-) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
2520 3975 m
gs 1 -1 sc (2) col0 sh gr
/Times-Italic-iso ff 300.00 scf sf
2160 3975 m
gs 1 -1 sc (n-) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
3135 3255 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic-iso ff 300.00 scf sf
2775 3255 m
gs 1 -1 sc (n-) col0 sh gr
/Times-Italic-iso ff 300.00 scf sf
3705 2835 m
gs 1 -1 sc (n) col0 sh gr
/Times-Italic-iso ff 300.00 scf sf
2595 6705 m
gs 1 -1 sc (n-) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
4590 2715 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5565 2910 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
6255 3345 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
6840 4140 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
6990 5040 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
6750 6150 m
gs 1 -1 sc (6) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
6270 6810 m
gs 1 -1 sc (7) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5475 7305 m
gs 1 -1 sc (8) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 216 3402 a(When)e(a)e(trading)j(spaceship)h(docks)e(to)f
(a)g(port,)h(it)f(usually)i(mak)o(es)e(a)g(request)i(to)e(transfer)i
(its)e(car)n(go)h(to)f(another)75 3515 y(ship)f(dock)o(ed)h(to)f(some)f
(other)i(port.)27 b(This)19 b(task)g(is)f(tak)o(en)i(care)f(of)f(by)h
(transportation)j(robots)e(\(transrobs\))i(operating)75
3628 y(within)28 b(the)g(ring)h(of)f(the)g(space)g(station.)44
b(The)27 b(transrobs)j(can)e(tra)n(v)o(el)h(clockwise)h(around)f(the)f
(station,)i(and)e(load)75 3741 y(and)c(unload)h(car)n(go)g(at)f(the)f
(ports.)216 3854 y(Ev)o(ery)i(ships)i(car)n(go)f(\002ts)f(into)h(one)g
(transport)h(container)l(,)h(and)e(all)f(transrobs)j(can)e(carry)g
(only)g(one)g(container)75 3966 y(at)d(a)g(time.)29 b(The)23
b(transrobs)j(only)e(dif)n(fer)h(in)e(maximal)h(weight)g(the)o(y)g(can)
g(carry)-6 b(.)216 4079 y(The)37 b(consortium)i(operating)g(the)f
(space)g(station)g(has)f(recently)i(decided)g(to)e(upgrade)i(its)e
(transportation)75 4192 y(system.)j(But)26 b(before)i(doing)h(so,)e
(the)o(y)g(w)o(ant)g(to)g(gather)h(some)f(statistics)i(on)e(the)g
(performance)j(of)d(their)h(current)75 4305 y(system.)h(More)24
b(speci\002cally)-6 b(,)26 b(the)o(y)e(are)f(interested)k(in)211
4490 y Fl(\017)46 b Fr(the)28 b(a)n(v)o(erage)g(time)f(it)g(tak)o(es)h
(for)f(a)g(request)i(to)e(be)g(ful\002lled,)h(i.e.)39
b(the)27 b(time)g(between)h(a)f(ship)h(requesting)i(a)302
4603 y(car)n(go)25 b(to)f(be)f(tak)o(en)i(to)e(another)j(port,)e(and)g
(the)g(car)n(go)h(actually)g(being)g(deli)n(v)o(ered)g(to)f(its)f
(destination,)k(and)211 4790 y Fl(\017)46 b Fr(the)25
b(utilization)j(of)c(the)h(transrobs,)i(i.e.)32 b(the)25
b(a)n(v)o(erage)h(percentage)i(of)c(transrobs)j(serving)g(requests)g
(during)302 4903 y(some)d(interv)n(al)h(of)f(time)75
5088 y(F)o(or)g(this,)h(the)o(y)g(need)g(a)g(simulation)h(program,)g
(which)f(you)g(ha)n(v)o(e)h(to)e(write.)32 b(T)-7 b(o)24
b(f)o(acilitate)j(this)e(task,)g(the)g(consor)n(-)75
5201 y(tium)e(has)h(released)i(the)e(follo)n(wing)h(details)g(on)e
(their)i(transrob)g(control)h(program.)211 5411 y Fl(\017)46
b Fr(The)23 b(transrobs)j(are)e(numbered)h(1)f(to)f Fn(m)p
Fr(.)211 5598 y Fl(\017)46 b Fr(It)25 b(tak)o(es)h(a)e(transrob)j(1)e
(minute)g(to)g(get)g(from)g(a)f(port)i(to)f(the)g(ne)o(xt)g(one,)h(and)
f(it)f(tak)o(es)i(5)f(minutes)h(to)f(load)g(or)302 5710
y(unload)g(a)f(container)i(at)d(a)g(port.)1890 5960 y(9)p
eop
%%Page: 10 11
10 10 bop 211 44 a Fl(\017)46 b Fr(T)m(ransrobs)32 b(mo)o(v)o(e)e(on)h
(dif)n(ferent)i(tracks,)g(and)e(therefore)i(do)d(not)h(hinder)h(each)g
(other)f(when)g(performing)302 157 y(their)25 b(duties.)211
347 y Fl(\017)46 b Fr(T)m(ransrobs)32 b(are)f(either)g
Fn(idle)p Fr(,)h(or)f(the)o(y)f(are)h Fn(servicing)i(a)d(r)m(equest)p
Fr(,)j(which)e(means)f(that)h(the)o(y)g(mo)o(v)o(e)f(to)g(the)302
460 y(origin)i(of)e(that)g(request,)j(load)e(the)f(car)n(go,)j(mo)o(v)o
(e)c(to)h(the)h(destination,)j(unload)e(the)e(car)n(go,)j(and)d(become)
302 573 y(idle)24 b(again.)211 763 y Fl(\017)46 b Fr(All)23
b(incoming)i(requests)g(are)e(put)h(in)f(the)g Fn(r)m(equest)i(list)p
Fr(.)k(A)22 b(request)j(from)e(that)h(list)f(is)g Fn(possible)j
Fr(to)d(satisfy)h(if)302 876 y(there)h(is)e(an)h(idle)g(transrob)h(for)
f(which)g(the)g(car)n(go)h(is)e(not)h(too)g(hea)n(vy)-6
b(.)211 1066 y Fl(\017)46 b Fr(As)24 b(long)g(as)h(\(or)f(as)g(soon)h
(as\))f(there)h(are)f(possible)j(requests)f(on)e(the)h(list,)f(the)o(y)
g(are)h(assigned)h(to)e(transrobs,)302 1179 y(gi)n(ving)j(precedence)h
(for)d(older)h(requests)h(o)o(v)o(er)e(ne)n(wer)g(requests.)35
b(Each)25 b(request)i(is)e(assigned)i(to)e(the)g(tran-)302
1292 y(srob)e(which)f(is)f(closest)j(\(in)e(anti-clockwise)j
(direction\))f(to)e(the)g(origin)h(of)e(the)h(request,)i(and)e(for)g
(which)g(the)302 1405 y(car)n(go)29 b(is)f(not)g(too)g(hea)n(vy)-6
b(.)42 b(If)27 b(there)i(are)f(tw)o(o)f(transrobs)j(at)d(the)h(same)g
(distance,)i(the)e(one)g(with)f(the)h(lo)n(wer)302 1518
y(number)d(gets)f(assigned)i(the)e(request.)30 b(Assigned)25
b(requests)h(are)d(deleted)j(from)d(the)h(request)h(list.)211
1708 y Fl(\017)46 b Fr(The)30 b(assignment)i(procedure)h(is)c
(instantenous,)35 b(i.e.)48 b(a)29 b(robot)i(starts)g(mo)o(ving)g(in)f
(the)g(instant)i(it)d(gets)i(as-)302 1821 y(signed)c(a)d(request,)j
(and)e(a)f(robot)i(becomes)g(idle)g(\(and)f(can)h(get)f(a)f(ne)n(w)g
(request\))j(in)e(the)g(instant)i(it)d(\002nishes)302
1934 y(unloading.)75 2231 y Fx(Input)75 2439 y Fr(The)31
b(input)h(consists)h(of)e(the)g(description)j(of)d(se)n(v)o(eral)h
(simulations)h(you)f(ha)n(v)o(e)f(to)g(perform.)52 b(Each)31
b(description)75 2552 y(starts)g(with)e(a)g(line)h(containing)j(tw)o(o)
c(inte)o(gers,)k Fn(n)c Fr(and)h Fn(m)p Fr(,)g(the)g(number)g(of)g
(ports)g(and)g(transrobs,)k(respecti)n(v)o(ely)-6 b(,)75
2665 y(satisfying)23 b(2)17 b Fl(\024)f Fn(n)h Fl(\024)g
Fr(100)j(and)h(1)c Fl(\024)f Fn(m)h Fl(\024)f Fr(20.)28
b(The)19 b(ne)o(xt)h Fn(m)f Fr(lines)i(contain)g(a)f(single)h(inte)o
(ger)g Fn(l)3000 2679 y Fe(i)3042 2665 y Fr(each,)g(the)f(maximum)75
2778 y(load)k(that)g(transrob)i Fn(i)d Fr(can)h(carry)-6
b(,)24 b(measured)h(in)f(galactic)h(tons.)216 2891 y(This)34
b(is)g(follo)n(wed)h(by)f(one)h(or)f(more)g(shipments)i(to)e(perform.)
62 b(Each)34 b(shipment)h(is)f(described)j(by)d(a)g(line)75
3004 y(containing)f(four)e(inte)o(gers,)g Fn(t)6 b Fr(,)32
b Fn(o)p Fr(,)f Fn(d)5 b Fr(,)31 b Fn(w)p Fr(:)41 b(the)31
b(time)d Fn(t)36 b Fr(the)30 b(request)i(w)o(as)e(made)g(at)h
(\(measured)h(in)e(minutes)h(since)75 3117 y(the)24 b(be)o(ginning)i
(of)d(the)h(simulation\),)i(the)e(port)g(number)g Fn(o)f
Fr(where)h(the)g(shipment)h(comes)f(from)g(\(origin\),)h(the)f(port)75
3230 y(number)d Fn(d)k Fr(of)20 b(the)g(shipment')-5
b(s)23 b(destination,)g(and)e(the)g(weight)f Fn(w)f Fr(of)h(the)h
(container)i(in)d(galactic)h(tons.)29 b(The)19 b(request)75
3343 y(times)k(are)g(in)f(strictly)j(increasing)g(order)f(in)e(the)h
(input)h(\002le.)k(The)22 b(v)n(alues)i(satisfy)g(1)c
Fl(\024)d Fn(t)6 b Fr(,)22 b(1)d Fl(\024)g Fn(o)p Fm(;)10
b Fn(d)26 b Fl(\024)19 b Fn(n)p Fr(,)j Fn(o)e Fl(6)p
Fh(=)f Fn(d)27 b Fr(and)75 3456 y(1)21 b Fl(\024)e Fn(w)h
Fl(\024)g Fr(max)q Fl(f)j Fn(l)653 3470 y Fe(i)699 3456
y Fl(j)f Fr(1)f Fl(\024)f Fn(i)g Fl(\024)g Fn(m)j Fl(g)p
Fr(.)216 3569 y(The)g(description)k(of)c(shipments)j(is)d(terminated)j
(by)d(the)h(line)g(\223)p Fq(-1)54 b(-1)g(-1)g(-1)p Fr(\224.)216
3683 y(The)36 b(input)g(is)g(terminated)i(by)e(a)f(test)i(case)f
(starting)i(with)d Fn(n)28 b Fh(=)f Fn(m)f Fh(=)h Fr(0.)65
b(This)36 b(test)g(case)h(should)g(not)f(be)75 3796 y(processed.)75
4092 y Fx(Output)75 4301 y Fr(F)o(or)20 b(each)i(simulation)h
(description)h(in)d(the)g(input,)h(\002rst)f(output)h(the)g(number)g
(of)e(the)i(description.)31 b(Then,)21 b(simulate)75
4413 y(the)34 b(operation)i(of)e(the)g(transrobs)j(on)c(the)i(shipment)
g(requests)h(and)e(output)h(the)g(a)n(v)o(erage)g(w)o(ait)f(time,)i
(and)e(the)75 4526 y(utilization)26 b(percentage.)31
b(The)22 b(utilization)k(percentage)f(is)e(computed)h(for)f(the)g
(interv)n(al)h(of)f(the)g(time)f(between)i(the)75 4639
y(\002rst)f(request)i(w)o(as)f(made)f(until)i(the)f(moment)f(all)h
(requests)i(were)d(satis\002ed.)216 4753 y(At)g(the)h(be)o(ginning)i
(of)d(the)h(simulation)h(\(time)f(0\),)f(all)h(transrobs)i(are)e(idle,)
f(and)h(located)i(at)d(port)h(number)h(1.)216 4866 y(All)e(v)n(alues)i
(must)e(be)h(e)o(xact)g(to)f(three)i(digits)g(to)e(the)h(right)g(of)g
(the)g(decimal)g(point.)216 4980 y(Output)g(a)f(blank)i(line)f(after)h
(each)f(test)g(case.)75 5276 y Fx(Input)31 b(Sample)75
5485 y Fq(10)54 b(3)75 5598 y(5)75 5710 y(10)1867 5960
y Fr(10)p eop
%%Page: 11 12
11 11 bop 75 44 a Fq(20)75 157 y(1)54 b(2)g(9)g(8)75
270 y(2)g(7)g(8)g(5)75 383 y(5)g(3)g(2)g(17)75 496 y(20)g(1)g(2)g(4)75
609 y(-1)g(-1)f(-1)h(-1)75 722 y(0)g(0)75 1014 y Fx(Output)31
b(Sample)75 1221 y Fq(Simulation)50 b(1)75 1334 y(Average)h(wait)i
(time)162 b(=)54 b(17.250)e(minutes)75 1447 y(Average)f(utilization)f
(=)k(71.875)e(\045)1867 5960 y Fr(11)p eop
%%Page: 12 13
12 12 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 168 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1524 561 y Fy(Pr)m(oblem)44 b(F)1473
804 y Fv(Blo)o(wing)33 b(Fuses)1020 1134 y Ft(Sour)n(ce:)80
b Fs(fuses.\(c|cc|pas|java\))1020 1250 y Ft(Input:)133
b Fs(fuses.in)75 1757 y Fr(Maybe)27 b(you)f(are)g(f)o(amiliar)h(with)f
(the)g(follo)n(wing)h(situation.)38 b(Y)-10 b(ou)26 b(ha)n(v)o(e)h
(plugged)h(in)d(a)h(lot)g(of)g(electrical)i(de)n(vices,)75
1870 y(such)g(as)f(toasters,)j(refrigerators,)h(micro)n(w)o(a)n(v)o(e)d
(o)o(v)o(ens,)g(computers,)i(stereos,)f(etc,)f(and)f(ha)n(v)o(e)h(them)
f(all)g(running.)75 1983 y(But)33 b(at)h(the)g(moment)g(when)f(you)i
(turn)f(on)g(the)g(TV)-12 b(,)32 b(the)i(fuse)g(blo)n(ws,)i(since)f
(the)f(po)n(wer)g(dra)o(wn)f(from)h(all)g(the)75 2096
y(machines)24 b(is)e(greater)i(than)g(the)e(capacity)j(of)d(the)h
(fuse.)29 b(Of)22 b(course)i(this)f(is)f(a)g(great)i(safety)f(feature,)
h(a)n(v)n(oiding)i(that)75 2209 y(houses)g(b)n(urn)g(do)n(wn)f(too)g
(often)h(due)f(to)g(\002res)f(ignited)j(by)d(o)o(v)o(erheating)k
(wires.)k(But)25 b(it)f(is)h(also)g(anno)o(ying)j(to)c(w)o(alk)75
2322 y(do)n(wn)f(to)h(the)g(basement)h(\(or)f(some)f(other)i(incon)l(v)
o(enient)i(place\))e(to)e(replace)j(to)d(fuse)h(or)g(switch)g(it)f
(back)h(on.)216 2446 y(What)37 b(one)g(w)o(ould)h(lik)o(e)f(to)g(ha)n
(v)o(e)g(is)g(a)f(program)i(that)f(checks)i Fn(befor)m(e)f
Fr(turning)g(on)f(an)g(electrical)i(de)n(vice)75 2559
y(whether)26 b(the)f(combined)h(po)n(wer)f(dra)o(wn)g(by)g(all)g
(running)i(de)n(vices)f(e)o(xceeds)g(the)f(fuses)h(capacity)h(\(and)f
(it)e(blo)n(ws\),)75 2672 y(or)f(whether)i(it)e(is)h(safe)g(to)f(turn)h
(it)g(on.)75 3031 y Fx(Input)75 3260 y Fr(The)f(input)h(consists)h(of)e
(se)n(v)o(eral)h(test)f(cases.)30 b(Each)23 b(test)g(case)h(describes)h
(a)e(set)g(of)g(electrical)i(de)n(vices)g(and)e(gi)n(v)o(es)h(a)75
3373 y(sequence)i(of)d(turn)i(on/of)n(f)f(operations)j(for)c(these)i
(de)n(vices.)216 3497 y(The)d(\002rst)g(line)g(of)g(each)h(test)g(case)
g(contains)h(three)f(inte)o(gers)h Fn(n)p Fr(,)e Fn(m)f
Fr(and)h Fn(c)p Fr(,)g(where)g Fn(n)g Fr(is)g(the)h(number)g(of)f(de)n
(vices)75 3610 y(\()p Fn(n)f Fl(\024)g Fr(20\),)j Fn(m)f
Fr(the)i(number)g(of)f(operations)j(performed)f(on)f(these)g(de)n
(vices)h(and)f Fn(c)e Fr(is)h(the)h(capacity)h(of)f(the)f(fuse)h(\(in)
75 3723 y(Amperes\).)36 b(The)25 b(follo)n(wing)i Fn(n)e
Fr(lines)i(contain)g(one)f(positi)n(v)o(e)h(inte)o(ger)g
Fn(c)2373 3737 y Fe(i)2421 3723 y Fr(each,)f(the)g(consumption)j(\(in)d
(Amperes\))75 3836 y(of)d(the)h Fn(i)p Fr(-th)g(de)n(vice.)216
3960 y(This)31 b(is)f(follo)n(wed)i(by)f Fn(m)f Fr(lines)i(also)f
(containing)j(one)e(inte)o(ger)g(each,)h(between)f(1)e(and)i
Fn(n)e Fr(inclusi)n(v)o(e.)53 b(The)o(y)75 4073 y(describe)30
b(a)e(sequence)j(of)d(turn)g(on/turn)i(of)n(f)f(operations)i(performed)
f(on)e(the)g(de)n(vices.)45 b(F)o(or)27 b(e)n(v)o(ery)i(number)l(,)h
(the)75 4186 y(state)i(of)g(that)g(particular)i(de)n(vices)f(is)e
(toggled,)36 b(i.e.)52 b(if)31 b(it)g(is)h(currently)i(running,)h(it)c
(is)h(turned)h(of)n(f,)g(and)f(if)f(it)g(is)75 4298 y(currently)26
b(turned)f(of)n(f,)e(it)g(will)h(by)f(switched)i(on.)k(At)23
b(the)g(be)o(ginning)j(all)e(de)n(vices)h(are)f(turned)h(of)n(f.)216
4423 y(The)f(input)h(will)f(be)h(terminated)h(by)e(a)g(test)h(case)g
(starting)h(with)e Fn(n)d Fh(=)g Fn(m)f Fh(=)g Fn(c)h
Fh(=)f Fr(0.)31 b(This)24 b(test)h(case)g(should)h(not)75
4535 y(be)e(processed.)75 4894 y Fx(Output)75 5124 y
Fr(F)o(or)i(each)i(test)f(case,)h(\002rst)f(output)h(the)f(number)h(of)
f(the)g(test)h(case.)39 b(Then)27 b(output)i(whether)f(the)f(fuse)g(w)o
(as)g(blo)n(wn)75 5236 y(during)k(the)f(operation)i(sequence.)50
b(The)29 b(fuse)h(will)g(be)f(blo)n(wn)h(if)g(the)g(sum)f(of)h(the)g
(po)n(wer)f(consumptions)k Fn(c)3622 5250 y Fe(i)3674
5236 y Fr(of)75 5349 y(turned)25 b(on)f(de)n(vices)h(at)e(some)h(point)
g(e)o(xceeds)h(the)f(capacity)i(of)d(the)h(fuse)g Fn(c)p
Fr(.)216 5473 y(If)19 b(the)g(fuse)h(is)e(not)i(blo)n(wn,)g(output)g
(the)f(maximal)h(po)n(wer)f(consumption)i(by)f(turned)g(on)f(de)n
(vices)i(that)e(occurred)75 5586 y(during)25 b(the)f(sequence.)216
5710 y(Output)g(a)f(blank)i(line)f(after)h(each)f(test)g(case.)1867
5960 y(12)p eop
%%Page: 13 14
13 13 bop 75 44 a Fx(Sample)31 b(Input)75 251 y Fq(2)54
b(2)g(10)75 364 y(5)75 477 y(7)75 590 y(1)75 703 y(2)75
816 y(3)g(6)g(10)75 929 y(2)75 1042 y(5)75 1154 y(7)75
1267 y(2)75 1380 y(1)75 1493 y(2)75 1606 y(3)75 1719
y(1)75 1832 y(3)75 1945 y(0)g(0)g(0)75 2237 y Fx(Sample)31
b(Output)75 2444 y Fq(Sequence)51 b(1)75 2557 y(Fuse)i(was)g(blown.)75
2783 y(Sequence)e(2)75 2896 y(Fuse)i(was)g(not)g(blown.)75
3009 y(Maximal)e(power)i(consumption)c(was)k(9)h(amperes.)1867
5960 y Fr(13)p eop
%%Page: 14 15
14 14 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 166 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1510 559 y Fy(Pr)m(oblem)44 b(G)1611
798 y Fv(F)l(ast)35 b(F)l(ood)1020 1113 y Ft(Sour)n(ce:)80
b Fs(fastfood.\(c|cc|pas|java\))1020 1229 y Ft(Input:)133
b Fs(fastfood.in)75 1712 y Fr(The)24 b(f)o(astfood)i(chain)g(McBur)n
(ger)f(o)n(wns)f(se)n(v)o(eral)i(restaurants)h(along)f(a)d(highw)o(ay)
-6 b(.)33 b(Recently)-6 b(,)26 b(the)o(y)e(ha)n(v)o(e)h(decided)75
1825 y(to)20 b(b)n(uild)i(se)n(v)o(eral)f(depots)h(along)f(the)g(highw)
o(ay)-6 b(,)22 b(each)f(one)f(located)i(at)e(a)g(restaurent)j(and)e
(supplying)i(se)n(v)o(eral)e(of)f(the)75 1938 y(restaurants)29
b(with)d(the)h(needed)g(ingredients.)40 b(Naturally)-6
b(,)29 b(these)e(depots)g(should)h(be)f(placed)g(so)f(that)h(the)g(a)n
(v)o(erage)75 2051 y(distance)k(between)g(a)d(restaurant)k(and)e(its)f
(assigned)j(depot)e(is)f(minimized.)47 b(Y)-10 b(ou)29
b(are)g(to)g(write)g(a)g(program)i(that)75 2164 y(computes)25
b(the)f(optimal)h(positions)h(and)e(assignments)i(of)d(the)h(depots.)
216 2285 y(T)-7 b(o)25 b(mak)o(e)h(this)h(more)e(precise,)j(the)e
(management)i(of)e(McBur)n(ger)h(has)f(issued)i(the)e(follo)n(wing)h
(speci\002cation:)75 2398 y(Y)-10 b(ou)30 b(will)f(be)h(gi)n(v)o(en)h
(the)f(positions)i(of)e Fn(n)g Fr(restaurants)j(along)e(the)f(highw)o
(ay)i(as)d Fn(n)h Fr(inte)o(gers)i Fn(d)3117 2412 y Fp(1)3178
2398 y Fm(<)24 b Fn(d)3318 2412 y Fp(2)3379 2398 y Fm(<)f(:::)i(<)e
Fn(d)3712 2412 y Fe(n)75 2511 y Fr(\(these)28 b(are)e(the)h(distances)i
(measured)f(from)e(the)h(compan)o(y')-5 b(s)28 b(headquarter)l(,)j
(which)c(happens)h(to)f(be)f(at)g(the)h(same)75 2624
y(highw)o(ay\).)j(Furthermore,)25 b(a)e(number)i Fn(k)f
Fr(\()p Fn(k)f Fl(\024)d Fn(n)p Fr(\))j(will)g(be)h(gi)n(v)o(en,)g(the)
f(number)i(of)e(depots)i(to)f(be)f(b)n(uilt.)216 2745
y(The)36 b Fn(k)i Fr(depots)g(will)e(be)h(b)n(uilt)h(at)e(the)h
(locations)i(of)d Fn(k)i Fr(dif)n(ferent)g(restaurants.)71
b(Each)37 b(restaurant)i(will)d(be)75 2858 y(assigned)24
b(to)d(the)h(closest)i(depot,)f(from)e(which)h(it)f(will)h(then)g
(recei)n(v)o(e)h(its)e(supplies.)31 b(T)-7 b(o)20 b(minimize)i
(shipping)i(costs,)75 2971 y(the)g Fn(total)g(distance)i(sum)p
Fr(,)d(de\002ned)h(as)1046 3147 y Fe(n)1016 3264 y Fb(\345)1011
3338 y Fe(i)p Ff(=)p Fp(1)1148 3244 y Fl(j)e Fn(d)1240
3258 y Fe(i)1276 3244 y Fl(\000)13 b Fh(\()p Fr(position)25
b(of)f(depot)h(serving)g(restaurant)h Fn(i)p Fh(\))d
Fl(j)75 3535 y Fr(must)h(be)f(as)h(small)f(as)h(possible.)216
3656 y(Write)29 b(a)g(program)h(that)f(computes)i(the)e(positions)j(of)
d(the)g Fn(k)h Fr(depots,)h(such)f(that)g(the)f(total)h(distance)h(sum)
d(is)75 3769 y(minimized.)75 4112 y Fx(Input)75 4336
y Fr(The)34 b(input)h(\002le)e(contains)j(se)n(v)o(eral)f(descriptions)
j(of)c(f)o(astfood)i(chains.)61 b(Each)34 b(description)j(starts)e
(with)f(a)g(line)75 4449 y(containing)24 b(the)e(tw)o(o)e(inte)o(gers)j
Fn(n)e Fr(and)g Fn(k)r Fr(.)28 b Fn(n)20 b Fr(and)i Fn(k)g
Fr(will)f(satisfy)i(1)18 b Fl(\024)g Fn(n)g Fl(\024)g
Fr(200)p Fm(;)10 b Fr(1)20 b Fl(\024)d Fn(k)j Fl(\024)e
Fr(30)p Fm(;)10 b Fn(k)21 b Fl(\024)d Fn(n)p Fr(.)27
b(F)o(ollo)n(wing)22 b(this)75 4562 y(will)d Fn(n)g Fr(lines)i
(containing)h(one)e(inte)o(ger)h(each,)f(gi)n(ving)h(the)f(positions)i
Fn(d)2291 4576 y Fe(i)2332 4562 y Fr(of)e(the)g(restaurants,)j(ordered)
e(increasingly)-6 b(.)216 4683 y(The)23 b(input)i(\002le)e(will)g(end)h
(with)f(a)g(case)i(starting)g(with)e Fn(n)e Fh(=)f Fn(k)i
Fh(=)e Fr(0.)28 b(This)c(case)g(should)h(not)f(be)f(processed.)75
5026 y Fx(Output)75 5250 y Fr(F)o(or)h(each)h(chain,)h(\002rst)e
(output)j(the)e(number)g(of)g(the)g(chain.)33 b(Then)25
b(output)h(an)f(optimal)h(placement)g(of)f(the)g(depots)75
5363 y(as)h(follo)n(ws:)36 b(for)27 b(each)g(depot)h(output)g(a)e(line)
h(containing)i(its)e(position)h(and)f(the)g(range)g(of)g(restaurants)i
(it)d(serv)o(es.)75 5476 y(If)g(there)h(is)f(more)h(than)g(one)f
(optimal)i(solution,)g(output)g(an)o(y)f(of)f(them.)37
b(After)26 b(the)h(depot)g(descriptions)j(output)e(a)75
5589 y(line)c(containing)j(the)c(total)i(distance)g(sum,)e(as)h
(de\002ned)g(in)g(the)g(problem)g(te)o(xt.)216 5710 y(Output)g(a)f
(blank)i(line)f(after)h(each)f(test)g(case.)1867 5960
y(14)p eop
%%Page: 15 16
15 15 bop 75 44 a Fx(Sample)31 b(Input)75 251 y Fq(6)54
b(3)75 364 y(5)75 477 y(6)75 590 y(12)75 703 y(19)75
816 y(20)75 929 y(27)75 1042 y(0)g(0)75 1334 y Fx(Sample)31
b(Output)75 1541 y Fq(Chain)52 b(1)75 1654 y(Depot)g(1)i(at)g
(restaurant)c(2)k(serves)e(restaurants)d(1)55 b(to)e(3)75
1767 y(Depot)f(2)i(at)g(restaurant)c(4)k(serves)e(restaurants)d(4)55
b(to)e(5)75 1880 y(Depot)f(3)i(at)g(restaurant)c(6)k(serves)e
(restaurant)e(6)75 1993 y(Total)i(distance)f(sum)i(=)h(8)1867
5960 y Fr(15)p eop
%%Page: 16 17
16 16 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 157 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1510 539 y Fy(Pr)m(oblem)44 b(H)1488
770 y Fv(Sorting)34 b(Slides)1020 1006 y Ft(Sour)n(ce:)80
b Fs(slides.\(c|cc|pas|java\))1020 1122 y Ft(Input:)133
b Fs(slides.in)75 1475 y Fr(Professor)30 b(Clumse)o(y)e(is)f(going)j
(to)e(gi)n(v)o(e)g(an)g(important)h(talk)g(this)f(afternoon.)45
b(Unfortunately)-6 b(,)32 b(he)c(is)g(not)g(a)g(v)o(ery)75
1588 y(tidy)21 b(person)h(and)f(has)g(put)f(all)h(his)g(transparencies)
j(on)d(one)g(big)f(heap.)29 b(Before)21 b(gi)n(ving)g(the)g(talk,)g(he)
g(has)g(to)f(sort)h(the)75 1701 y(slides.)30 b(Being)24
b(a)f(kind)h(of)g(minimalist,)g(he)g(w)o(ants)g(to)f(do)h(this)g(with)f
(the)h(minimum)f(amount)i(of)e(w)o(ork)h(possible.)216
1814 y(The)h(situation)i(is)e(lik)o(e)h(this.)33 b(The)25
b(slides)h(all)f(ha)n(v)o(e)h(numbers)g(written)g(on)f(them)g
(according)j(to)c(their)i(order)g(in)75 1927 y(the)k(talk.)48
b(Since)30 b(the)g(slides)h(lie)e(on)h(each)h(other)f(and)h(are)e
(transparent,)35 b(one)30 b(cannot)h(see)f(on)g(which)g(slide)g(each)75
2040 y(number)24 b(is)g(written.)1325 3067 y @beginspecial
0 @llx 0 @lly 204 @urx 164 @ury 1133 @rhi @setspecial
%%BeginDocument: eps/slides.eps
%Magnification: 0.50
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-25.0 199.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.03000 0.03000 sc
7.500 slw
% Polyline
n 1200 2400 m 5400 2400 l 5400 5400 l 1200 5400 l cp gs col-1 s gr 
% Polyline
n 1800 4200 m 6600 4200 l 6600 1200 l 1800 1200 l cp gs col-1 s gr 
% Polyline
n 2400 1800 m 6000 1800 l 6000 6600 l 2400 6600 l cp gs col-1 s gr 
% Polyline
n 3000 4800 m 7200 4800 l 7200 6000 l 3000 6000 l cp gs col-1 s gr 
/Times-Roman ff 375.00 scf sf
1485 1515 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Roman ff 375.00 scf sf
840 2715 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Roman ff 375.00 scf sf
2055 6525 m
gs 1 -1 sc (C) col-1 sh gr
/Times-Roman ff 375.00 scf sf
7350 5895 m
gs 1 -1 sc (D) col-1 sh gr
/Times-Roman ff 375.00 scf sf
2655 2805 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 375.00 scf sf
3210 5205 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 375.00 scf sf
5610 2205 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 375.00 scf sf
6225 4005 m
gs 1 -1 sc (4) col-1 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 216 3252 a(W)-7 b(ell,)24 b(one)h(cannot)h
Fn(see)f Fr(on)f(which)h(slide)h(a)e(number)h(is)f(written,)h(b)n(ut)g
(one)g(may)f Fn(deduce)i Fr(which)f(numbers)h(are)75
3365 y(written)e(on)f(which)h(slides.)30 b(If)23 b(we)f(label)i(the)f
(slides)i(which)f(characters)h(A,)d(B,)g(C,)g(...)27
b(as)c(in)g(the)g(\002gure)h(abo)o(v)o(e,)f(it)g(is)75
3478 y(ob)o(vious)i(that)f(D)f(has)h(number)g(3,)f(B)f(has)i(number)h
(1,)e(C)f(number)i(2)g(and)g(A)e(number)i(4.)216 3591
y(Y)-10 b(our)24 b(task,)g(should)h(you)f(choose)h(to)e(accept)i(it,)e
(is)h(to)f(write)h(a)f(program)i(that)f(automates)h(this)f(process.)75
3879 y Fx(Input)75 4086 y Fr(The)j(input)i(consists)h(of)d(se)n(v)o
(eral)i(heap)f(descriptions.)45 b(Each)27 b(heap)i(descriptions)i
(starts)d(with)g(a)f(line)h(containing)75 4199 y(a)e(single)h(inte)o
(ger)h Fn(n)p Fr(,)e(the)g(number)i(of)e(slides)h(in)f(the)h(heap.)37
b(The)26 b(follo)n(wing)i Fn(n)d Fr(lines)i(contain)h(four)f(inte)o
(gers)h Fn(x)3623 4213 y Fe(min)3727 4199 y Fr(,)75 4312
y Fn(x)115 4326 y Fe(max)230 4312 y Fr(,)20 b Fn(y)313
4326 y Fe(min)435 4312 y Fr(and)g Fn(y)625 4326 y Fe(max)740
4312 y Fr(,)g(each,)g(the)g(bounding)i(coordinates)h(of)c(the)h
(slides.)28 b(The)19 b(slides)i(will)e(be)g(labeled)i(as)f(A,B,C,...)75
4425 y(in)j(the)h(order)h(of)e(the)h(input.)216 4538
y(This)d(is)f(follo)n(wed)i(by)f Fn(n)f Fr(lines)i(containing)i(tw)o(o)
c(inte)o(gers)i(each,)g(the)f Fn(x)p Fr(-)g(and)g Fn(y)p
Fr(-coordinates)k(of)c(the)g Fn(n)f Fr(numbers)75 4651
y(printed)i(on)e(the)g(slides.)29 b(The)19 b(\002rst)h(coordinate)i
(pair)f(will)e(be)h(for)h(number)f(1,)g(the)h(ne)o(xt)f(pair)g(for)g
(2,)g(etc.)28 b(No)19 b(number)75 4764 y(will)k(lie)h(on)f(a)h(slide)g
(boundary)-6 b(.)216 4877 y(The)23 b(input)i(is)e(terminated)j(by)d(a)g
(heap)i(description)i(starting)e(with)e Fn(n)e Fh(=)f
Fr(0,)j(which)h(should)h(not)f(be)f(processed.)75 5165
y Fx(Output)75 5372 y Fr(F)o(or)32 b(each)h(heap)g(description)j(in)c
(the)h(input)g(\002rst)g(output)h(its)e(number)-5 b(.)57
b(Then)32 b(print)i(a)e(series)h(of)g(all)f(the)h(slides)75
5485 y(whose)24 b(numbers)h(can)f(be)f(uniquely)j(determined)g(from)d
(the)h(input.)30 b(Order)24 b(the)g(pairs)g(by)g(their)g(letter)h
(identi\002er)-5 b(.)216 5598 y(If)23 b(no)h(matchings)h(can)f(be)g
(determined)i(from)d(the)h(input,)g(just)g(print)h(the)f(w)o(ord)f
Fq(none)e Fr(on)j(a)f(line)h(by)g(itself.)216 5710 y(Output)g(a)f
(blank)i(line)f(after)h(each)f(test)g(case.)1867 5960
y(16)p eop
%%Page: 17 18
17 17 bop 75 44 a Fx(Sample)31 b(Input)75 251 y Fq(4)75
364 y(6)54 b(22)g(10)f(20)75 477 y(4)h(18)g(6)g(16)75
590 y(8)g(20)g(2)g(18)75 703 y(10)g(24)f(4)h(8)75 816
y(9)g(15)75 929 y(19)g(17)75 1042 y(11)g(7)75 1154 y(21)g(11)75
1267 y(2)75 1380 y(0)g(2)g(0)g(2)75 1493 y(0)g(2)g(0)g(2)75
1606 y(1)g(1)75 1719 y(1)g(1)75 1832 y(0)75 2125 y Fx(Sample)31
b(Output)75 2332 y Fq(Heap)53 b(1)75 2444 y(\(A,4\))f(\(B,1\))h
(\(C,2\))f(\(D,3\))75 2670 y(Heap)h(2)75 2783 y(none)1867
5960 y Fr(17)p eop
%%Page: 18 19
18 18 bop 691 44 a Fw(A)l(CM)25 b(International)f(Colle)o(giate)g
(Programming)f(Contest)i(1998/99)1082 158 y(Southwestern)f(European)h
(Re)o(gional)f(Contest)1543 541 y Fy(Pr)m(oblem)45 b(I)1274
772 y Fv(Single-Play)o(er)32 b(Games)1020 1040 y Ft(Sour)n(ce:)80
b Fs(games.\(c|cc|pas|java\))1020 1156 y Ft(Input:)133
b Fs(games.in)75 1570 y Fr(Playing)31 b(games)f(is)g(the)g(most)g(fun)g
(if)g(other)h(people)g(tak)o(e)g(part.)49 b(But)29 b(other)i(players)h
(are)e(not)g(al)o(w)o(ays)h(a)n(v)n(ailable)75 1683 y(if)g(you)g(need)g
(them,)i(which)e(led)g(to)g(the)g(in)l(v)o(ention)i(of)e(single-player)
k(games.)50 b(One)30 b(of)h(the)g(most)g(well-kno)n(wn)75
1796 y(e)o(xamples)26 b(is)e(the)g(inf)o(amous)j(\223Solitaire\224)f
(packaged)h(with)d(W)l(indo)n(ws,)h(probably)i(responsible)g(for)e
(more)f(w)o(asted)75 1909 y(hours)h(in)e(of)n(\002ces)h(around)h(the)f
(w)o(orld)g(than)g(an)o(y)g(other)g(game.)216 2022 y(The)32
b(goal)g(of)g(a)f(single-player)36 b(game)c(is)f(usually)j(to)e(mak)o
(e)g(\223mo)o(v)o(es\224)h(until)f(one)h(reaches)g(a)f(\002nal)g(state)
g(of)75 2135 y(the)e(game,)g(which)h(results)g(in)e(a)g(win)h(or)f
(loss,)j(or)d(a)h(score)g(assigned)i(to)e(that)g(\002nal)f(state.)48
b(Most)30 b(players)h(try)f(to)75 2248 y(optimize)h(the)f(result)i(of)d
(the)i(game)e(by)h(emplo)o(ying)i(good)f(strate)o(gies.)50
b(In)30 b(this)g(problem)i(we)d(are)h(interested)i(in)75
2361 y(what)20 b(happens)j(if)d(one)h(plays)g(randomly)-6
b(.)30 b(After)20 b(all,)h(these)g(games)g(are)f(mostly)i(used)f(to)f
(w)o(aste)h(time,)f(and)h(playing)75 2474 y(randomly)k(achie)n(v)o(es)g
(this)f(goal)h(as)e(well)g(as)h(an)o(y)f(other)i(strate)o(gy)-6
b(.)216 2588 y(Games)26 b(can)h(v)o(ery)g(compactly)i(represented)h(as)
c(\(possibly)k(in\002nite\))d(trees.)39 b(Ev)o(ery)27
b(node)g(of)g(the)g(tree)g(repre-)75 2700 y(sents)e(a)f(possible)j
(game)d(state.)33 b(The)24 b(root)h(of)f(the)h(tree)g(corresponds)j(to)
c(the)h(starting)h(position)h(of)d(the)h(game.)31 b(F)o(or)75
2813 y(an)21 b(inner)h(node,)g(its)f(children)i(are)e(the)g(game)f
(states)i(to)f(which)h(one)f(can)g(mo)o(v)o(e)f(in)h(a)g(single)h(mo)o
(v)o(e.)27 b(The)21 b(leaf)g(nodes)75 2926 y(are)j(the)f(\002nal)g
(states,)i(and)f(e)n(v)o(ery)g(one)f(of)h(them)f(is)g(assigned)j(a)d
(number)l(,)h(which)g(is)f(the)h(score)g(one)g(recei)n(v)o(es)h(when)75
3039 y(ending)g(up)f(at)f(that)h(leaf.)768 4589 y @beginspecial
0 @llx 0 @lly 268 @urx 166 @ury 1700 @rhi @setspecial
%%BeginDocument: eps/games.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-70.0 227.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 8200 m -1000 -1000 l 11725 -1000 l 11725 8200 l cp clip
 0.03150 0.03150 sc
% Ellipse
n 3150 4050 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 4050 4050 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 4950 4050 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 2520 4950 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 3420 4950 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 4770 4950 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 5760 4950 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 4275 5850 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 5265 5850 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 4050 3105 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 7950 2190 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 9570 6150 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 10065 5340 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 9075 5340 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 9525 4530 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 8535 4530 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 8985 3765 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 7995 3765 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 8490 3000 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
% Ellipse
n 7500 3000 225 225 0 360 DrawEllipse gs col7 0.50 shd ef gr 
15.000 slw
% Ellipse
n 10470 6105 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 10575 6225 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 10665 6360 45 45 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
n 7905 2190 m 10380 5970 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 10020 5385 m 9525 6195 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 9480 4530 m 9030 5385 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 8940 3765 m 8490 4620 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 8445 3000 m 7950 3855 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 7905 2190 m 7455 3045 l gs col7 0.00 shd ef gr gs col0 s gr 
/Courier ff 300.00 scf sf
8310 6915 m
gs 1 -1 sc (a = \(1 b\)) col0 sh gr
/Courier ff 300.00 scf sf
8310 7200 m
gs 1 -1 sc (b = \(4 a\)) col0 sh gr
% Polyline
n 4005 3150 m 3105 4095 l 2475 4995 l gs col0 s gr 
% Polyline
n 3105 4050 m 3375 5040 l gs col0 s gr 
% Polyline
n 4005 3105 m 4005 4095 l gs col0 s gr 
% Polyline
n 4005 3150 m 4905 4095 l 4725 4995 l 5220 5895 l gs col0 s gr 
% Polyline
n 4725 4950 m 4230 5895 l gs col0 s gr 
% Polyline
n 4905 4095 m 5715 4995 l gs col0 s gr 
/Courier ff 300.00 scf sf
2250 6795 m
gs 1 -1 sc (a = \(\(1 7\) 6 \(\(8 3\) 4\)\)) col0 sh gr
% Ellipse
n 3105 4095 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4005 4095 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4905 4095 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 2475 4995 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 3375 4995 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4725 4995 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 5715 4995 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4230 5895 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 5220 5895 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4005 3150 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 7905 2235 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9525 6195 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 10020 5385 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9030 5385 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 9480 4575 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 8490 4575 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 8940 3810 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 7950 3810 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 8445 3045 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 7455 3045 225 225 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

/Times-Roman ff 225.00 scf sf
9480 6285 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 225.00 scf sf
8445 4665 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 225.00 scf sf
7410 3135 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 225.00 scf sf
7905 3900 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 225.00 scf sf
8985 5475 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 225.00 scf sf
2430 5040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 225.00 scf sf
3345 5070 m
gs 1 -1 sc (7) col0 sh gr
/Times-Roman ff 225.00 scf sf
4185 5970 m
gs 1 -1 sc (8) col0 sh gr
/Times-Roman ff 225.00 scf sf
5160 5970 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 225.00 scf sf
5670 5055 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 225.00 scf sf
3960 4185 m
gs 1 -1 sc (6) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 216 4805 a(T)m(rees)g(are)f(de\002ned)i(using)f(the)g
(follo)n(wing)h(grammar)-5 b(.)946 5125 y Fn(De)14 b(f)d(ini)n(t)6
b(ion)44 b Fr(::)p Fh(=)c Fn(I)5 b(d)g(en)n(t)h(i)14
b(f)d(ier)28 b Fr(\223)p Fq(=)p Fr(\224)23 b Fn(Real)5
b(T)h(r)o(ee)1001 5263 y(Real)f(T)h(r)o(ee)42 b Fr(::)p
Fh(=)e Fr(\223)p Fq(\()p Fr(\224)23 b Fn(T)6 b(r)o(ee)1875
5226 y Ff(+)1955 5263 y Fr(\223)p Fq(\))p Fr(\224)1172
5401 y Fn(T)g(r)o(ee)42 b Fr(::)p Fh(=)e Fn(I)5 b(d)g(en)n(t)h(i)14
b(f)d(ier)28 b Fl(j)23 b Fn(I)5 b(n)n(t)h(e)l(g)o(er)27
b Fl(j)c Fr(\223)p Fq(\()p Fr(\224)g Fn(T)6 b(r)o(ee)2664
5363 y Ff(+)2743 5401 y Fr(\223)p Fq(\))p Fr(\224)965
5539 y Fn(I)f(d)g(en)n(t)h(i)14 b(f)d(ier)46 b Fr(::)p
Fh(=)40 b Fa(a)23 b Fl(j)g Fa(b)f Fl(j)33 b Fm(:)10 b(:)g(:)34
b Fl(j)22 b Fa(z)1076 5677 y Fn(I)5 b(n)n(t)h(e)l(g)o(er)45
b Fl(2)40 b(f)p Fm(:)10 b(:)g(:)h(;)f Fl(\000)p Fr(3)p
Fm(;)g Fl(\000)p Fr(2)p Fm(;)g Fl(\000)p Fr(1)p Fm(;)g
Fr(0)p Fm(;)g Fr(1)p Fm(;)g Fr(2)p Fm(;)g Fr(3)p Fm(;)g(:)g(:)g(:)15
b(;)10 b Fl(g)1867 5960 y Fr(18)p eop
%%Page: 19 20
19 19 bop 216 44 a Fr(By)37 b(using)h(a)f Fn(De\002nition)p
Fr(,)42 b(the)37 b Fn(RealT)-5 b(r)m(ee)38 b Fr(on)f(the)g(right-hand)j
(side)e(of)f(the)h(equation)h(is)e(assigned)j(to)d(the)75
157 y Fn(Identi\002er)23 b Fr(on)e(the)g(left.)28 b(A)19
b Fn(RealT)-5 b(r)m(ee)21 b Fr(consists)i(of)d(a)h(root)g(node)g(and)h
(one)f(or)f(more)h(children,)i(gi)n(v)o(en)e(as)g(a)f(sequence)75
270 y(enclosed)26 b(in)d(brack)o(ets.)31 b(And)23 b(a)h
Fn(T)-5 b(r)m(ee)23 b Fr(is)g(either)211 453 y Fl(\017)46
b Fr(the)24 b(tree)g(represented)j(by)c(a)h(gi)n(v)o(en)g
Fn(Identi\002er)p Fr(,)h(or)211 638 y Fl(\017)46 b Fr(a)23
b(leaf)h(node,)h(represented)h(by)e(a)f(single)i Fn(Inte)l(g)o(er)p
Fr(,)g(or)211 824 y Fl(\017)46 b Fr(an)22 b(inner)h(node,)g
(represented)j(by)c(a)g(sequence)i(of)e(one)h(or)f(more)g
Fn(T)-5 b(r)m(ee)p Fr(s)22 b(\(its)g(children\),)i(enclosed)h(in)d
(brack-)302 937 y(ets.)216 1119 y(Y)-10 b(our)25 b(goal)g(is)g(to)g
(compute)h(the)f(e)o(xpected)h(score,)g(if)f(one)g(plays)h(randomly)-6
b(,)26 b(i.e.)32 b(at)25 b(each)g(inner)h(node)g(selects)75
1232 y(one)21 b(of)g(the)g(children)h(uniformly)h(at)d(random.)29
b(This)20 b(e)o(xpected)j(score)f(is)e(well-de\002ned)i(e)n(v)o(en)f
(for)g(the)g(in\002nite)g(trees)75 1345 y(de\002nable)k(in)e(our)h
(frame)n(w)o(ork)h(as)e(long)i(as)e(the)h(probability)j(that)d(the)f
(game)h(ends)g(\(playing)i(randomly\))f(is)f(1.)75 1637
y Fx(Input)75 1844 y Fr(The)k(input)i(\002le)e(contains)j(se)n(v)o
(eral)f(gametree)g(descriptions.)48 b(Each)28 b(description)k(starts)e
(with)f(a)f(line)h(containing)75 1956 y(the)f(number)g
Fn(n)g Fr(of)f(identi\002ers)i(used)g(in)e(the)h(description.)44
b(The)27 b(identi\002ers)i(used)g(will)e(be)h(the)f(\002rst)h
Fn(n)f Fr(lo)n(wercase)75 2069 y(letters)h(of)f(the)h(alphabet.)41
b(The)27 b(follo)n(wing)h Fn(n)f Fr(lines)h(contain)h(the)e
(de\002nitions)j(of)d(these)h(identi\002ers)h(\(in)e(the)g(order)75
2182 y Fq(a)p Fr(,)k Fq(b)p Fr(,)f Fm(:)10 b(:)g(:)h
Fr(\).)49 b(Each)30 b(de\002nition)i(may)e(contain)i(arbitrary)h
(whitespace)f(\(b)n(ut)f(of)g(course)h(there)f(will)f(be)g(no)h(spaces)
75 2295 y(within)25 b(a)g(single)h(inte)o(ger\).)34 b(The)25
b(right)g(hand)h(side)g(of)e(a)h(de\002nition)h(will)f(contain)h(only)g
(identi\002ers)h(from)d(the)i(\002rst)75 2408 y Fn(n)d
Fr(lo)n(wercase)i(letters.)216 2521 y(The)e(inputs)i(ends)g(with)e(a)g
(test)h(case)g(starting)i(with)d Fn(n)e Fh(=)f Fr(0.)28
b(This)23 b(test)h(case)g(should)i(not)e(be)f(processed.)75
2813 y Fx(Output)75 3020 y Fr(F)o(or)35 b(each)i(gametree)g
(description)i(in)d(the)g(input,)k(\002rst)c(output)h(the)g(number)f
(of)g(the)h(game.)65 b(Then,)39 b(for)d(all)h Fn(n)75
3133 y Fr(identi\002ers)25 b(in)f(the)g(order)g Fq(a)p
Fr(,)e Fq(b)p Fr(,)g Fm(:)10 b(:)g(:)h Fr(,)23 b(output)i(the)f(follo)n
(wing.)30 b(If)23 b(an)h(identi\002er)h(represents)h(a)e(gametree)g
(for)g(which)75 3245 y(the)31 b(probability)j(of)d(\002nishing)i(the)e
(game)g(is)g(1,)h(print)g(the)f(e)o(xpected)i(score)f(\(when)f(playing)
i(randomly\).)53 b(This)75 3358 y(v)n(alue)24 b(should)i(be)d(e)o(xact)
h(to)g(three)g(digits)h(to)e(the)h(right)h(of)e(the)h(decimal)h(point.)
216 3471 y(If)e(the)f(game)h(described)i(by)e(the)g(v)n(ariable)h(does)
g(not)f(end)g(with)f(probability)k(1,)c(print)i(\223)p
Fq(Expected)51 b(score)75 3584 y(of)j Fn(id)60 b Fq(undefined)p
Fr(\224)19 b(instead.)216 3697 y(Output)24 b(a)f(blank)i(line)f(after)h
(each)f(test)g(case.)75 3989 y Fx(Sample)31 b(Input)75
4196 y Fq(1)75 4309 y(a)54 b(=)g(\(\(1)f(7\))h(6)g(\(\(8)f(3\))h(4\)\))
75 4421 y(2)75 4534 y(a)g(=)g(\(1)g(b\))75 4647 y(b)g(=)g(\(4)g(a\))75
4760 y(1)75 4873 y(a)g(=)g(\(a)g(a)g(a\))75 4986 y(0)75
5278 y Fx(Sample)31 b(Output)75 5485 y Fq(Game)53 b(1)75
5598 y(Expected)e(score)h(for)h(a)h(=)h(4.917)1867 5960
y Fr(19)p eop
%%Page: 20 21
20 20 bop 75 44 a Fq(Game)53 b(2)75 157 y(Expected)e(score)h(for)h(a)h
(=)h(2.000)75 270 y(Expected)c(score)h(for)h(b)h(=)h(3.000)75
496 y(Game)e(3)75 609 y(Expected)e(score)h(for)h(a)h(undefined)1867
5960 y Fr(20)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
