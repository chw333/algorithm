Set-contest:      Central European 1996 ACM Contest
Set-name:         Central European 1996
Set-date:         1996
Set-URL:          http://www.fmph.uniba.sk/acm
Set-id:           ceeu1996
Set-description:  Bratislava, Slovak Republic
Set-text:         prset.ps
Set-archive:      set_ceeu1996.tgz
Set-solution-archive: ceeu1996.tgz


Problem:        A
Name:           Tin Cutter
Description:    Hole cutting
Class:          2D geometry
Subclass:       rectangular
Algorithm:	interval compression & floodfill
Solution:       a.c
Input:          a.in
Output:         a.out

Problem:        B
Name:           Forcal
Description:	Token extracting
Class:          compilers
Subclass:       lexical anal.
Algorithm:	finite automata
Solution:       b.c
Input:          b.in
Output:         b.out

Problem:        C
Name:           L-system
Description:	is it possible to produce given word by given L-system? 
Class:          combinatory
Subclass:       generic
Algorithm:	backtracking & dynamic programming
Solution:       c.c
Input:          c.in
Output:         c.out

Problem:        D
Name:           Packets
Description:	minimum number of 6x6 parcels needed to pack square products
Class:          combinatory
Subclass:       generic
Algorithm:	direct calculation
Solution:       d.c
Input:          d.in
Output:         d.out

Problem:        E
Name:           Crosswords
Description:	print crosswords
Class:          strings
Subclass:       formating
Algoritm:	read input, write output	
Solution:       e.c
Input:          e.in
Output:         e.out

Problem:        F
Name:           Intervals
Description:	find intervals visible through the bunch of pipes
Class:          2D geometry
Subclass:       round
Algorithm:	magic geometry formulas & sort
Solution:       f.c
Input:          f.in
Output:         f.out

Problem:        G
Name:           Robot
Description:	shortest robot path
Class:          simulations
Subclass:       robots
Algorithm:	breadth search & heap
Solution:       g.c
Input:          g.in
Output:         g.out

Problem:        H
Name:           Network
Description:	find articulations
Class:          graphs
Subclass:       connectivity
Algorithm:	Tarjan's articulation finding
Solution:       h.c
Solution:       h.pas
Input-generator: h_gen.c
Input:          h.in
Output:         h.out

