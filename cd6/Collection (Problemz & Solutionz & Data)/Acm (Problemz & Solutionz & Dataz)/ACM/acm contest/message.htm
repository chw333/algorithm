<html>

<head>
<title>SER 2001: Did you get the message</title>
</head>

<body lang=EN-US style='tab-interval:.5in'>


<h1>Do You Get the Message?</h1>

<h3>input file: <code>message.in</code></h3>

<p>In this problem we will be using a one-bit error-correcting
code called a Hamming code, which allows the receiver to correct any one-bit
error in a binary sequence called a   <i>transmission
string</i>. The transmission string is generated by the sender from a binary
sequence called the <i>message string</i>, and additional embedded bits called <i>parity
bits</i>.</p>

<p>Let us number the transmission string bit positions from
left to right starting at 1. The embedded parity bits 
<i>p</i><sub>0</sub>,
<i>p</i><sub>1</sub>,
<i>p</i><sub>2</sub>,...
<i>p</i><sub>i</sub>,...
<i>p</i><sub>n</sub>
are at positions 1, 2, 4,...
2<super>i</super>...
2<super>n</super>
respectively, where
2<super>n</super> &lt; length(<i>transmission string</i>).
Associated with each parity bit <i>p</i> <sub>i</sub>is a
subset <i>s</i><sub>i</sub> of transmission string bits. 
Note that <i>p</i><sub>i</sub>
is a member of subset <i>s</i><sub>i</sub>. Note also that these subsets are
non-disjoint. The value of the parity bits are set so that the parity (sum) of
all the bits in their corresponding subset is even. The implied subsets are
most easily explained by giving an example: a transmission string bit at
position <code>13 = 1101<sub>2</sub>=1 x 2<sup>3</sup>+
1 x 2<sup>2</sup>+
0 x 2<sup>1</sup>+
1 x 2<sup>0</sup> =
2<sup>3</sup>+
2<sup>2</sup>+
2<sup>0</sup></code>
contributes to the
parity of subsets <i>s</i><sub>3</sub>, 
<i>s</i><sub>2</sub> and <i>s</i><sub>0</sub>.</p>

<p>For example, if the message is 10110, the transmission
string will be laid out like</p>

<table border>
 <tr>
  <td>
  <p>Position:</p>
  </td>
  <td>
  <p>1</p>
  </td>
  <td>
  <p>2</p>
  </td>
  <td>
  <p>3</p>
  </td>
  <td>
  <p>4</p>
  </td>
  <td>
  <p>5</p>
  </td>
  <td>
  <p>6</p>
  </td>
  <td>
  <p>7</p>
  </td>
  <td>
  <p>8</p>
  </td>
  <td>
  <p>9</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>Transmission string</p>
  </td>
  <td>
  <p><i>p</i><sub>0</sub></p>
  </td>
  <td>
  <p><i>p</i><sub>1</sub></p>
  </td>
  <td>
  <p>1</p>
  </td>
  <td>
  <p><i>p</i><sub>2</sub></p>
  </td>
  <td>
  <p>0</p>
  </td>
  <td>
  <p>1</p>
  </td>
  <td>
  <p>1</p>
  </td>
  <td>
  <p><i>p</i><sub>3</sub></p>
  </td>
  <td>
  <p>0</p>
  </td>
 </tr>
</table>

<ul>
<li>To make the parity of
 <i>s</i><sub>0</sub> (bits at positions
1,3,5,7,9) even, <i>p</i><sub>0</sub> is set to 0.</li>

<li>To make the parity of
 <i>s</i><sub>1</sub> (bits at positions
2,3,6,7) even, <i>p</i><sub>1</sub> is set to 1.</li>

<li>To make the parity of
 <i>s</i><sub>2</sub> (bits at positions
4,5,6,7) even, <i>p</i><sub>2</sub> is set to 0.</li>

<li>To make the parity of <i>s</i><sub>3</sub> (bits at positions 8,9)
even, <i>p</i><sub>3</sub> is set
to 0.</li>
</ul>

<p>Thus, the generated transmission string—called a Hamming
code—will be 011001100, and the sender now transmits this.</p>

<p>We will assume that, if an error occurs during transmission,
no more than one bit in the received transmission string will be in error
(i.e., inverted).   The receiver checks
the parity of each subset.   If <i>s<sub>i</sub></i>
is even (i.e., correct), assign a bit <i>b<sub>i</sub></i> a value of 0,
otherwise a value of&nbsp;1. If the binary number corresponding to
<i>b</i><sub>n</sub>...<i>b</i><sub>i</sub>...<i>b</i><sub>2</sub>
<i>b</i><sub>1</sub> <i>b</i><sub>0</sub>  
is zero, there were no errors in the transmission, otherwise, the binary
number corresponds to the location of the error.</p>

<p>Going back to the example above,
let us say that (unbeknown to the receiver) bit 5 was corrupted (inverted),
i.e., the received transmission string is 0110<u>1</u>1100. </p>

<p>The receiver calculates the subset
parities, and calculates the error position.</p>

<p><i>b</i><sub>0</sub>
= 1 (<i>s</i><sub>o</sub> is odd)</p>

<p><i>b</i><sub>1</sub>
= 0 (<i>s</i><sub>1</sub> is even)</p>

<p><i>b</i><sub>2</sub>
= 1 (<i>s</i><sub>2</sub> is odd)</p>

<p><i>b</i><sub>3</sub> = 0 (<i>s</i><sub>3</sub>
is even)</p>

<p>The receiver discovers that the received transmission string
bit at position b<sub>3</sub> b<sub>2</sub> b<sub>1</sub> b<sub>0</sub> = 0101<sub>2</sub>
= 5 is in error. Thus, the corrected transmission string is 0110<u>0</u>1100.
The (corrected) message string is 10110, obtained by stripping out the parity
bits.</p>

<h2>Input</h2>

<p>The input contains a number of received binary transmission
strings, one to a line, that are valid Hamming codes with no more than 1 error
(3 &lt;=  length of
string &lt;32,000). The list is terminated with a transmission string
of &quot;0&quot, which is not to be processed.</p>

<h2>Output</h2>

<p>The (corrected) binary message string is to be output, one
to a line. </p>

<h3>Sample Input</h3>

<pre>
011011100
011001100
01101
0
</pre>

<h3>Output corresponding to the Sample Input</h3>

<pre>
10110
10110
11
</pre>

</body>

</html>
