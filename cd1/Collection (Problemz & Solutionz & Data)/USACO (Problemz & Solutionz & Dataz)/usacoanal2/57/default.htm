<html>
<head> <title>Analysis 57: Runaround Numbers</title> </head>
<body background="../../usaco/bg3.jpg">
<img src="../../usaco/cow1.jpg" width="742" height="118">
<center>
<b><font size="7">Runaround Numbers</font></b><br>
Russ Cox
</center>
<html>

<p>The trick to this problem is noticing that since runaround numbers
must have unique digits, they must be at most 9 digits long.  There are
only 9! = 362880 nine-digit numbers with unique digits, so there are
fewer than 9*362880 numbers with up to 9 unique digits.  Further, they
are easy to generate, so we generate all of them in increasing order,
test to see if they are runaround, and then take the first one bigger
than our input.

<pre>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;assert.h&gt;

int m;
FILE *fout;

/* check if s is a runaround number;  mark where we've been by writing 'X' */
int
isrunaround(char *s)
{
    int oi, i, j, len;
    char t[10];

    strcpy(t, s);
    len = strlen(t);

    i=0;
    while(t[i] != 'X') {
	oi = i;
	i = (i + t[i]-'0') % len;
	t[oi] = 'X';
    }

    /* if the string is all X's and we ended at 0, it's a runaround */
    if(i != 0)
	return 0;

    for(j=0; j&lt;len; j++)
	if(t[j] != 'X')
	    return 0;

    return 1;
}

/*
 * create an md-digit number in the string s.
 * the used array keeps track of which digits are already taken.
 * s already has nd digits.
 */
void
permutation(char *s, int *used, int nd, int md)
{
    int i;

    if(nd == md) {
	s[nd] = '\0';
	if(atoi(s) &gt; m &amp;&amp; isrunaround(s)) {
	    fprintf(fout, "%s\n", s);
	    exit(0);
	}
	return;
    }

    for(i=1; i&lt;=9; i++) {
	if(!used[i]) {
	    s[nd] = i+'0';
	    used[i] = 1;
	    permutation(s, used, nd+1, md);
	    used[i] = 0;
	}
    }
}


void
main(void)
{
    FILE *fin;
    char s[10];
    int i, used[10];

    fin = fopen("runround.in", "r");
    fout = fopen("runround.out", "w");
    assert(fin != NULL &amp;&amp; fout != NULL);

    fscanf(fin, "%d", &amp;m);

    for(i=0; i&lt;10; i++)
	used[i] = 0;

    for(i=1; i&lt;=9; i++)
	permutation(s, used, 0, i);

    assert(0);	/* not reached */
}
</pre>
<center>
<a href="../BACK/default.htm">USACO Gateway</a> | <a href="mailto:kolstad@ace.delos.com">Comment or Question</a>
</center>
</body>
