<html>
<head> <title>Problem 33: Street Race</title> </head>
<body background="../../usaco/bg3.jpg">
<img src="../../usaco/cow1.jpg" width="742" height="118">
<center>
<b><font size="7">Street Race</font></b><br>
<b>IOI'95</b>
</center>

<p>Figure 1 gives an example of a course for a street race.  You see
some points, labeled from 0 to N (here, N=9), and some arrows connecting
them.  Point 0 is the start of the race; point N is the finish.  The
arrows represent one-way streets.  The participants of the race move
from point to point via the streets, in the direction of the arrows
only.  At each point, a participant may choose any outgoing arrow.

<CENTER>
<IMG SRC="/usaco/probs/race.gif" ALIGN=BOTTOM>
<BR>
Figure 1: A street course with 10 points
</CENTER>

<P> A well-formed course has the following properties:
<UL><LI>Every point in the course can be reached from the start.
<LI>The finish can be reached from each point in the course.
<LI>The finish has no outgoing arrows.
</UL>

<p>A participant does not have to visit every point of the course to
reach the finish.  Some points, however, are unavoidable.  In the
example, these are points 0, 3, 6, and 9.  Given a well-formed course,
your program must determine the set of unavoidable points that all
participants have to visit, excluding start and finish.

<P> Suppose the race has to be held on two consecutive days.  For that
purpose the course has to be split into two courses, one for each day.
On the first day, the start is at point 0  and the finish at some
`splitting point'.  On the second day, the start is at this splitting
point and the finish is at point N.  Given a well-formed course, your
program must also determine the set of splitting points.

A point S is a splitting point for the well-formed course C if S differs
from the start and the finish of C, and the course can be split into
two well-formed courses that have no common arrows and that have S as
only common point.  In the example, only point 3 is a splitting point.

<h3>PROGRAM NAME: race3</h3>

<h3>INPUT FORMAT</h3>

<p>The input file contains a well-formed course with at most 50 points
and at most 100 arrows.  There are N+2 lines in the file.  The first
N+1 lines contain the endpoints of the arrows that leave from the points
0 through N respectively.  Each of these lines ends with the number
-2.  The last line contains only the number -1.

<h3>SAMPLE INPUT (file race3.in) </h3>

<pre>
1 2 -2
3 -2
3 -2
5 4 -2
6 4 -2
6 -2
7 8 -2
9 -2
5 9 -2
-2
-1
</pre>

<h3>OUTPUT FORMAT</h3>

Your program should write two lines.  The first line should contain the
number of unavoidable points in the input course, followed by the labels
of these points, in ascending order.  The second line should contain
the number of splitting points of the input course, followed by the
labels of all these points, in ascending order.

<h3>SAMPLE OUTPUT (file race3.out)</h3>

<pre>
2 3 6
1 3
</pre>
