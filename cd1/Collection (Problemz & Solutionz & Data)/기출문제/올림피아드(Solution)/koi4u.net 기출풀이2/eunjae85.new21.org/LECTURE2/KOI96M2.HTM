<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<title>이것은 유한상태 오토마타를 이용해 풀 수 있는 문제입니다.</title>
<meta name="generator" content="Namo WebEditor v3.0">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">

<p><font face="굴림체">잠수함 식별</font></p>
<p><font face="굴림체">이것은 유한상태 오토마타를 이용해 풀 수 있는 문제입니다. 
물론 보통의 노가다로도 가능하지만, 이 방법을 쓰면 훨씬 더 유연하고 깔끔하게 
프로그램을 작성할 수 있습니다.</font></p>
<p><font face="굴림체">저도 오토마타에 대해서는 깊은 이해가 없기 때문에, 대략적인 
개념만 설명해 드리겠습니다. 오토마타는 문법을 표현하는 하나의 방법으로, 여러분이 
쓰시는 언어들도 전부 오토마타 이론에 기초하여 만들어 졌습니다. (한글 입력도 
오토마타를 사용합니다) 오토마타를 그래프로 표현할 때, 노드는 현재의 '상태'가 
되고 에지는 소스(데이터)를 나타냅니다.</font></p>
<p><font face="굴림체">아래에 이 문제의 잠수함 식별코드인 (100~1~|01)~을 오토마타로 
표현한 그래프를 간단히 그려보았습니다. (말이 간단하지만 1시간 반이 걸렸습니다..)</font></p>
<p align="center"><font face="굴림체"><img src="koi96m2.gif" width="408" height="363"
 border="0"></font></p>
<p><font face="굴림체">일단 처음에 시작에서 시작합니다. 그리고 잠수함 코드의 
숫자를 하나씩 읽어와 1이면 초록색, 0이면 빨간색 에지가 가리키는 노드로 이동합니다. 
위의 그림에서 해골은 노이즈로 판명되었음을 나타냅니다. (1, 100~1~)은 100~1~다음에 
나오는 1이 1~이 계속되고 있는 것으로 볼 수도 있고 맨 처음의 1로 되돌아 옴을 
의미할 수도 있는 노드입니다. 그래서 정확한 상황을 모르므로 두 가지 경우를 전부 
써 준 것입니다. (10, 0)의 경우도 마찬가지입니다.</font></p>
<p><font face="굴림체">이렇게 모든 데이터를 넣어서 최종 위치가 (1, 100~1~)이거나 
(01), (100~1)이면 그 데이터가 잠수함 코드임을 나타냅니다. 실제로 데이터를 넣어서 
보면 이해가 가실 것으로 생각됩니다.</font></p>
<p><font face="굴림체">아래의 소스는 박준혁님께서 수고해 주셨습니다. 위의 그래프를 
배열로 구현한 것이 바로 automatone입니다. (철자 가지고 토다는 사람이 제일 싫다는군요. 
-_-)</font></p>
<p><font face="굴림체">(뽀록나면 연락 주세요 - 박준혁 씀)</font></p>
<p><font face="굴림체">program submarine_problem;</font></p>
<p><font face="굴림체">const<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatone &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;array[ 0..9, '0'..'1' ] of integer =<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
( 5, 1 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
2, 9 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
3, 9 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
3, 4 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
7, 5 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
6, 5 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
3, 8 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
9, 8 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
5, 1 ),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( 
9, 9 ) );<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;infile &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 
&nbsp;&nbsp;&nbsp;&nbsp;'input.txt';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outfile &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 
&nbsp;&nbsp;&nbsp;&nbsp;'output.txt';</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;inp_string &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string;<br>
&nbsp;&nbsp;&nbsp;now &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer;</font></p>
<p><font face="굴림체">procedure input;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;inf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign( inf, infile );<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reset( inf );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readln( inf, inp_string 
);</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close( inf );<br>
end;</font></p>
<p><font face="굴림체">procedure solve;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;i &nbsp;&nbsp;&nbsp;: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;now := 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for i := 1 to length( inp_string ) do<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;now := automatone[ now, 
inp_string[ i ] ];<br>
end;</font></p>
<p><font face="굴림체">procedure output;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;ouf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign( ouf, outfile );<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrite( ouf );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( now = 4 ) or ( now 
= 5 ) or ( now = 8 ) then writeln( ouf, 'SUBMARINE' )<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else 
writeln( ouf, 'NOISE' );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close( ouf );<br>
end;<br>
begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solve;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output;<br>
end.</font></p>
</body>

</html></html>