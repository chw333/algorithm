<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<title>KOI 18회 고등부 1. 두 배열의 합</title>
<meta name="generator" content="Namo WebEditor v3.0">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">

<table border="0" width="595">
    <tr>
        <td width="383" height="27" bgcolor="#CFD3FF"><p><font size="4"><b>&nbsp;&nbsp;KOI 
            18회 고등부 1. 두 배열의 합</b></font></td>
        <td width="100" height="27" bgcolor="#CFD3FF"><p align="center"><a href="pkoi01h1.htm"><img src="button1.gif"
             width="72" height="22" border="0"></a></td>
        <td width="100" height="27" bgcolor="#CFD3FF"><p align="center"><a href="ckoi01h1.htm"><img src="button3.gif"
             width="72" height="22" border="0"></a></td>
    </tr>
</table>
<ul>
    <p>&nbsp; 
    <table border="0">
            <tr>
                <td width="550" height="210"><p align="left" style="line-height:150%;"><font
                 size="2">&nbsp;&nbsp;N 의 범위가 1000 으로써 지금까지의 KOI 
                문제와는 달리 상당히 큰 편이다. 그래서 처음부터 겁을 먹고 포기하시거나 
                어렵다고 생각하신 분이 적지 않으리라 본다. 그러나 다른 시각으로 
                보자면 N 이 작으므로써 시간복잡도도 낮게 나오고, 많은 경우 간단한 
                알고리즘으로 풀리게 된다. </font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;일단 
                배열 여럿을 정의하자.</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;D1[] 
                = 첫번째 배열<br> &nbsp;&nbsp;D2[] = 두번째 배열<br> &nbsp;&nbsp;S1[i] 
                = Sum(D1[1]~D1[i])<br> &nbsp;&nbsp;S2[i] = Sum(D2[1]~D2[i])<br> 
                &nbsp;&nbsp;T1[i] = 첫번째 배열에서 부배열의 합이 i 가 되는 
                경우의 수<br> &nbsp;&nbsp;T2[i] = 두번째 배열에서 부배열의 합이 
                i 가 되는 경우의 수</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;D1[], 
                D2[] 는 입력으로 들어오고, <br> S1[i] = S1[i - 1] + D1[i], &nbsp;&nbsp;S2[i] 
                = S2[i - 1] + D2[i] &nbsp;이렇게 구하고,<br> T1[], T2[] 는 간단하게 
                For i, j 두 개를 돌려서</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;for 
                (i = 0; i &lt; n; i++)<br> &nbsp;&nbsp;&nbsp;&nbsp;for (j = 
                i; j &lt; n; j++) {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1[Sum(D1[i]~D1[j])]++;<br> 
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T2[Sum(D2[i]~D2[j])]++;<br> 
                &nbsp;&nbsp;&nbsp;&nbsp;}</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;이렇게 
                하면 저 6개의 배열의 값은 쉽게 구할 수 있다. 혹시 모르시는 분 
                계실 까봐...</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;Sum(D1[i]~D1[j]) 
                = S1[j] - S1[i - 1];<br> &nbsp;&nbsp;Sum(D2[i]~D2[j]) = S2[j] 
                - S1[i - 1];</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;저 
                6개 배열의 값을 다 알고, 구했으니 이제 For 한 번만 더 돌려 주면 
                답을 구할 수 있다. 어떤 걸 돌려야 할까?</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;for 
                (i = 0; i &lt; m; i++) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 
                m 은 만들 크기<br> &nbsp;&nbsp;&nbsp;&nbsp;answer = answer + 
                T1[i]*T2[m - i];<br> &nbsp;&nbsp;}</font></p>
                <p align="left" style="line-height:150%;"><font size="2">&nbsp;&nbsp;이게 
                무슨 뜻이냐면, 첫번째 배열로 숫자 i를 만들고, 나머지 숫자, 즉 
                m - i를 두번째 배열로 만들 수 있다면 그 경우의 수를 각각 곱하여 
                더해주는 것이다.</font></td>
        </tr>
    </table>
    <p><font size="2">&nbsp;</font></p>
</ul>
</body>

</html>