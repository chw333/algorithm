<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<title>KOI 19회 고등부 1. 경로 찾기</title>
<meta name="generator" content="Namo WebEditor v5.0">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">

<table border="0" width="595">
    <tr>
        <td width="383" height="27" bgcolor="#CFD3FF"><p><font size="4"><b>&nbsp;&nbsp;KOI 
            19회 고등부 1. 경로 찾기</b></font></td>
        <td width="100" height="27" bgcolor="#CFD3FF"><p align="center"><a href="pkoi02h1.htm"><img src="button1.gif"
             border="0"></a></td>
        <td width="100" height="27" bgcolor="#CFD3FF"><p align="center"><a href="ckoi02h1.htm"><img src="button3.gif"
             border="0"></a></td>
    </tr>
</table>
<ul>
    <p>&nbsp; 
    <table border="0" style='line-height:170%'>
            <tr>
                <td width="550" height="210">
                <p><font size="2">&nbsp;&nbsp;누구의 말을 인용하자면, &quot;온 
                몸으로 다이나믹이라고 외치고 있는&quot; 문제입니다. 동적계획법을 
                이용해서 쉽게 풀 수 있습니다. 점화식도 복잡하지도 않고 코딩도 
                동적계획법 답게 쉽습니다. 부분 문제 정의는 아래와 같습니다.</font></p>
                <p><font size="2">&nbsp;C[i, j, 1] = (1, 1)부터 (i, j) 까지 
                오는&nbsp;최대 점수. <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;단 
                (i, j) 로 오기 이전엔 같은 열이고, 그 위칸에서 왔음.<br> &nbsp;C[i, 
                j, 2] = (1, 1)부터 (i, j) 까지 오는 최대 점수. <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;단 
                (i, j) 로 오기 이전엔 같은 행이고, 왼쪽에서 왔음.<br> &nbsp;C[i, 
                j, 3] = (1, 1)부터 (i, j) 까지 오는 최대 점수. <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;단 
                (i, j) 로 오기 이전엔 같은 행이고, 오른쪽에서 왔음.</font></p>
                <p><font size="2">&nbsp;(i, j) 까지 오기 이전에 바로 왼쪽 칸에서 
                왔다면, 그 다음에는 그 칸에서 왼쪽으로 갈 수가 없다. 또, (i, 
                j) 까지 오기 이전에 바로 오른쪽 칸에서 왔다면, 그 다음에는 그 
                칸에서 오른쪽으로 갈 수가 없다. 이러한 것을 막기 위해서, 위에서 
                왔느냐, 왼쪽에서 왔느냐, 오른쪽에서 왔느냐를 고려해서 배열을 
                채우는 것이다.</font></p>
                <p><font size="2">&nbsp;위 방법대로 특정 칸으로 가는 세 가지 
                경우를 고려해서 배열에 값을 채우고 난 다음에, (n, n) 로 오는 
                세 가지 경우 중 가장 큰 점수를 뽑아서 출력하면 된다.</font></p>
</td>
        </tr>
    </table>
    <p><font size="2">&nbsp;</font></p>
</ul>
</body>

</html>