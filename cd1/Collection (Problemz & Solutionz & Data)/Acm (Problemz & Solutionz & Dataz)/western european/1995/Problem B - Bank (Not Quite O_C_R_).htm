<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0048)http://www.karrels.org/Ed/ACM/weur95/prob_b.html -->
<HTML><HEAD><TITLE>Problem B - Bank (Not Quite O.C.R.)</TITLE>
<META content="text/html; charset=ks_c_5601-1987" http-equiv=Content-Type><LINK 
href="mailto:Ed@Tool.com" rev=made>
<META content="MSHTML 5.00.3315.2870" name=GENERATOR></HEAD>
<BODY><EM>Not an official ACM page</EM> <BR>[<A 
href="http://www.karrels.org/Ed/ACM/weur95/prob_c.html">Problem C</A> | <A 
href="http://www.karrels.org/Ed/ACM/weur95/index.html">1995 Western Europe 
problem set</A> | <A href="http://www.karrels.org/Ed/ACM/index.html">Ed's 
programming contest problem archive</A> | <A 
href="http://www.karrels.org/Ed/index.html">my home page</A>] 
<HR>

<CENTER>
<H3>1995-1996 ACM International Collegiate Programming Contest<BR>Western 
European Regional</H3>
<H1>Problem B </H1>
<H2>Bank (Not Quite O.C.R.) </H2></CENTER>Banks, always trying to increase their 
profit, asked their computer experts to come up with a system that can read bank 
cheques; this would make the processing of cheques cheaper. One of their ideas 
was to use optical character recognition (ocr) to recognize bank accounts 
printed using 7 line-segments. 
<P>Once a cheque has been scanned, some image processing software would convert 
the horizontal and vertical bars to ASCII bars '|' and underscores '_'. 
<P>The ASCII 7-segment versions of the ten digits look like this: 
<P><IMG src="Problem B - Bank (Not Quite O_C_R_).files/bank_digits.gif"> 
<P>A bank account has a 9-digit account number with a checksum. For a valid 
account number, the following equation holds: (<EM>d</EM><SUB>1</SUB> + 2 ¡¿ 
<EM>d</EM><SUB>2</SUB> + 3 ¡¿ <EM>d</EM><SUB>3</SUB> + . . . + 9 ¡¿ 
<EM>d</EM><SUB>9</SUB>) mod 11 = 0. Digits are numbered from right to left like 
this: 
<EM>d</EM><SUB>9</SUB><EM>d</EM><SUB>8</SUB><EM>d</EM><SUB>7</SUB><EM>d</EM><SUB>6</SUB><EM>d</EM><SUB>5</SUB><EM>d</EM><SUB>4</SUB><EM>d</EM><SUB>3</SUB><EM>d</EM><SUB>2</SUB><EM>d</EM><SUB>1</SUB>. 

<P>Unfortunately, the scanner sometimes makes mistakes: some line-segments may 
be missing. Your task is to write a program that deduces the original number, 
assuming that: 
<UL>
  <LI>when the input represents a valid account number, it is the original 
  number; 
  <LI>at most one digit is garbled; 
  <LI>the scanned image contains no extra segments. </LI></UL>
<P>For example, the following input <PRE>    _  _     _  _  _  _  _ 
  | _| _||_||_ |_   ||_||_|
  ||_  _|  | _||_|  ||_| _|
</PRE>used to be "123456789". 
<P>
<H3>Input Specification</H3>The input file starts with a line with one integer 
specifying the number of account numbers that have to be processed. Each account 
number occupies 3 lines of 27 characters. 
<P>
<H3>Output Specification </H3>For each test case, the output contains one line 
with 9 digits if the correct account number can be determined, the string 
"<CODE>failure</CODE>" if no solutions were found and "<CODE>ambiguous</CODE>" 
if more than one solution was found. 
<P>
<H3>Example Input</H3><PRE>4
    _  _     _  _  _  _  _ 
  | _| _||_||_ |_   ||_||_|
  ||_  _|  | _||_|  ||_| _|
    _  _  _  _  _  _     _ 
|_||_|| || ||_   |  |  ||  
  | _||_||_||_|  |  |  | _|
 _  _  _  _  _  _  _  _  _ 
|_||_||_||_||_||_||_||_||_|
|_||_||_||_||_||_||_||_||_|
 _     _  _  _  _  _  _  _ 
|_|  ||_||_||_||_||_||_||_|
|_|  ||_||_||_||_||_||_||_|
</PRE>
<H3>Example Output</H3><PRE>123456789
ambiguous
failure
878888888
</PRE>
<HR>
This page maintained by <A href="mailto:Ed@Tool.com">Ed Karrels</A>.<BR>Last 
updated January 3, 1998 </BODY></HTML>
