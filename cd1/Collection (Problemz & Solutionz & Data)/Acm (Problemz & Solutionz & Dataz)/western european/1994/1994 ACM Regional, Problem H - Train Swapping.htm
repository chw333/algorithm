<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0048)http://www.karrels.org/Ed/ACM/weur94/prob_h.html -->
<HTML><HEAD><TITLE>1994 ACM Regional, Problem H - Train Swapping</TITLE>
<META content="text/html; charset=ks_c_5601-1987" http-equiv=Content-Type><LINK 
href="mailto:Ed@Tool.com" rev=made>
<META content="MSHTML 5.00.3315.2870" name=GENERATOR></HEAD>
<BODY><EM>Not an official ACM page</EM> <BR>[<A 
href="http://www.karrels.org/Ed/ACM/weur94/index.html">1994 Western European 
Regional problem set</A> | <A href="http://www.karrels.org/Ed/ACM/index.html">My 
ACM problem archive</A> | <A href="http://www.karrels.org/Ed/index.html">my home 
page</A>] 
<HR>

<CENTER>
<H4>1994-1995 ACM International Collegiate Programming Contest<BR>Western 
European Regional</H4>
<H1>Problem H </H1>
<H2>Train Swapping </H2></CENTER>At an old railway station, you may still 
encounter one of the last remaining "train swappers". A train swapper is an 
employee of the railroad, whose sole job it is to rearrange the carriages of 
trains. 
<P>Once the carriages are arranged in the optimal order, all the train driver 
has to do, is drop the carriages off, one by one, at the stations for which the 
load is meant. 
<P>The title "train swapper" stems from the first person who performed this 
task, at a station close to a railway bridge. Instead of opening up vertically, 
the bridge rotated around a pillar in the center of the river. After rotating 
the bridge 90 degrees, boats could pass left or right. The first train swapper 
had discovered that the bridge could be operated with at most two carriages on 
it. By rotating the bridge 180 degrees, the carriages switched place, allowing 
him to rearrange the carriages (as a side effect, the carriages then faced the 
opposite direction, but train carriages can move either way, so who cares). 
<P>Now that almost all train swappers have died out, the railway company would 
like to automate their operation. Part of the program to be developed, is a 
routine which decides for a given train the least number of swaps of two 
adjacent carriages necessary to order the train. Your assignment is to create 
that routine. 
<P>
<H3>Input</H3>The input contains on the first line the number of test cases (N). 
Each test case consists of two input lines. The first line of a test case 
contains an integer L, determining the length of the train (0 &lt;= <EM>L</EM> 
&lt;= 50). The second line of a test case contains a permutation of the numbers 
1 through L, indicating the current order of the carriages. The carriages should 
be ordered such that carriage 1 comes first, then 2, etc. with carriage L coming 
last. 
<P>
<H3>Output</H3>For each test case output the sentence: '<CODE>Optimal train 
swapping takes <EM>S</EM> swaps.</CODE>' where <EM>S</EM> is an integer. 
<P><A href="http://www.karrels.org/Ed/ACM/weur94/prob_h.c">
<H3>Sample Solution</H3></A>
<H3>Sample Input</H3><PRE>3
3
1 3 2
4
4 3 2 1
2
2 1
</PRE>
<H3>Sample Output</H3><PRE>Optimal train swapping takes 1 swaps.
Optimal train swapping takes 6 swaps.
Optimal train swapping takes 1 swaps.
</PRE>
<HR>
This page maintained by <A href="mailto:Ed@Tool.com">Ed Karrels</A>.<BR>Last 
updated September 20, 1999 </BODY></HTML>
