<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0041)http://www.buet.ac.bd/acm/problems/d.html -->
<HTML><HEAD><TITLE>Problem D</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 5.50.4134.100" name=GENERATOR>
<META content="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot" 
name=Template></HEAD>
<BODY vLink=#800080 link=#0000ff><B><FONT size=5>
<P align=center>Problem D</P></FONT><FONT size=6>
<P align=center>Minimal Cover of Prime Implicants</P></FONT>
<P align=center>Input: </B>d.in</P><B>
<P align=center>Output: </B>standard output</P>
<P align=justify>In combinational logic design, a Boolean function is 
classically expressed as sum of minterms. For example, F(x, y, z) = x<FONT 
face=Symbol>¢</FONT> y<FONT face=Symbol>¢</FONT> z + x<FONT face=Symbol>¢</FONT> 
yz + xyz<FONT face=Symbol>¢</FONT> + xyz is a Boolean function, where x<FONT 
face=Symbol>¢</FONT> y<FONT face=Symbol>¢</FONT> z, x<FONT face=Symbol>¢</FONT> 
yz, xyz<FONT face=Symbol>¢</FONT> , and xyz are the <I>minterms (MTs)</I> of the 
function. Usually, minterms are represented using their binary or decimal 
representation. For example, minterm x<FONT face=Symbol>¢</FONT> y<FONT 
face=Symbol>¢</FONT> z can be represented as 001(binary) or simply as 1(decimal) 
and minterm x<FONT face=Symbol>¢</FONT> yz can be represented as 011(binary) or 
3(decimal). Using this numeric representation of minterms, the above function 
can be expressed as F(x, y, z) = <FONT face=Symbol>S</FONT> (1, 3, 6, 7) or F(x, 
y, z) = <FONT face=Symbol>S</FONT> (001, 011, 110, 111). Very often, the binary 
representation of minterms are used for computer based processing of Boolean 
function.</P>
<P align=justify>Using the Boolean algebra theorem Ax + Ax<FONT 
face=Symbol>¢</FONT> = A, we can combine two product terms to generate a reduced 
product term. For example, x<FONT face=Symbol>¢</FONT> y<FONT 
face=Symbol>¢</FONT> z + x<FONT face=Symbol>¢</FONT> yz = x<FONT 
face=Symbol>¢</FONT> z and xyz<FONT face=Symbol>¢</FONT> + xyz = xy. The reduced 
product terms of a function are called <I>prime implicants (PIs)</I> of the 
function. Therefore, a Boolean function can be expressed as sum of prime 
implicants. For example, the above function can be expressed as F(x, y, z) = 
x<FONT face=Symbol>¢</FONT> z + xy. Very often, the prime implicants are 
represented using binary notation, where a missing variable is represented by 
<FONT face=Symbol>-</FONT> . For example, the prime implicant x<FONT 
face=Symbol>¢</FONT> z is represented as 0<FONT face=Symbol>-</FONT> 1 and xy is 
represented as 11<FONT face=Symbol>-</FONT> . Then the above function can be 
expressed as F(x, y, z) = <FONT face=Symbol>S</FONT> ( 0<FONT 
face=Symbol>-</FONT> 1, 11<FONT face=Symbol>-</FONT> ).</P>
<P align=justify>Most of the prime implicant generation algorithms generate more 
prime implicants than the minimum requirement. For example, for the above 
function, minterms 001 and 011 generate the prime implicant 0<FONT 
face=Symbol>-</FONT> 1, minterms 110 and 111 generate the prime implicant 
11<FONT face=Symbol>-</FONT> , and minterms 011 and 111 generate the prime 
implicant <FONT face=Symbol>-</FONT> 11. But the prime implicant <FONT 
face=Symbol>-</FONT> 11 is not required for expressing the function. Therefore, 
given a set of minterms and a set of prime implicants for a function, it is 
required to find a minimal subset of the prime implicants that covers all the 
minterms of the function. The problem is indeed an optimization problem. An 
algorithm exists for this problem called c<I>over most algorithm</I>, which is 
discussed below.</P><I>
<P align=justify>Cost</I> of a prime implicant is the number of 0s and 1s in the 
prime implicant. For example, the cost of the prime implicant 0<FONT 
face=Symbol>-</FONT> 1 is 2. A prime implicant <I>covers</I> a minterm if and 
only if the prime implicant can be expanded to produce the minterm. For example, 
the prime implicant 0<FONT face=Symbol>-</FONT> 1 covers the minterms 001 and 
011. </P>
<P align=justify>In cover most algorithm, the <I>first choice</I> is a prime 
implicant that covers maximum number of minterms. If more than one prime 
implicant cover the same number of minterms, the choice is the prime implicant 
with the minimum cost. Tie is broken by selecting the first prime implicant in 
order. The algorithm is illustrated below for the above function using the 
following table. A x in the table indicates covering.</P><FONT size=2>
<P align=justify>&nbsp;</P>
<P align=justify>&nbsp;</P></FONT>
<P align=center>
<CENTER>
<TABLE cellSpacing=1 cellPadding=7 width=451 border=1>
  <TBODY>
  <TR>
    <TD vAlign=top width="16%"><FONT face="Courier New" size=2>
      <P></FONT><FONT face="Courier New">&nbsp;&nbsp;&nbsp;MT</P>
      <P>PI</FONT></P></TD>
    <TD vAlign=top width="10%"><FONT face="Courier New">
      <P>001</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P>011</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P>110</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P>111</FONT></P></TD>
    <TD vAlign=top width="14%"><FONT face="Courier New">
      <P>Cost</FONT></P></TD>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P>No of minterms covered</FONT></P></TD></TR>
  <TR>
    <TD vAlign=top width="16%"><FONT face="Courier New">
      <P align=justify>0-1</FONT></P></TD>
    <TD vAlign=top width="10%"><FONT face="Courier New">
      <P align=justify>X</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P align=justify>x</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="14%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD></TR>
  <TR>
    <TD vAlign=top width="16%"><FONT face="Courier New">
      <P align=justify>11- </FONT></P></TD>
    <TD vAlign=top width="10%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P align=justify>X</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P align=justify>x</FONT></P></TD>
    <TD vAlign=top width="14%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD></TR>
  <TR>
    <TD vAlign=top width="16%"><FONT face="Courier New">
      <P align=justify>-11</FONT></P></TD>
    <TD vAlign=top width="10%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P align=justify>x</FONT></P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="11%"><FONT face="Courier New">
      <P align=justify>x</FONT></P></TD>
    <TD vAlign=top width="14%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD></TR></TBODY></TABLE></CENTER>
<P></P>
<P align=justify>The first choice is the prime implicant 0<FONT 
face=Symbol>-</FONT> 1. Then the problem reduces to the following table.</P>
<P align=center>
<CENTER>
<TABLE cellSpacing=1 cellPadding=7 width=402 border=1>
  <TBODY>
  <TR>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P>&nbsp;&nbsp;&nbsp;MT</P>
      <P>PI</FONT></P></TD>
    <TD vAlign=top width="13%"><FONT face="Courier New">
      <P>110</FONT></P></TD>
    <TD vAlign=top width="13%"><FONT face="Courier New">
      <P>111</FONT></P></TD>
    <TD vAlign=top width="15%"><FONT face="Courier New">
      <P>Cost</FONT></P></TD>
    <TD vAlign=top width="30%"><FONT face="Courier New">
      <P>No of minterms covered</FONT></P></TD></TR>
  <TR>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P align=justify>11- </FONT></P></TD>
    <TD vAlign=top width="13%"><FONT face="Courier New">
      <P align=justify>x</FONT></P></TD>
    <TD vAlign=top width="13%"><FONT face="Courier New">
      <P align=justify>X</FONT></P></TD>
    <TD vAlign=top width="15%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD>
    <TD vAlign=top width="30%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD></TR>
  <TR>
    <TD vAlign=top width="29%"><FONT face="Courier New">
      <P align=justify>-11</FONT></P></TD>
    <TD vAlign=top width="13%"><FONT face="Courier New">
      <P></FONT>&nbsp;</P></TD>
    <TD vAlign=top width="13%"><FONT face="Courier New">
      <P align=justify>X</FONT></P></TD>
    <TD vAlign=top width="15%"><FONT face="Courier New">
      <P align=justify>2</FONT></P></TD>
    <TD vAlign=top width="30%"><FONT face="Courier New">
      <P align=justify>1</FONT></P></TD></TR></TBODY></TABLE></CENTER>
<P></P>
<P align=justify>The next choice is the prime implicant 11<FONT 
face=Symbol>-</FONT> . Then the problem reduces to null and the minimum cover of 
the given prime implicants is 0<FONT face=Symbol>-</FONT> 1 and 11<FONT 
face=Symbol>-</FONT> .</P>
<P align=justify>You need to write a program to find the minimal cover of prime 
implicants for a given set of prime implicants and a set of minterms for a 
function. You also need to identify whether the given set of prime implicants 
covers all the minterms of the function or not. If the given set of prime 
implicants does not cover all the minterms, the minimal cover produced by this 
algorithm will not cover the given function.</P><B><FONT size=4>
<P align=justify>Input</P></B></FONT>
<P align=justify>The input may contain multiple test cases. Each test case 
starts with three integers in a line for <I>number of variables</I>, <I>number 
of minterms</I>, and <I>number of prime implicants</I> as shown in the sample 
input. In the next line(s) minterms are listed separated by space or new line as 
shown in the sample input. In the following line(s) prime implicants are listed 
separated by space or new line. The range of number of variables is 2 to 20. 
Number of minterms and number of prime implicants will not exceed 200<FONT 
size=2>. </FONT>The input terminates with three zeros for number of variables, 
number of minterms, and number of prime implicants.</P><B><FONT size=4>
<P align=justify>Output</P></B></FONT>
<P align=justify>For each test case in the input, print the test case number 
followed by either <FONT face="Courier New">No of required PIs = 
&lt;<I>value</I>&gt;</FONT> or <FONT face="Courier New">PIs dont cover all 
MTs</FONT> depending on the input case as shown in the sample output. Print a 
blank line between two successive test cases.</P><B><FONT size=4>
<P align=justify>Sample Input</P></B></FONT><FONT face="Courier New"><PRE>4 7 5
0001 0010 0101 0110 1001 1101 1110
--01 -11- 0-1- 0--1 -1-1
4 8 5
0000 0010 0100 1000
1010 1011 1100 1101
---0 -10- 101- 01-- 0-0-
4 9 5
0000 0010 0011 0100 1000 1010 1011 1100 1101
---0 -10- 101- 01-- 0-0-
5 15 6
00110 00100 01110 01100 11000 11010 11110 11100 10110 10100
01111 01101 11111 11101 10001
-11-- --1-0 001-- 11--0 10001 01-11
0 0 0
</PRE></FONT><B><FONT size=4>
<P align=justify>Sample Output</P></B></FONT><FONT face="Courier New"><PRE>Test #1: No of required PIs = 3
Test #2: No of required PIs = 3
Test #3: PIs dont cover all MTs
Test #4: No of required PIs = 4
</PRE></FONT><FONT face="Courier New" size=2>
<P align=justify>&nbsp;</P></FONT></BODY></HTML>
