<?xml version='1.0'?>
<!-- THIS FILE WAS AUTOMATICALLY GENERATED BY ContestGen AT Mon Nov 26 13:56:46 GMT+03:00 2001 -->
<problem id='g'>
<testers>
  <acm-tester
    tests        = '20'
    inputs       = 'library.{test##}'
    answers      = 'library.{test##}a'
    input-names  = 'library.in'
    output-names = 'library.out'
    time-limit   = '5s'
  >
    <checker
       class     = 'pcms2.testlib.Checker'
       program   = '!library.exe'
       command   = '{exec:!/!.!} {input} {output} {answer} result.xml -appes'
       exec-id   = 'bin.x86.exe.win32'
       result    = 'result.xml'
    />
  </acm-tester>
</testers>

<statement>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Library</title>
</head>
<body>

<h2>Library</h2>

<table>
<tr><td colspan="1" rowspan="1"><strong>Input file</strong></td><td colspan="1" rowspan="1"><tt>library.in</tt></td></tr>
<tr><td colspan="1" rowspan="1"><strong>Output file</strong></td><td colspan="1" rowspan="1"><tt>library.out</tt></td></tr>
</table>

<p>Castaway Robinson Crusoe is living alone on a remote island.
One day a ship carrying a royal library has wrecked nearby.
Usually Robinson brings any useful stuff from the shipwreck to his
island, and this time he has brought a big chest with books.</p>

<p><img alt="Sample library picture" src="library.gif" style="float:right"></img>
Robinson has decided to build a bookcase for these books to create
his own library. He cut a rectangular niche in the rock for that purpose,
hammered in wooden pegs, and placed wooden planks on every pair of pegs 
that have the same height, so that all planks are situated horizontally
and suit to act as shelves.</p>

<p>Unfortunately, Robinson has discovered that one especially old and big
tome does not fit in his bookcase. He measured the height and width of this
tome and has decided to redesign his bookcase in such a way, as to completely
fit the tome on one of the shelves, taking into account locations of other
shelves and the dimensions of the niche. With each shelf in the bookcase,
one of the following operations should be made:</p>

<ol>

<li>Leave the shelf on its original place.</li>

<li>Move the shelf to the left or to the right.</li>

<li>Shorten the shelf by cutting off a part of the plank and optionally
move it to the left or to the right.</li>

<li>Move one of the pegs to a different place at the same height and 
move the shelf to the left or to the right.</li>

<li>Shorten the shelf by cutting off a part of the plank, move one of the
pegs to a different place at the same height, and optionally move the
shortened shelf to the left or to the right.</li>

<li>Remove the shelf from the bookcase along with both supporting pegs.</li>
</ol>

<p>We say that the shelf is properly supported by its pegs, if exactly two
distinct pegs support the shelf and the center of the shelf is between its
pegs or coincides with one of the pegs. The original design of Robinson's
library has all the shelves properly supported by their pegs and lengths of
all shelves are integer number of inches. The Robinson may only cut an integer
number of inches from the planks, because he has no tools for more precise
measurements. All remaining shelves after the redesign must be properly
supported by their pegs.</p>

<p>You are to find the way to redesign Robinson's library to fit the special
old tome without changing original design too much. You have to minimize the
number of pegs that are to be removed from their original places during
the redesign (operations 4 and 5 remove one peg, and operation 6 removes
two pegs). If there are different ways to solve the problem, then you are
to find the one that minimizes the total length of planks that are to be
cut off (operations 3 and 5 involve cutting something from the planks,
and operation 6 counts as if cutting off the whole plank). Width of
planks and diameter of pegs shall be considered zero.</p>

<p>The tome may not be rotated. The tome should completely (to all its width)
stand on one of the shelves and may only touch other shelves, their pegs or
niche's edge.</p>

<h3>Input</h3>

<p>The first line of the input file contains four integer numbers XN, YN, XT, and YT,
separated by spaces. They are, correspondingly, width and height of the niche,
and width and height of the old tome in inches (1 &#8804; XN, YN, XT, YT &#8804; 1000).</p>

<p>The second line of the input file contains a single integer number N
(1 &#8804; N &#8804; 100) that represents the number of the shelves. Then N lines follow.
Each line represents a single shelf along with its two supporting pegs, and
contains five integer numbers y<sub>i</sub>, x<sub>i</sub>, l<sub>i</sub>,
x1<sub>i</sub>, x2<sub>i</sub>, separated by spaces, where:</p>

<ul>
<li>y<sub>i</sub> (0 &lt; y<sub>i</sub> &lt; YN) -
    the height of the i<sup>th</sup> shelf above the bottom of the niche in inches.</li>
<li>x<sub>i</sub> (0 &#8804; x<sub>i</sub> &lt; XN) - the distance between 
    the left end of the i<sup>th</sup> shelf and the left edge of the niche in inches.</li>
<li>l<sub>i</sub> (0 &lt; l<sub>i</sub> &#8804; XN - x<sub>i</sub>) - the length
    of the i<sup>th</sup> shelf in inches.</li>
<li>x1<sub>i</sub> (0 &#8804; x1<sub>i</sub> &#8804; l<sub>i</sub>/2) - the distance between
    the left end of the i<sup>th</sup> shelf and its leftmost supporting peg in inches.</li>
<li>x2<sub>i</sub> (l<sub>i</sub>/2 &#8804; x2<sub>i</sub> &#8804; l<sub>i</sub>;
    x1<sub>i</sub> &lt; x2<sub>i</sub>) - the distance between the left end of
    the i<sup>th</sup> shelf and its rightmost supporting peg in inches.</li>
</ul>

<p>All shelves are situated on different heights and are properly supported by 
their pegs. The problem is guaranteed to have a solution for the input data.</p>

<h3>Output</h3>

<p>The output file shall contain two integer numbers separated by a space. 
The first one is the minimal number of pegs that are to be removed by Robinson
from their original locations to place the tome. The seconds one is the minimal 
total length of planks that are to be cut off during the redesign that removes
the least number of pegs.</p>

<h3>Sample input #1</h3>

<pre xml:space="preserve"><tt>11 8 3 4
4
1 1 7 1 4
4 3 7 1 6
7 2 6 3 4
2 0 3 0 3</tt></pre>

<h3>Output for the sample input #1</h3>

<pre xml:space="preserve"><tt>0 0</tt></pre>

<h3>Sample input #2</h3>

<pre xml:space="preserve"><tt>11 8 4 6
4
1 1 7 1 4
4 3 7 1 6
7 2 6 3 4
2 0 3 0 3</tt></pre>

<h3>Output for the sample input #2</h3>

<pre xml:space="preserve"><tt>1 3</tt></pre>

</body>
</html>
</statement>
</problem>
