<?xml version='1.0'?>
<!-- THIS FILE WAS AUTOMATICALLY GENERATED BY ContestGen AT Mon Nov 26 13:56:33 GMT+03:00 2001 -->
<problem id='b'>
<testers>
  <acm-tester
    tests        = '13'
    inputs       = 'bracket.{test##}'
    answers      = 'bracket.{test##}a'
    input-names  = 'bracket.in'
    output-names = 'bracket.out'
    time-limit   = '5s'
  >
    <checker
       class     = 'pcms2.testlib.Checker'
       program   = '!bracket.exe'
       command   = '{exec:!/!.!} {input} {output} {answer} result.xml -appes'
       exec-id   = 'bin.x86.exe.win32'
       result    = 'result.xml'
    />
  </acm-tester>
</testers>

<statement>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Brackets sequence</title>
</head>
<body>

<h2>Brackets sequence</h2>

<table>
<tr><td colspan="1" rowspan="1"><strong>Input file</strong></td><td colspan="1" rowspan="1"><tt>bracket.in</tt></td></tr>
<tr><td colspan="1" rowspan="1"><strong>Output file</strong></td><td colspan="1" rowspan="1"><tt>bracket.out</tt></td></tr>
</table>

<p>Let us define a regular brackets sequence in the following way:</p>

<ol>
<li>Empty sequence is a regular sequence.</li>
<li>If S is a regular sequence, then (S) and [S] are both regular sequences.</li>
<li>If A and B are regular sequences, then AB is a regular sequence.</li>
</ol>

<p>For example, all of the following sequences of characters are regular 
brackets sequences:</p>

<p><tt>()</tt>, <tt>[]</tt>, <tt>(())</tt>, <tt>([])</tt>, <tt>()[]</tt>, <tt>()[()]</tt></p>

<p>And all of the following character sequences are not:</p>

<p><tt>(</tt>, <tt>[</tt>, <tt>)</tt>, <tt>)(</tt>, <tt>([)]</tt>, <tt>([(]</tt></p>

<p>Some sequence of characters '(', ')', '[', and ']' is given. You are to find
the shortest possible regular brackets sequence, that contains the given
character sequence as a subsequence. Here, a string
a<sub>1</sub>a<sub>2</sub>...a<sub>n</sub> is called a subsequence of the string
b<sub>1</sub>b<sub>2</sub>...b<sub>m</sub>, if there exist such indices
1 &#8804; i<sub>1</sub> &lt; i<sub>2</sub> &lt; ... &lt; i<sub>n</sub> &#8804; m,
that a<sub>j</sub>=b<sub>i<sub>j</sub></sub> for all 1 &#8804; j &#8804; n.</p>

<h3>Input</h3>

<p>The input file contains at most 100 brackets (characters '(', ')', '[' and ']')
that are situated on a single line without any other characters among them.</p>

<h3>Output</h3>

<p>Write to the output file a single line that contains some regular brackets sequence
that has the minimal possible length and contains the given sequence as a
subsequence.</p>

<h3>Sample input</h3>

<pre xml:space="preserve"><tt>([(]</tt></pre>

<h3>Sample output for the sample input</h3>

<pre xml:space="preserve"><tt>()[()]</tt></pre>

</body>
</html>
</statement>
</problem>
