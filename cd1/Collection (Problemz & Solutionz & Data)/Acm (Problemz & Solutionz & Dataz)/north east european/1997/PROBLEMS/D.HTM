<HTML><HEAD>
<TITLE>1997-98 ACM North-Eastern European Regional Programming Contest</TITLE>
</HEAD><BODY BACKGROUND=acm_logo.jpg>

<TABLE WIDTH=100%><TR VALIGN=TOP>
<TD WIDTH=12%><B>Problem&nbsp;A</B><BR><A HREF="a.htm">References<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;B</B><BR><A HREF="b.htm">Sum of powers<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;C</B><BR><A HREF="c.htm">Game<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;D</B><BR><A HREF="d.htm">Crossword<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;E</B><BR><A HREF="e.htm">Magic of David Copperfield<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;F</B><BR><A HREF="f.htm">Puncher<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12%><B>Problem&nbsp;G</B><BR><A HREF="g.htm">Flying Stars<A></TD>
<TD WIDTH=0.5%><IMG SRC=vline.gif></TD>
<TD WIDTH=12.5%><B>Problem&nbsp;H</B><BR><A HREF="h.htm">Divide et unita<A></TD>
</TR></TABLE>
<HR>
<FONT SIZE=+2><CENTER><I><A HREF=problems.htm>
1997-98 ACM North-Eastern European Regional Programming Contest
</A></I></CENTER></FONT>
<FONT SIZE=+3 FACE=Arial><CENTER>
Problem D<BR>Crossword
</CENTER></FONT>
<TABLE>
<TR><TD><B>Input file</B></TD><TD>INPUT.TXT</TD></TR>
<TR><TD><B>Output file</B></TD><TD>OUTPUT.TXT</TD></TR>
<TR><TD><B>Time-limit/Test</B></TD><TD>20 seconds</TD></TR></TABLE> 	
<P>A  double  linear  crossword of length L is a string  of  L  lowercase
alphabetic characters arranged in a line in such a way that there  are
at  least two methods (so called decompositions) to split this  string
into the words from the given list. Look at the example for L=17:

<PRE><TT>   |       |       |       |
a n d a t a r e a l l a s t a s k
     |   |     |     |   |
</TT></PRE>

<P>The words were taken from the following list: all, an, and, are, area,
as, ask, at, data, last, or, read, real, task.

<P>The  words  from the first decomposition may not appear in the  second
one  and  vice  versa. In addition, no word can  be  repeated  in  any
decomposition.

<P>No  word in one decomposition can end in the same place of the  string
where a word in the other composition ends, except, naturally, for the
end  of the string (otherwise the crossword can be separated into  two
independent  crosswords). One of the compositions  may  consist  of  a
single word.

<P>You  should  write a program to construct the first, in  lexicographic
order, double linear crossword of length L for a given list of words.

<P>Strings are arranged in the lexicographic order with respect of the
following rules:
<UL>
<LI>If the first letter of a string appears in latin alphabet before
  the first letter of another string, then the former string precedes in
  lexicographic order.
<LI>If the first letters of some strings match, then the
  corresponding letters of these strings are compared until they stop
  matching.
<LI>If a mismatching is not found, the shorter string goes first.
</UL>

<P><FONT FACE=Arial SIZE=+1><B>Input</B></FONT>
<P>The first line of the input file consists of the single integer number
L  (4&lt;=L&lt;=50)  denoting  the  desired crossword length.  The  second  line
consists  of  the single positive integer N (at most 1000)  indicating
the  number  of  words  in the list. Each of the  followings  N  lines
consists  of  a string of 20 or less (but at least 2) latin  lowercase
alphabetic  characters.  The  words  in  the  list  are  arranged   in
lexicographic order and no word is repeated.

<P><FONT FACE=Arial SIZE=+1><B>Output</B></FONT>
<P>For  the given input data set your program should write to the  output
file  the first, in lexicographic order, double linear crossword  with
the  given  length. If it is impossible for the given  input  file  to
construct a double linear crossword with the given length, the program
should  write  only the message "NO SOLUTION" (without  the  quotation
marks).

<P><FONT FACE=Arial SIZE=+1><B>Sample input</B></FONT>
<PRE><TT>17
19
all
an
and
area
as
ask
at
data
do
for
last
of
or
ort
read
real
task
to
tor
</TT></PRE>
<P><FONT FACE=Arial SIZE=+1><B>Output for the sample input</B></FONT>
<PRE><TT>andatareadofortor
</TT></PRE>
</BODY></HTML>
