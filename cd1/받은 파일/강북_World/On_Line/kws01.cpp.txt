#include <fstream.h>
#include <string.h>

void input1( void );
void input2( void );
int process( void );
void output( int res );

int ta[ 100 ][ 100 ] = { 0 };
char arr[ 100 ], ptrn[ 100 ];
int n = 0, st1, st2, l;

int main( void )
{
	input1();
	while( 1 )
	{
		input2();
		output( process() );
	}
}

void input1( void )
{
	char str1[ 100 ], str2[ 100 ];
	int tmp1, tmp2;
	int l1;

aa:
	cout << "Standard pattern ? ";
	cin.getline( str1, 100, ',' );
	cin.getline( str2, 100, '\n' );

	st1 = 0;
	tmp1 = strlen( str1 );
	if( tmp1 > 5 || tmp1 < 1 ) goto aa;
	for( l1 = 0; l1 < tmp1; l1++ )
	{
		if( str1[ l1 ] == 'G' || str1[ l1 ] == 'R' )
		{
			if( n > 0 ) ta[ n - 1 ][ n ] = 1;
			arr[ n++ ] = str1[ l1 ];
		}
		else if( str1[ l1 ] == 'N' )
		{
			ta[ n - 1 ][ n - 1 ] = 1;
		}
		else
		{
			goto aa;
		}
	}
	ta[ n - 1 ][ 0 ] = 1; ta[ n - 1 ][ n ] = 1;
	st2 = n;
	tmp1 = strlen( str2 );
	if( tmp1 > 5 || tmp1 < 1 ) goto aa;
	for( l1 = 0; l1 < tmp1; l1++ )
	{
		if( str2[ l1 ] == 'G' || str2[ l1 ] == 'R' )
		{
			ta[ n - 1 ][ n ] = 1;
			arr[ n++ ] = str2[ l1 ];
		}
		else if( str2[ l1 ] == 'N' )
		{
			ta[ n - 1 ][ n - 1 ] = 1;
		}
		else
		{
			goto aa;
		}
	}
	ta[ n - 1 ][ 0 ] = 1;
	ta[ n - 1 ][ tmp2 ] = 1;
}

void input2( void )
{
	int l1;

bb:
	cout << "Input pattern ? "; cin.getline( ptrn, 100, '\n' );
	l = strlen( ptrn );

	if( l > 20 || l < 1 ) goto bb;
	for( l1 = 0; l1 < l; l1++ )
	{
		if( ptrn[ l1 ] != 'R' && ptrn[ l1 ] != 'G' ) break;
	}
	if( l1 != l ) { cout << "Input Error!!!" << endl; goto bb; }
}

int process( void )
{
	int chk[ 100 ] = { 0 };
	int chk2[ 100 ];
	int l1, l2, l3;

	chk[ st1 ] = chk[ st2 ] = 1;
	for( l1 = 0; l1 < l; l1++ )
	{
		for( l2 = 0; l2 < n; l2++ )
		{
			chk2[ l2 ] = 0;
			if( arr[ l2 ] != ptrn[ l1 ] )
			{
				chk[ l2 ] = 0;
			}
		}
		for( l2 = 0; l2 < n; l2++ )
		{
			if( chk[ l2 ] == 1 )
			{
				for( l3 = 0; l3 < n; l3++ )
				{
					if( ta[ l2 ][ l3 ] == 1 )
					{
						chk2[ l3 ] = 1;
					}
				}
			}
		}
		for( l2 = 0; l2 < n; l2++ )
		{
			chk[ l2 ] = chk2[ l2 ];
		}
	}

	if( chk[ st1 ] == 1 || chk[ st2 ] == 1 ) return 1;
	return 0;
}

void output( int res )
{
	if( res == 0 ) cout << "Differnt." << endl;
	else cout << "Similar." << endl;
}