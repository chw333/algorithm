<html>

<head>
<meta http-equiv="content-type" content="text/html; charset=ks_c_5601-1987">
<title>교차하지 않는 원의 현들의 최대 집합</title>
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">
<p align="center"><b><font color="#0066CC" size="5">교</font></b><font color="#0066CC" size="5"><b>차하지 
않는 원의 현들의 최대 집합</b></font></p>
<p><font size="2">문제 설명</font></p>
<p><font size="2">평면 상에 있는 원의 둘레에 100개의 점이 일정한 간격으로 시계방향으로 
번호가 1, 2, ..., 100으로 붙어져 있다. 이 점들을 끝점으로 갖는 N개의 선분(원의 
현)이 입력으로 주어질 때, 이들 중에서 서로 교차하지 않는 것들을 최대한 많이 
찾아서 그 개수를 출력하는 프로그램을 작성하라.(단, 1&lt;=N&lt;=50이고, 주어진 
각 점은 많아야 한 현의 끝점이 될 수 있다.)</font></p>
<p><font size="2">풀 &nbsp;이</font></p>
<p><font size="2">이 문제는 동적계획법을 이용해 풀 수 있는 문제이다. 물론 입력데이터가 
원의 꼴로 주어지기 때문에 당황스러울수도 있지만, 사실 수직선상의 문제로 변환할 
수있는 문제이다. 원에서 100과 1사이를 자르면,</font></p>
<p align="center"><font size="2"><img src="images/dynamic1.jpg" width="317" height="365" border="0"></font></p>
<p><font size="2">선분들이 서로 겹치지 않게 하면서 최대한 많이 그리는 문제로 
바꾸었음 알 수있다. 물론 이렇게 문제를 바꾸더라도 궁극적으로 문제는 같으며 답이 
달라지지 않는다. 어떤 문제든지 그 문제가 접근하기 어려운 형태라면 변형을 통해 
더 접근이 쉬운 문제로 바꾸는 것이 중요하다. 일단 동적계획법으로 문제를 해결하기 
위해 부분문제 C[i,j]를 정의해보자. C[i,j]는 i점부터 j점까지의 구간에서 최대로 
그을 수 있는 현의 개수라 하자. 이 때의 j점의 입장에서 생각해 본다면, j점은 구간 
[i,j]사이의 한 점 k와 현으로 연결되어 있을 것이다. (연결되지 있지 않은 경우도 
있을 수 있는데, 이것은 k=j인 특별한 경우로 생각하면 되니깐 별문제는 없다. j와 
k가 현으로 연결된다면, 두 개의 고립된 구간이 생기게 된다. 이것은 현을 하나 그음으로써 
원래의 문제가 작은 두 개의 문제로 나누어짐을 의미한다.</font></p>
<p align="center"><font size="2"><img src="images/dynamic2.jpg" width="217" height="81" border="0"></font></p>
<p><font size="2">위의 그림에서 보듯 j와 k를 연결하는 현을 그음으로써 두개의 
고립된 구간 [i,k-1]과 [k+1,j-1]이 만들어 졌다. 고립된 구간이라는 말은 그 구간 
안의 현들이 구간 밖으로 나갈 수 없다는 말인데, 만약 현들이 구간 밖으로 나가게 
된다면 다른 현들과 서로 겹치게 되기 때문이다. 이상에서 정리한 것들을 점화식으로 
표현하면,</font></p>
<p align="center"><font size="2">&nbsp;C[i,j] = max{C[i,k-1] + C[k+1,j-1] + 
q[k,j]} , (i&lt;=k&lt;=j)</font></p>
<p><font size="2">q[i,j]는 입력 데이터에 i와 j를 잇는 현이 있다면 1, 없으면 
0이 된다. 위의 식에서 max란 k의 값에 따라서 생길 수 있는 집합의 원소들의 최대값을 
뜻한다.</font></p>
</body>

</html>
