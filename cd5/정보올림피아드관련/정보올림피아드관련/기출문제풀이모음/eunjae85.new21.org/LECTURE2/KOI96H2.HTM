<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<title>교차하지 않는 현들의 최대 집합</title>
<meta name="generator" content="Namo WebEditor v4.0(Trial)">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">

<p>교차하지 않는 현들의 최대 집합</p>
<p>이 문제는 동적 계획법을 이용해서 풀 수 있는 문제입니다. 먼저 <a href="http://www.icc.or.kr">http://www.icc.or.kr</a> 
에 가셔서 예제데이터가 어떻게 생겼는지 보시기 바랍니다.</p>
<p>이 문제는 데이터가 원으로 주어진다는 점에서 처음부터 어렵게 느껴지는게 사실입니다. 
하지만 이건 단순히 문제를 출제한 사람의 눈속임일 뿐이고 수직선상의 문제로 변환할 
수 있습니다. 한번 원에서, 100과 1사이의 점을 잘라서 펼처보면 다음과 같은 모양이 
될 것입니다.</p>
<p align="center"><img src="koi96h2.gif" width="422" height="180" border="0"></p>
<p align="left">원의 문제를 단순히 수직선상의 문제로 바꿔도 문제는 같음을 알 
수 있습니다. 이렇듯 문제를 보면 먼저 어떻게 좀 더 편하게 풀 수 있도록 문제를 
변형할 수 있는지를 알아보는 것이 중요합니다.</p>
<p align="left">이제 점화식을 세워보도록 하겠습니다. 처음 보는 문제의 점화식을 
세우는 것은 그리 특별한 방법이 있는 것도 아닙니다. 마치 수학에서의 인수분해처럼, 
자꾸 하다보면 요령도 생기고 일종의 법칙같은 것들도 생기게 되는 것입니다. 문제를 
보면 단순히 해답부터 찾을 것이 아니라 최소한 1~2주일은 깊게 생각해 보는 것이 
중요합니다. 그러고나서 해답을 보는 것이 그러지 않는 것보다 10배는 효과적이라고 
자신있게 말할 수 있습니다.</p>
<p align="left">일단 부분문제 C를 정의해 보도록 하겠습니다.</p>
<p align="left"><font face="돋움" color="navy">C[i, j] = i점부터 j점까지의 구간에서 
최대로 그을 수 있는 현의 개수</font></p>
<p align="left">이때 j점의 입장에서 생각해 본다면, j점은 구간 [i, j]사이의 한 
점 k와 현으로 연결되어 있을 것입니다. (연결되지 않더라도 j점이 j와 연결되는 
것을 하나의 현으로 봅니다. 이때 이 현의 가중치는 0이겠죠..)</p>
<p align="left">k점과 j점이 현으로써 연결된다면 [i, j]구간은 이 현으로 인해 
두 개로 쪼개집니다. 하나는 [i, k-1]구간이고 또 하나는 [k + 1, j - 1] 구간입니다. 
이 구간은 고립되어 있습니다. 이 구간 밖으로 나가는 현이 있다면 이건 현들이 겹치는 
것을 뜻하는 것입니다. 고립된 구간이 생긴다는 것은 부분문제로 나뉜다는 것이죠. 
사족은 그만 붙이고 점화식을 정리하면,</p>
<p align="left">C[i, j] = Max {C[i, k - 1] + C[k + 1, j - 1] + q[k, j]} 단, 
(i &lt;= k &lt;= j)</p>
<p align="left">q[i, j] = i와 j를 잇는 현이 있다면 1, 없으면 0</p>
<p align="left">이 됩니다. 소스를 보면서 생각해 보시면 좀 더 편할 것입니다.</p>
<p align="left">아래 소스에서는 k는 i와 j 사이의 간격의 크기, l은 i와 j 사이의 
한 점(위에서 설명한 k)입니다. 혼동하지 마시길..</p>
<p><font face="굴림체">program koreaolympiadininformaticshighschoolninetysixsecondproblemhekhekgilda2gerjiweryo;</font></p>
<p><font face="굴림체">const<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;infile &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'input.txt';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outfile &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'output.txt';</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;adj &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array[ 0..101, 0..101 ] of boolean;<br>
&nbsp;&nbsp;&nbsp;dyn &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array[ 0..101, 0..101 ] of integer;</font></p>
<p><font face="굴림체">procedure input;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;inf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text;<br>
&nbsp;&nbsp;&nbsp;t, i, a, b &nbsp;&nbsp;: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign( inf, infile );<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reset( inf );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read( inf, t );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for i := 1 to t do<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read( inf, a, b 
);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adj[ a, b ] := true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adj[ b, a ] := true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close( inf );<br>
end;</font></p>
<p><font face="굴림체">procedure solve;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;k, i, j, l &nbsp;&nbsp;: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer;<br>
&nbsp;&nbsp;&nbsp;adven &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;integer;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for k := 1 to n - 1 do &nbsp;{k : interval}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for j := k + 1 to n do 
&nbsp;{j : endpoint}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i 
:= j - k; &nbsp;{i : startpoint}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for 
l := i to j do &nbsp;{l : middlepoint}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if 
adj[ i, j ] then adven := 1 else adven := 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if 
dyn[ i, j ] &lt; dyn[ i, l - 1 ] + dyn[ l + 1, j - 1 ] + adven then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dyn[ 
i, j ] := dyn[ i, l - 1 ] + dyn[ l + 1, j - 1 ] + adven;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end;</font></p>
<p><font face="굴림체">end;</font></p>
<p><font face="굴림체">procedure output;</font></p>
<p><font face="굴림체">var<br>
&nbsp;&nbsp;&nbsp;ouf : text;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assign( ouf, outfile );<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrite( ouf );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writeln( ouf, dyn[ 1, 100 
] );</font></p>
<p><font face="굴림체">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close( ouf );<br>
end;</font></p>
<p><font face="굴림체">begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solve;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output;<br>
end.</font></p>
</body>

</html></html>