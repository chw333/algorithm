<html>

<head>
<meta http-equiv="content-type" content="text/html; charset=euc-kr">
<title>트리의 개념 이해와 표현 방법 연습</title>
<meta name="generator" content="Namo WebEditor v5.0">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">
<p align="center"><b><font color="#0066CC" size="5">트리(Tree)</font></b></p>
<p><font size="2">1. 트리의 개념</font></p>
<p><font size="2">&nbsp;&nbsp;정의 : 싸이클이 없는 연결 그래프(A connected graph 
which contains no cycles)</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">직관적인 개념</font></p>
<p><font size="2">&nbsp;&nbsp;정보의 각 항목들을 가지로 연결하여 구성한 것으로 
위와 아래의 계층적인 서열 구조를 가진다. (트리 = 계층구조)</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">2. 주로 용어</font></p>
<p><font size="2">노드, 에지</font></p>
<p><font size="2">부모, 자식, 조상</font></p>
<p><font size="2">디그리(degree), 깊이(depth)</font></p>
<p align="center"><font size="2"><img src="images/tree-01.jpg" width="339" height="171" border="0"></font></p>
<p><font size="2">3. 트리의 구현</font></p>
<p><font size="2">그림 1과 같은 예제 트리가 있다고 할 때, 이 트리는 다음과 같이 
괄호를 이용하여 표현할 수 있다.</font></p>
<p align="center"><font size="2">(A(B(E(K,L),F),C(G),D(H(M),I,J)))</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">&nbsp;&nbsp;이제 이 트리를 메모리 상에서 어떻게 표현할 수 
있는지를 살펴보자.</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">좋지 않은 표현의 예 : 데이터를 저장하고 이 노드에 연결된 모든 
자식 노드를 다 표시하는 방법</font></p>
<table align="center" border="1" cellspacing="0" width="100" bordercolordark="white" bordercolorlight="black">
    <tr>
        <td width="20" height="20">
            <p><font size="2">data</font></p>
        </td>
        <td width="20" height="20">
            <p><font size="2">link1</font></p>
        </td>
        <td width="20" height="20">
            <p><font size="2">link1</font></p>
        </td>
        <td width="20" height="20">
            <p><font size="2">.......</font></p>
        </td>
        <td width="20" height="20">
            <p><font size="2">linkn</font></p>
        </td>
    </tr>
</table>
<p><font size="2">&nbsp;&nbsp;모든 노드가 자식의 수에 따라 서로 다른 형태의 
자료 구조를 가지게 된다. 이렇게 동일한 어떤 항목을 서로 다른 자료 구조로 표현하는 
것은 매우 좋지 않은 자료 구조이다.</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">왼쪽 자식 - 오른쪽 형제 표현 방법</font></p>
<table align="center" border="1" cellspacing="0" width="100%" bordercolordark="white" bordercolorlight="black">
    <tr>
        <td width="748" colspan="2">
            <p align="center"><font size="2">데이터</font></p>
        </td>
    </tr>
    <tr>
        <td width="371">
            <p align="center"><font size="2">왼쪽 자식의 포인터</font></p>
        </td>
        <td width="371">
            <p align="center"><font size="2">오른쪽&nbsp;형체 노드의 포인터</font></p>
        </td>
    </tr>
</table>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">이렇게 표현하면 그림 1의 트리는 메모리상에서 그림 2와 같이 
표현한다.</font></p>
<p align="center"><font size="2"><img src="images/tree-02.jpg" width="341" height="198" border="0"></font></p>
<p align="center"><font size="2">그림 2 : 앞에서 살펴본 그림 1의 트리를 &quot;왼쪽 
자식-오른쪽 형제 노드&quot;를 이용하여 표현한 예</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">&nbsp;&nbsp;그림 2에서 볼 수 있는 바와 같이, 왼쪽 자식 - 오른쪽 
형제 노드를 이용한 표현법은 모든 노드가 2개씩의 포인터를 가지는 형태로 표현할 
수 있다. 따라서 노드를 생성하고 삭제할 때, 모든 노드에 적용이 가능한 일반적인 
형태로 프로그램을 작성할 수 있다.</font></p>
<p><font size="2">&nbsp;</font></p>
</body>

</html>
