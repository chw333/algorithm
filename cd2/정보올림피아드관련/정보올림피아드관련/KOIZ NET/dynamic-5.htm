<html>

<head>
<meta http-equiv="content-type" content="text/html; charset=ks_c_5601-1987">
<title>연속 부분 최대곱</title>
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">
<p align="center"><font color="#0066CC" size="5"><b>연속 부분 최대곱</b></font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">문제 설명</font></p>
<p><font size="2">N개의 실수가 한 줄로 나열되어 있을때, 1개 이상의 연속된 수들의 
곱이 최대가 되는 부분을 찾아 그 곱을 출력하는 프로그램을 작성하시오.(단, 1&lt;=N&lt;=10,000)</font></p>
<p><font size="2">풀 이</font></p>
<p><font size="2">가장 기본적인 풀이는 i부터 j까지의 모든 구간 [i,j]의 곱을 
구하는 방법이다. 이 방법으로 프로그램을 작성하면, 우선 구간[i,j]을 정하는데 
N^2번의 루프가 필요하고, 전체 곱을 구하는데 N번의 루프가 필요하므로 총시간 복잡도는 
O(N^3)가 된다. 그런데 이 문제에서의 N의 최대 크기는 10,000이므로, 이 알고리즘을 
사용할 때 제한 시간이 주어진다면, 제한시간 내에 답을 구할 수 없다. 따라서 더 
낮은 시간 복잡도를 갖는 알고리즘을 설계해야 한다. 이 문제는 동적 계획법을 이용하면, 
O(N)만에 답을 구할 수가 있다.</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">a[i]가 i번째 입력 데이터를 나타낸다고 하고, M[j]를 [i,j]구간의 
최대 곱이라고 하자. 예를 들면, M[4]는 [1,4], [2,4], [3,4], [4,4] 구간 중 최대 
곱이다. 이 때 우리가 구하고자 하는 답은 M[1], M[2], M[3], ... , M[n]중에 반드시 
있을 것이다. 즉, 우리는 M[1] - M[N]을 구함으로 써 문제의 답을 찾을 수 있다. 
일단 M[1]은 [1,1]구간의 최대 곱이므로 M[1]=a[1]이다. M[j]의 값은 i가 어떤 수가 
될지 알 수 없지만, i가 j보다 작다면 a[i]*a[i+1]*a[i+2]*...*a[j-1]로써 구할 수 
있다. 그런데 우리는 M[j]가 최대 곱이라고 정의했고, a[j]는 반드시 사용해야 하므로, 
a[i]*a[i+1]*a[i+2]*...*a[j-1]의 값 역시 최대가 되어야 할 것이다. 이제, t=j-1이라고 
하자, 그렇다면 a[i]*a[i+1]*a[i+2]*...*a[j-1]=a[i]*a[i+1]*a[i+2]*...*a[t] = M[t] 
= M[j-1] 즉, M[j]=[i,j]=a[j]가 될 것이다. i는 j와 같거나 j보다 작은 두가지 경우 
중에 하나이므로, M[j]=M[j-1]*a[j] 또는 a[j]가 될 것이다.</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">&nbsp;M[j] = a[1] ( j = 1일 때)M[j] = M[j-1]*a[j] 또는 a[j] 
중 큰 값 (j&gt;1 일때)</font></p>
<p><font size="2">위의 점화식을 가지고 M[1]부터 M[N]까지 차례로 구하면서 최대값을 
찾으면 된다.</font></p>
<p><font size="2">&nbsp;</font></p>
<p><font size="2">&nbsp; 위의 문제에서는 주어지는 수가 모두 양의 실수이다. 만일 
문제에 음의 실수도 포함된다면 어떻게 문제를 해결한 것인가?</font></p>
</body>

</html>
